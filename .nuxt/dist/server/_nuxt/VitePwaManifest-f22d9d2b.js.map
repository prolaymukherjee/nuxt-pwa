{"version":3,"file":"VitePwaManifest-f22d9d2b.js","sources":["../../../../node_modules/@unhead/vue/dist/index.mjs","../../../../node_modules/@vite-pwa/nuxt/dist/runtime/VitePwaManifest.mjs"],"sourcesContent":["import { whitelistSafeInput, unpackMeta, composableNames } from 'unhead';\r\nexport { createHeadCore } from 'unhead';\r\nimport { u as useHead, h as headSymbol, r as resolveUnrefHeadInput, s as serverUseHead } from './shared/vue.505b826e.mjs';\r\nexport { V as VueReactiveUseHeadPlugin, a as createHead, c as createServerHead, i as injectHead } from './shared/vue.505b826e.mjs';\r\nimport { getCurrentInstance, ref, watchEffect } from 'vue';\r\nimport { asArray } from '@unhead/shared';\r\n\r\nconst VueHeadMixin = {\r\n  created() {\r\n    const instance = getCurrentInstance();\r\n    if (!instance)\r\n      return;\r\n    const options = instance.type;\r\n    if (!options || !(\"head\" in options))\r\n      return;\r\n    const source = typeof options.head === \"function\" ? () => options.head.call(instance.proxy) : options.head;\r\n    useHead(source);\r\n  }\r\n};\r\n\r\nconst Vue2ProvideUnheadPlugin = function(_Vue, head) {\r\n  _Vue.mixin({\r\n    beforeCreate() {\r\n      const options = this.$options;\r\n      const origProvide = options.provide;\r\n      options.provide = function() {\r\n        let origProvideResult;\r\n        if (typeof origProvide === \"function\")\r\n          origProvideResult = origProvide.call(this);\r\n        else\r\n          origProvideResult = origProvide || {};\r\n        return {\r\n          ...origProvideResult,\r\n          [headSymbol]: head\r\n        };\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nfunction useHeadSafe(input, options = {}) {\r\n  return useHead(input, { ...options, transform: whitelistSafeInput });\r\n}\r\n\r\nfunction useSeoMeta(input, options) {\r\n  const headInput = ref({});\r\n  watchEffect(() => {\r\n    const resolvedMeta = resolveUnrefHeadInput(input);\r\n    const { title, titleTemplate, ...meta } = resolvedMeta;\r\n    headInput.value = {\r\n      title,\r\n      titleTemplate,\r\n      meta: unpackMeta(meta)\r\n    };\r\n  });\r\n  return useHead(headInput, options);\r\n}\r\n\r\nfunction useServerHead(input, options = {}) {\r\n  return serverUseHead(input, { ...options, mode: \"server\" });\r\n}\r\n\r\nfunction useServerHeadSafe(input, options = {}) {\r\n  return useHeadSafe(input, { ...options, mode: \"server\" });\r\n}\r\n\r\nfunction useServerSeoMeta(input, options) {\r\n  return useSeoMeta(input, { ...options || {}, mode: \"server\" });\r\n}\r\n\r\nfunction useTagTitle(title) {\r\n  return useHead({ title });\r\n}\r\nfunction useTitleTemplate(titleTemplate) {\r\n  return useHead({ titleTemplate });\r\n}\r\nfunction useTagMeta(meta) {\r\n  return useHead({ meta: asArray(meta) });\r\n}\r\nfunction useTagMetaFlat(meta) {\r\n  const input = ref({});\r\n  watchEffect(() => {\r\n    input.value = unpackMeta(resolveUnrefHeadInput(meta));\r\n  });\r\n  return useHead({ meta: input });\r\n}\r\nfunction useTagLink(link) {\r\n  return useHead({ link: asArray(link) });\r\n}\r\nfunction useTagScript(script) {\r\n  return useHead({ script: asArray(script) });\r\n}\r\nfunction useTagStyle(style) {\r\n  return useHead({ style: asArray(style) });\r\n}\r\nfunction useTagNoscript(noscript) {\r\n  return useHead({ noscript: asArray(noscript) });\r\n}\r\nfunction useTagBase(base) {\r\n  return useHead({ base });\r\n}\r\nfunction useHtmlAttrs(attrs) {\r\n  return useHead({ htmlAttrs: attrs });\r\n}\r\nfunction useBodyAttrs(attrs) {\r\n  return useHead({ bodyAttrs: attrs });\r\n}\r\nfunction useServerTagTitle(title) {\r\n  return useServerHead({ title });\r\n}\r\nfunction useServerTitleTemplate(titleTemplate) {\r\n  return useServerHead({ titleTemplate });\r\n}\r\nfunction useServerTagMeta(meta) {\r\n  return useServerHead({ meta: asArray(meta) });\r\n}\r\nfunction useServerTagMetaFlat(meta) {\r\n  const input = ref({});\r\n  watchEffect(() => {\r\n    input.value = unpackMeta(resolveUnrefHeadInput(meta));\r\n  });\r\n  return useServerHead({ meta: input });\r\n}\r\nfunction useServerTagLink(link) {\r\n  return useServerHead({ link: asArray(link) });\r\n}\r\nfunction useServerTagScript(script) {\r\n  return useServerHead({ script: asArray(script) });\r\n}\r\nfunction useServerTagStyle(style) {\r\n  return useServerHead({ style: asArray(style) });\r\n}\r\nfunction useServerTagNoscript(noscript) {\r\n  return useServerHead({ noscript: asArray(noscript) });\r\n}\r\nfunction useServerTagBase(base) {\r\n  return useServerHead({ base });\r\n}\r\nfunction useServerHtmlAttrs(attrs) {\r\n  return useServerHead({ htmlAttrs: attrs });\r\n}\r\nfunction useServerBodyAttrs(attrs) {\r\n  return useHead({ bodyAttrs: attrs });\r\n}\r\n\r\nconst coreComposableNames = [\r\n  \"injectHead\"\r\n];\r\nconst unheadVueComposablesImports = {\r\n  \"@unhead/vue\": [...coreComposableNames, ...composableNames]\r\n};\r\n\r\nexport { Vue2ProvideUnheadPlugin, VueHeadMixin, headSymbol, resolveUnrefHeadInput, unheadVueComposablesImports, useBodyAttrs, useHead, useHeadSafe, useHtmlAttrs, useSeoMeta, useServerBodyAttrs, useServerHead, useServerHeadSafe, useServerHtmlAttrs, useServerSeoMeta, useServerTagBase, useServerTagLink, useServerTagMeta, useServerTagMetaFlat, useServerTagNoscript, useServerTagScript, useServerTagStyle, useServerTagTitle, useServerTitleTemplate, useTagBase, useTagLink, useTagMeta, useTagMetaFlat, useTagNoscript, useTagScript, useTagStyle, useTagTitle, useTitleTemplate };\r\n","import { defineComponent, ref } from \"vue\";\r\nimport { pwaInfo } from \"virtual:pwa-info\";\r\nimport { useHead } from \"#imports\";\r\nexport default defineComponent({\r\n  async setup() {\r\n    if (pwaInfo) {\r\n      const meta = ref({ link: [] });\r\n      useHead(meta);\r\n      const { webManifest } = pwaInfo;\r\n      if (webManifest) {\r\n        const { href, useCredentials } = webManifest;\r\n        if (useCredentials) {\r\n          meta.value.link.push({\r\n            rel: \"manifest\",\r\n            href,\r\n            crossorigin: \"use-credentials\"\r\n          });\r\n        } else {\r\n          meta.value.link.push({\r\n            rel: \"manifest\",\r\n            href\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return () => null;\r\n  }\r\n});\r\n"],"names":[],"mappings":";;;AAiJA,MAAM,sBAAsB;AAAA,EAC1B;AACF;AAAA,CACoC;AAAA,EAClC,eAAe,CAAC,GAAG,qBAAqB,GAAG,eAAe;AAC5D;;ACnJA,MAAe,qBAAA,gCAAgB;AAAA,EAC7B,MAAM,QAAQ;AACZ,QAAI,SAAS;AACX,YAAM,OAAO,IAAI,EAAE,MAAM,CAAA,EAAI,CAAA;AAC7B,cAAQ,IAAI;AACZ,YAAM,EAAE,YAAa,IAAG;AACxB,UAAI,aAAa;AACf,cAAM,EAAE,MAAM,eAAgB,IAAG;AACjC,YAAI,gBAAgB;AAClB,eAAK,MAAM,KAAK,KAAK;AAAA,YACnB,KAAK;AAAA,YACL;AAAA,YACA,aAAa;AAAA,UACzB,CAAW;AAAA,QACX,OAAe;AACL,eAAK,MAAM,KAAK,KAAK;AAAA,YACnB,KAAK;AAAA,YACL;AAAA,UACZ,CAAW;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACD,WAAO,MAAM;AAAA,EACd;AACH,CAAC;","x_google_ignoreList":[0,1]}