{"version":3,"file":"workbox-704b507d.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-precaching/createHandlerBoundToURL.js"],"sourcesContent":["\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:core:6.5.3'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2019 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst logger = (process.env.NODE_ENV === 'production'\r\n    ? null\r\n    : (() => {\r\n        // Don't overwrite this value if it's already set.\r\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\r\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\r\n            self.__WB_DISABLE_DEV_LOGS = false;\r\n        }\r\n        let inGroup = false;\r\n        const methodToColorMap = {\r\n            debug: `#7f8c8d`,\r\n            log: `#2ecc71`,\r\n            warn: `#f39c12`,\r\n            error: `#c0392b`,\r\n            groupCollapsed: `#3498db`,\r\n            groupEnd: null, // No colored prefix on groupEnd\r\n        };\r\n        const print = function (method, args) {\r\n            if (self.__WB_DISABLE_DEV_LOGS) {\r\n                return;\r\n            }\r\n            if (method === 'groupCollapsed') {\r\n                // Safari doesn't print all console.groupCollapsed() arguments:\r\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\r\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\r\n                    console[method](...args);\r\n                    return;\r\n                }\r\n            }\r\n            const styles = [\r\n                `background: ${methodToColorMap[method]}`,\r\n                `border-radius: 0.5em`,\r\n                `color: white`,\r\n                `font-weight: bold`,\r\n                `padding: 2px 0.5em`,\r\n            ];\r\n            // When in a group, the workbox prefix is not displayed.\r\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\r\n            console[method](...logPrefix, ...args);\r\n            if (method === 'groupCollapsed') {\r\n                inGroup = true;\r\n            }\r\n            if (method === 'groupEnd') {\r\n                inGroup = false;\r\n            }\r\n        };\r\n        // eslint-disable-next-line @typescript-eslint/ban-types\r\n        const api = {};\r\n        const loggerMethods = Object.keys(methodToColorMap);\r\n        for (const key of loggerMethods) {\r\n            const method = key;\r\n            api[method] = (...args) => {\r\n                print(method, args);\r\n            };\r\n        }\r\n        return api;\r\n    })());\r\nexport { logger };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../../_version.js';\r\nexport const messages = {\r\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\r\n        if (!paramName || !validValueDescription) {\r\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\r\n        }\r\n        return (`The '${paramName}' parameter was given a value with an ` +\r\n            `unexpected value. ${validValueDescription} Received a value of ` +\r\n            `${JSON.stringify(value)}.`);\r\n    },\r\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\r\n        if (!moduleName || !className || !funcName || !paramName) {\r\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\r\n        }\r\n        return (`The parameter '${paramName}' passed into ` +\r\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\r\n    },\r\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\r\n        if (!expectedType || !paramName || !moduleName || !funcName) {\r\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\r\n        }\r\n        const classNameStr = className ? `${className}.` : '';\r\n        return (`The parameter '${paramName}' passed into ` +\r\n            `'${moduleName}.${classNameStr}` +\r\n            `${funcName}()' must be of type ${expectedType}.`);\r\n    },\r\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\r\n        if (!expectedClassName || !moduleName || !funcName) {\r\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\r\n        }\r\n        const classNameStr = className ? `${className}.` : '';\r\n        if (isReturnValueProblem) {\r\n            return (`The return value from ` +\r\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\r\n                `must be an instance of class ${expectedClassName}.`);\r\n        }\r\n        return (`The parameter '${paramName}' passed into ` +\r\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\r\n            `must be an instance of class ${expectedClassName}.`);\r\n    },\r\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\r\n        if (!expectedMethod ||\r\n            !paramName ||\r\n            !moduleName ||\r\n            !className ||\r\n            !funcName) {\r\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\r\n        }\r\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\r\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\r\n    },\r\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\r\n        return (`An unexpected entry was passed to ` +\r\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\r\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\r\n            `strings with one or more characters, objects with a url property or ` +\r\n            `Request objects.`);\r\n    },\r\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\r\n        if (!firstEntry || !secondEntry) {\r\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\r\n        }\r\n        return (`Two of the entries passed to ` +\r\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\r\n            `${firstEntry} but different revision details. Workbox is ` +\r\n            `unable to cache and version the asset correctly. Please remove one ` +\r\n            `of the entries.`);\r\n    },\r\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\r\n        if (!thrownErrorMessage) {\r\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\r\n        }\r\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\r\n            `The thrown error message was: '${thrownErrorMessage}'.`);\r\n    },\r\n    'invalid-cache-name': ({ cacheNameId, value }) => {\r\n        if (!cacheNameId) {\r\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\r\n        }\r\n        return (`You must provide a name containing at least one character for ` +\r\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\r\n            `'${JSON.stringify(value)}'`);\r\n    },\r\n    'unregister-route-but-not-found-with-method': ({ method }) => {\r\n        if (!method) {\r\n            throw new Error(`Unexpected input to ` +\r\n                `'unregister-route-but-not-found-with-method' error.`);\r\n        }\r\n        return (`The route you're trying to unregister was not  previously ` +\r\n            `registered for the method type '${method}'.`);\r\n    },\r\n    'unregister-route-route-not-registered': () => {\r\n        return (`The route you're trying to unregister was not previously ` +\r\n            `registered.`);\r\n    },\r\n    'queue-replay-failed': ({ name }) => {\r\n        return `Replaying the background sync queue '${name}' failed.`;\r\n    },\r\n    'duplicate-queue-name': ({ name }) => {\r\n        return (`The Queue name '${name}' is already being used. ` +\r\n            `All instances of backgroundSync.Queue must be given unique names.`);\r\n    },\r\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\r\n        return (`The '${methodName}()' method can only be used when the ` +\r\n            `'${paramName}' is used in the constructor.`);\r\n    },\r\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\r\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\r\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\r\n            `valid input types.`);\r\n    },\r\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\r\n        return (`The supplied '${paramName}' parameter must be an array of ` +\r\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\r\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\r\n            `to fix the issue.`);\r\n    },\r\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\r\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\r\n            `in ${moduleName}.${className}.${funcName}`);\r\n    },\r\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\r\n        return (`You must define either config.statuses or config.headers` +\r\n            `in ${moduleName}.${className}.${funcName}`);\r\n    },\r\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\r\n        if (!paramName || !moduleName || !funcName) {\r\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\r\n        }\r\n        return (`When using strings, the '${paramName}' parameter must start with ` +\r\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\r\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\r\n            `more info.`);\r\n    },\r\n    'channel-name-required': () => {\r\n        return (`You must provide a channelName to construct a ` +\r\n            `BroadcastCacheUpdate instance.`);\r\n    },\r\n    'invalid-responses-are-same-args': () => {\r\n        return (`The arguments passed into responsesAreSame() appear to be ` +\r\n            `invalid. Please ensure valid Responses are used.`);\r\n    },\r\n    'expire-custom-caches-only': () => {\r\n        return (`You must provide a 'cacheName' property when using the ` +\r\n            `expiration plugin with a runtime caching strategy.`);\r\n    },\r\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\r\n        if (!normalizedRangeHeader) {\r\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\r\n        }\r\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\r\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\r\n    },\r\n    'single-range-only': ({ normalizedRangeHeader }) => {\r\n        if (!normalizedRangeHeader) {\r\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\r\n        }\r\n        return (`Multiple ranges are not supported. Please use a  single start ` +\r\n            `value, and optional end value. The Range header provided was ` +\r\n            `\"${normalizedRangeHeader}\"`);\r\n    },\r\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\r\n        if (!normalizedRangeHeader) {\r\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\r\n        }\r\n        return (`The Range header is missing both start and end values. At least ` +\r\n            `one of those values is needed. The Range header provided was ` +\r\n            `\"${normalizedRangeHeader}\"`);\r\n    },\r\n    'no-range-header': () => {\r\n        return `No Range header was found in the Request provided.`;\r\n    },\r\n    'range-not-satisfiable': ({ size, start, end }) => {\r\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\r\n            `not satisfiable by the cached response, which is ${size} bytes.`);\r\n    },\r\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\r\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\r\n            `only 'GET' requests can be cached.`);\r\n    },\r\n    'cache-put-with-no-response': ({ url }) => {\r\n        return (`There was an attempt to cache '${url}' but the response was not ` +\r\n            `defined.`);\r\n    },\r\n    'no-response': ({ url, error }) => {\r\n        let message = `The strategy could not generate a response for '${url}'.`;\r\n        if (error) {\r\n            message += ` The underlying error is ${error}.`;\r\n        }\r\n        return message;\r\n    },\r\n    'bad-precaching-response': ({ url, status }) => {\r\n        return (`The precaching request for '${url}' failed` +\r\n            (status ? ` with an HTTP status of ${status}.` : `.`));\r\n    },\r\n    'non-precached-url': ({ url }) => {\r\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\r\n            `not precached. Please pass in a URL that is precached instead.`);\r\n    },\r\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\r\n        return (`Two of the entries passed to ` +\r\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\r\n            `${url} with different integrity values. Please remove one of them.`);\r\n    },\r\n    'missing-precache-entry': ({ cacheName, url }) => {\r\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\r\n    },\r\n    'cross-origin-copy-response': ({ origin }) => {\r\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\r\n            `responses. It was passed a response with origin ${origin}.`);\r\n    },\r\n    'opaque-streams-source': ({ type }) => {\r\n        const message = `One of the workbox-streams sources resulted in an ` +\r\n            `'${type}' response.`;\r\n        if (type === 'opaqueredirect') {\r\n            return (`${message} Please do not use a navigation request that results ` +\r\n                `in a redirect as a source.`);\r\n        }\r\n        return `${message} Please ensure your sources are CORS-enabled.`;\r\n    },\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { messages } from './messages.js';\r\nimport '../../_version.js';\r\nconst fallback = (code, ...args) => {\r\n    let msg = code;\r\n    if (args.length > 0) {\r\n        msg += ` :: ${JSON.stringify(args)}`;\r\n    }\r\n    return msg;\r\n};\r\nconst generatorFunction = (code, details = {}) => {\r\n    const message = messages[code];\r\n    if (!message) {\r\n        throw new Error(`Unable to find message for code '${code}'.`);\r\n    }\r\n    return message(details);\r\n};\r\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\r\nimport '../_version.js';\r\n/**\r\n * Workbox errors should be thrown with this class.\r\n * This allows use to ensure the type easily in tests,\r\n * helps developers identify errors from workbox\r\n * easily and allows use to optimise error\r\n * messages correctly.\r\n *\r\n * @private\r\n */\r\nclass WorkboxError extends Error {\r\n    /**\r\n     *\r\n     * @param {string} errorCode The error code that\r\n     * identifies this particular error.\r\n     * @param {Object=} details Any relevant arguments\r\n     * that will help developers identify issues should\r\n     * be added as a key on the context object.\r\n     */\r\n    constructor(errorCode, details) {\r\n        const message = messageGenerator(errorCode, details);\r\n        super(message);\r\n        this.name = errorCode;\r\n        this.details = details;\r\n    }\r\n}\r\nexport { WorkboxError };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { WorkboxError } from '../_private/WorkboxError.js';\r\nimport '../_version.js';\r\n/*\r\n * This method throws if the supplied value is not an array.\r\n * The destructed values are required to produce a meaningful error for users.\r\n * The destructed and restructured object is so it's clear what is\r\n * needed.\r\n */\r\nconst isArray = (value, details) => {\r\n    if (!Array.isArray(value)) {\r\n        throw new WorkboxError('not-an-array', details);\r\n    }\r\n};\r\nconst hasMethod = (object, expectedMethod, details) => {\r\n    const type = typeof object[expectedMethod];\r\n    if (type !== 'function') {\r\n        details['expectedMethod'] = expectedMethod;\r\n        throw new WorkboxError('missing-a-method', details);\r\n    }\r\n};\r\nconst isType = (object, expectedType, details) => {\r\n    if (typeof object !== expectedType) {\r\n        details['expectedType'] = expectedType;\r\n        throw new WorkboxError('incorrect-type', details);\r\n    }\r\n};\r\nconst isInstance = (object, \r\n// Need the general type to do the check later.\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexpectedClass, details) => {\r\n    if (!(object instanceof expectedClass)) {\r\n        details['expectedClassName'] = expectedClass.name;\r\n        throw new WorkboxError('incorrect-class', details);\r\n    }\r\n};\r\nconst isOneOf = (value, validValues, details) => {\r\n    if (!validValues.includes(value)) {\r\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\r\n        throw new WorkboxError('invalid-value', details);\r\n    }\r\n};\r\nconst isArrayOfClass = (value, \r\n// Need general type to do check later.\r\nexpectedClass, // eslint-disable-line\r\ndetails) => {\r\n    const error = new WorkboxError('not-array-of-class', details);\r\n    if (!Array.isArray(value)) {\r\n        throw error;\r\n    }\r\n    for (const item of value) {\r\n        if (!(item instanceof expectedClass)) {\r\n            throw error;\r\n        }\r\n    }\r\n};\r\nconst finalAssertExports = process.env.NODE_ENV === 'production'\r\n    ? null\r\n    : {\r\n        hasMethod,\r\n        isArray,\r\n        isInstance,\r\n        isOneOf,\r\n        isType,\r\n        isArrayOfClass,\r\n    };\r\nexport { finalAssertExports as assert };\r\n","\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:routing:6.5.3'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * The default HTTP method, 'GET', used when there's no specific method\r\n * configured for a route.\r\n *\r\n * @type {string}\r\n *\r\n * @private\r\n */\r\nexport const defaultMethod = 'GET';\r\n/**\r\n * The list of valid HTTP methods associated with requests that could be routed.\r\n *\r\n * @type {Array<string>}\r\n *\r\n * @private\r\n */\r\nexport const validMethods = [\r\n    'DELETE',\r\n    'GET',\r\n    'HEAD',\r\n    'PATCH',\r\n    'POST',\r\n    'PUT',\r\n];\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {function()|Object} handler Either a function, or an object with a\r\n * 'handle' method.\r\n * @return {Object} An object with a handle method.\r\n *\r\n * @private\r\n */\r\nexport const normalizeHandler = (handler) => {\r\n    if (handler && typeof handler === 'object') {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.hasMethod(handler, 'handle', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'handler',\r\n            });\r\n        }\r\n        return handler;\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(handler, 'function', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'handler',\r\n            });\r\n        }\r\n        return { handle: handler };\r\n    }\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { defaultMethod, validMethods } from './utils/constants.js';\r\nimport { normalizeHandler } from './utils/normalizeHandler.js';\r\nimport './_version.js';\r\n/**\r\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\r\n * The \"match\" callback determine if a route should be used to \"handle\" a\r\n * request by returning a non-falsy value if it can. The \"handler\" callback\r\n * is called when there is a match and should return a Promise that resolves\r\n * to a `Response`.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nclass Route {\r\n    /**\r\n     * Constructor for Route class.\r\n     *\r\n     * @param {workbox-routing~matchCallback} match\r\n     * A callback function that determines whether the route matches a given\r\n     * `fetch` event by returning a non-falsy value.\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resolving to a Response.\r\n     * @param {string} [method='GET'] The HTTP method to match the Route\r\n     * against.\r\n     */\r\n    constructor(match, handler, method = defaultMethod) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(match, 'function', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'match',\r\n            });\r\n            if (method) {\r\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\r\n            }\r\n        }\r\n        // These values are referenced directly by Router so cannot be\r\n        // altered by minificaton.\r\n        this.handler = normalizeHandler(handler);\r\n        this.match = match;\r\n        this.method = method;\r\n    }\r\n    /**\r\n     *\r\n     * @param {workbox-routing-handlerCallback} handler A callback\r\n     * function that returns a Promise resolving to a Response\r\n     */\r\n    setCatchHandler(handler) {\r\n        this.catchHandler = normalizeHandler(handler);\r\n    }\r\n}\r\nexport { Route };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { Route } from './Route.js';\r\nimport './_version.js';\r\n/**\r\n * RegExpRoute makes it easy to create a regular expression based\r\n * {@link workbox-routing.Route}.\r\n *\r\n * For same-origin requests the RegExp only needs to match part of the URL. For\r\n * requests against third-party servers, you must define a RegExp that matches\r\n * the start of the URL.\r\n *\r\n * @memberof workbox-routing\r\n * @extends workbox-routing.Route\r\n */\r\nclass RegExpRoute extends Route {\r\n    /**\r\n     * If the regular expression contains\r\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\r\n     * the captured values will be passed to the\r\n     * {@link workbox-routing~handlerCallback} `params`\r\n     * argument.\r\n     *\r\n     * @param {RegExp} regExp The regular expression to match against URLs.\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     * @param {string} [method='GET'] The HTTP method to match the Route\r\n     * against.\r\n     */\r\n    constructor(regExp, handler, method) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(regExp, RegExp, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'RegExpRoute',\r\n                funcName: 'constructor',\r\n                paramName: 'pattern',\r\n            });\r\n        }\r\n        const match = ({ url }) => {\r\n            const result = regExp.exec(url.href);\r\n            // Return immediately if there's no match.\r\n            if (!result) {\r\n                return;\r\n            }\r\n            // Require that the match start at the first character in the URL string\r\n            // if it's a cross-origin request.\r\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\r\n            // behind this behavior.\r\n            if (url.origin !== location.origin && result.index !== 0) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\r\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\r\n                        `handle cross-origin requests if they match the entire URL.`);\r\n                }\r\n                return;\r\n            }\r\n            // If the route matches, but there aren't any capture groups defined, then\r\n            // this will return [], which is truthy and therefore sufficient to\r\n            // indicate a match.\r\n            // If there are capture groups, then it will return their values.\r\n            return result.slice(1);\r\n        };\r\n        super(match, handler, method);\r\n    }\r\n}\r\nexport { RegExpRoute };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst getFriendlyURL = (url) => {\r\n    const urlObj = new URL(String(url), location.href);\r\n    // See https://github.com/GoogleChrome/workbox/issues/2323\r\n    // We want to include everything, except for the origin if it's same-origin.\r\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\r\n};\r\nexport { getFriendlyURL };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { defaultMethod } from './utils/constants.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { normalizeHandler } from './utils/normalizeHandler.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport './_version.js';\r\n/**\r\n * The Router can be used to process a `FetchEvent` using one or more\r\n * {@link workbox-routing.Route}, responding with a `Response` if\r\n * a matching route exists.\r\n *\r\n * If no route matches a given a request, the Router will use a \"default\"\r\n * handler if one is defined.\r\n *\r\n * Should the matching Route throw an error, the Router will use a \"catch\"\r\n * handler if one is defined to gracefully deal with issues and respond with a\r\n * Request.\r\n *\r\n * If a request matches multiple routes, the **earliest** registered route will\r\n * be used to respond to the request.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nclass Router {\r\n    /**\r\n     * Initializes a new Router.\r\n     */\r\n    constructor() {\r\n        this._routes = new Map();\r\n        this._defaultHandlerMap = new Map();\r\n    }\r\n    /**\r\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\r\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\r\n     * instances that are registered.\r\n     */\r\n    get routes() {\r\n        return this._routes;\r\n    }\r\n    /**\r\n     * Adds a fetch event listener to respond to events when a route matches\r\n     * the event's request.\r\n     */\r\n    addFetchListener() {\r\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n        self.addEventListener('fetch', ((event) => {\r\n            const { request } = event;\r\n            const responsePromise = this.handleRequest({ request, event });\r\n            if (responsePromise) {\r\n                event.respondWith(responsePromise);\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Adds a message event listener for URLs to cache from the window.\r\n     * This is useful to cache resources loaded on the page prior to when the\r\n     * service worker started controlling it.\r\n     *\r\n     * The format of the message data sent from the window should be as follows.\r\n     * Where the `urlsToCache` array may consist of URL strings or an array of\r\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\r\n     *\r\n     * ```\r\n     * {\r\n     *   type: 'CACHE_URLS',\r\n     *   payload: {\r\n     *     urlsToCache: [\r\n     *       './script1.js',\r\n     *       './script2.js',\r\n     *       ['./script3.js', {mode: 'no-cors'}],\r\n     *     ],\r\n     *   },\r\n     * }\r\n     * ```\r\n     */\r\n    addCacheListener() {\r\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n        self.addEventListener('message', ((event) => {\r\n            // event.data is type 'any'\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n            if (event.data && event.data.type === 'CACHE_URLS') {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                const { payload } = event.data;\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\r\n                }\r\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\r\n                    if (typeof entry === 'string') {\r\n                        entry = [entry];\r\n                    }\r\n                    const request = new Request(...entry);\r\n                    return this.handleRequest({ request, event });\r\n                    // TODO(philipwalton): TypeScript errors without this typecast for\r\n                    // some reason (probably a bug). The real type here should work but\r\n                    // doesn't: `Array<Promise<Response> | undefined>`.\r\n                })); // TypeScript\r\n                event.waitUntil(requestPromises);\r\n                // If a MessageChannel was used, reply to the message on success.\r\n                if (event.ports && event.ports[0]) {\r\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Apply the routing rules to a FetchEvent object to get a Response from an\r\n     * appropriate Route's handler.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Request} options.request The request to handle.\r\n     * @param {ExtendableEvent} options.event The event that triggered the\r\n     *     request.\r\n     * @return {Promise<Response>|undefined} A promise is returned if a\r\n     *     registered route can handle the request. If there is no matching\r\n     *     route and there's no `defaultHandler`, `undefined` is returned.\r\n     */\r\n    handleRequest({ request, event, }) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(request, Request, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'handleRequest',\r\n                paramName: 'options.request',\r\n            });\r\n        }\r\n        const url = new URL(request.url, location.href);\r\n        if (!url.protocol.startsWith('http')) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\r\n            }\r\n            return;\r\n        }\r\n        const sameOrigin = url.origin === location.origin;\r\n        const { params, route } = this.findMatchingRoute({\r\n            event,\r\n            request,\r\n            sameOrigin,\r\n            url,\r\n        });\r\n        let handler = route && route.handler;\r\n        const debugMessages = [];\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (handler) {\r\n                debugMessages.push([`Found a route to handle this request:`, route]);\r\n                if (params) {\r\n                    debugMessages.push([\r\n                        `Passing the following params to the route's handler:`,\r\n                        params,\r\n                    ]);\r\n                }\r\n            }\r\n        }\r\n        // If we don't have a handler because there was no matching route, then\r\n        // fall back to defaultHandler if that's defined.\r\n        const method = request.method;\r\n        if (!handler && this._defaultHandlerMap.has(method)) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                debugMessages.push(`Failed to find a matching route. Falling ` +\r\n                    `back to the default handler for ${method}.`);\r\n            }\r\n            handler = this._defaultHandlerMap.get(method);\r\n        }\r\n        if (!handler) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                // No handler so Workbox will do nothing. If logs is set of debug\r\n                // i.e. verbose, we should print out this information.\r\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\r\n            }\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            // We have a handler, meaning Workbox is going to handle the route.\r\n            // print the routing details to the console.\r\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\r\n            debugMessages.forEach((msg) => {\r\n                if (Array.isArray(msg)) {\r\n                    logger.log(...msg);\r\n                }\r\n                else {\r\n                    logger.log(msg);\r\n                }\r\n            });\r\n            logger.groupEnd();\r\n        }\r\n        // Wrap in try and catch in case the handle method throws a synchronous\r\n        // error. It should still callback to the catch handler.\r\n        let responsePromise;\r\n        try {\r\n            responsePromise = handler.handle({ url, request, event, params });\r\n        }\r\n        catch (err) {\r\n            responsePromise = Promise.reject(err);\r\n        }\r\n        // Get route's catch handler, if it exists\r\n        const catchHandler = route && route.catchHandler;\r\n        if (responsePromise instanceof Promise &&\r\n            (this._catchHandler || catchHandler)) {\r\n            responsePromise = responsePromise.catch(async (err) => {\r\n                // If there's a route catch handler, process that first\r\n                if (catchHandler) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        // Still include URL here as it will be async from the console group\r\n                        // and may not make sense without the URL\r\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\r\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\r\n                        logger.error(`Error thrown by:`, route);\r\n                        logger.error(err);\r\n                        logger.groupEnd();\r\n                    }\r\n                    try {\r\n                        return await catchHandler.handle({ url, request, event, params });\r\n                    }\r\n                    catch (catchErr) {\r\n                        if (catchErr instanceof Error) {\r\n                            err = catchErr;\r\n                        }\r\n                    }\r\n                }\r\n                if (this._catchHandler) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        // Still include URL here as it will be async from the console group\r\n                        // and may not make sense without the URL\r\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\r\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\r\n                        logger.error(`Error thrown by:`, route);\r\n                        logger.error(err);\r\n                        logger.groupEnd();\r\n                    }\r\n                    return this._catchHandler.handle({ url, request, event });\r\n                }\r\n                throw err;\r\n            });\r\n        }\r\n        return responsePromise;\r\n    }\r\n    /**\r\n     * Checks a request and URL (and optionally an event) against the list of\r\n     * registered routes, and if there's a match, returns the corresponding\r\n     * route along with any params generated by the match.\r\n     *\r\n     * @param {Object} options\r\n     * @param {URL} options.url\r\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\r\n     *     against the current origin.\r\n     * @param {Request} options.request The request to match.\r\n     * @param {Event} options.event The corresponding event.\r\n     * @return {Object} An object with `route` and `params` properties.\r\n     *     They are populated if a matching route was found or `undefined`\r\n     *     otherwise.\r\n     */\r\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\r\n        const routes = this._routes.get(request.method) || [];\r\n        for (const route of routes) {\r\n            let params;\r\n            // route.match returns type any, not possible to change right now.\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n            const matchResult = route.match({ url, sameOrigin, request, event });\r\n            if (matchResult) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    // Warn developers that using an async matchCallback is almost always\r\n                    // not the right thing to do.\r\n                    if (matchResult instanceof Promise) {\r\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\r\n                            `matchCallback function was used. Please convert the ` +\r\n                            `following route to use a synchronous matchCallback function:`, route);\r\n                    }\r\n                }\r\n                // See https://github.com/GoogleChrome/workbox/issues/2079\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                params = matchResult;\r\n                if (Array.isArray(params) && params.length === 0) {\r\n                    // Instead of passing an empty array in as params, use undefined.\r\n                    params = undefined;\r\n                }\r\n                else if (matchResult.constructor === Object && // eslint-disable-line\r\n                    Object.keys(matchResult).length === 0) {\r\n                    // Instead of passing an empty object in as params, use undefined.\r\n                    params = undefined;\r\n                }\r\n                else if (typeof matchResult === 'boolean') {\r\n                    // For the boolean value true (rather than just something truth-y),\r\n                    // don't set params.\r\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\r\n                    params = undefined;\r\n                }\r\n                // Return early if have a match.\r\n                return { route, params };\r\n            }\r\n        }\r\n        // If no match was found above, return and empty object.\r\n        return {};\r\n    }\r\n    /**\r\n     * Define a default `handler` that's called when no routes explicitly\r\n     * match the incoming request.\r\n     *\r\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\r\n     *\r\n     * Without a default handler, unmatched requests will go against the\r\n     * network as if there were no service worker present.\r\n     *\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     * @param {string} [method='GET'] The HTTP method to associate with this\r\n     * default handler. Each method has its own default.\r\n     */\r\n    setDefaultHandler(handler, method = defaultMethod) {\r\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\r\n    }\r\n    /**\r\n     * If a Route throws an error while handling a request, this `handler`\r\n     * will be called and given a chance to provide a response.\r\n     *\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     */\r\n    setCatchHandler(handler) {\r\n        this._catchHandler = normalizeHandler(handler);\r\n    }\r\n    /**\r\n     * Registers a route with the router.\r\n     *\r\n     * @param {workbox-routing.Route} route The route to register.\r\n     */\r\n    registerRoute(route) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(route, 'object', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route',\r\n            });\r\n            assert.hasMethod(route, 'match', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route',\r\n            });\r\n            assert.isType(route.handler, 'object', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route',\r\n            });\r\n            assert.hasMethod(route.handler, 'handle', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route.handler',\r\n            });\r\n            assert.isType(route.method, 'string', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Router',\r\n                funcName: 'registerRoute',\r\n                paramName: 'route.method',\r\n            });\r\n        }\r\n        if (!this._routes.has(route.method)) {\r\n            this._routes.set(route.method, []);\r\n        }\r\n        // Give precedence to all of the earlier routes by adding this additional\r\n        // route to the end of the array.\r\n        this._routes.get(route.method).push(route);\r\n    }\r\n    /**\r\n     * Unregisters a route with the router.\r\n     *\r\n     * @param {workbox-routing.Route} route The route to unregister.\r\n     */\r\n    unregisterRoute(route) {\r\n        if (!this._routes.has(route.method)) {\r\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\r\n                method: route.method,\r\n            });\r\n        }\r\n        const routeIndex = this._routes.get(route.method).indexOf(route);\r\n        if (routeIndex > -1) {\r\n            this._routes.get(route.method).splice(routeIndex, 1);\r\n        }\r\n        else {\r\n            throw new WorkboxError('unregister-route-route-not-registered');\r\n        }\r\n    }\r\n}\r\nexport { Router };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { Router } from '../Router.js';\r\nimport '../_version.js';\r\nlet defaultRouter;\r\n/**\r\n * Creates a new, singleton Router instance if one does not exist. If one\r\n * does already exist, that instance is returned.\r\n *\r\n * @private\r\n * @return {Router}\r\n */\r\nexport const getOrCreateDefaultRouter = () => {\r\n    if (!defaultRouter) {\r\n        defaultRouter = new Router();\r\n        // The helpers that use the default Router assume these listeners exist.\r\n        defaultRouter.addFetchListener();\r\n        defaultRouter.addCacheListener();\r\n    }\r\n    return defaultRouter;\r\n};\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { Route } from './Route.js';\r\nimport { RegExpRoute } from './RegExpRoute.js';\r\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\r\nimport './_version.js';\r\n/**\r\n * Easily register a RegExp, string, or function with a caching\r\n * strategy to a singleton Router instance.\r\n *\r\n * This method will generate a Route for you if needed and\r\n * call {@link workbox-routing.Router#registerRoute}.\r\n *\r\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\r\n * If the capture param is a `Route`, all other arguments will be ignored.\r\n * @param {workbox-routing~handlerCallback} [handler] A callback\r\n * function that returns a Promise resulting in a Response. This parameter\r\n * is required if `capture` is not a `Route` object.\r\n * @param {string} [method='GET'] The HTTP method to match the Route\r\n * against.\r\n * @return {workbox-routing.Route} The generated `Route`.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nfunction registerRoute(capture, handler, method) {\r\n    let route;\r\n    if (typeof capture === 'string') {\r\n        const captureUrl = new URL(capture, location.href);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\r\n                throw new WorkboxError('invalid-string', {\r\n                    moduleName: 'workbox-routing',\r\n                    funcName: 'registerRoute',\r\n                    paramName: 'capture',\r\n                });\r\n            }\r\n            // We want to check if Express-style wildcards are in the pathname only.\r\n            // TODO: Remove this log message in v4.\r\n            const valueToCheck = capture.startsWith('http')\r\n                ? captureUrl.pathname\r\n                : capture;\r\n            // See https://github.com/pillarjs/path-to-regexp#parameters\r\n            const wildcards = '[*:?+]';\r\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\r\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\r\n                    `character (${wildcards}). Strings are now always interpreted as ` +\r\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\r\n            }\r\n        }\r\n        const matchCallback = ({ url }) => {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (url.pathname === captureUrl.pathname &&\r\n                    url.origin !== captureUrl.origin) {\r\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\r\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\r\n                        `if they match the entire URL.`);\r\n                }\r\n            }\r\n            return url.href === captureUrl.href;\r\n        };\r\n        // If `capture` is a string then `handler` and `method` must be present.\r\n        route = new Route(matchCallback, handler, method);\r\n    }\r\n    else if (capture instanceof RegExp) {\r\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\r\n        route = new RegExpRoute(capture, handler, method);\r\n    }\r\n    else if (typeof capture === 'function') {\r\n        // If `capture` is a function then `handler` and `method` must be present.\r\n        route = new Route(capture, handler, method);\r\n    }\r\n    else if (capture instanceof Route) {\r\n        route = capture;\r\n    }\r\n    else {\r\n        throw new WorkboxError('unsupported-route-type', {\r\n            moduleName: 'workbox-routing',\r\n            funcName: 'registerRoute',\r\n            paramName: 'capture',\r\n        });\r\n    }\r\n    const defaultRouter = getOrCreateDefaultRouter();\r\n    defaultRouter.registerRoute(route);\r\n    return route;\r\n}\r\nexport { registerRoute };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst _cacheNameDetails = {\r\n    googleAnalytics: 'googleAnalytics',\r\n    precache: 'precache-v2',\r\n    prefix: 'workbox',\r\n    runtime: 'runtime',\r\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\r\n};\r\nconst _createCacheName = (cacheName) => {\r\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\r\n        .filter((value) => value && value.length > 0)\r\n        .join('-');\r\n};\r\nconst eachCacheNameDetail = (fn) => {\r\n    for (const key of Object.keys(_cacheNameDetails)) {\r\n        fn(key);\r\n    }\r\n};\r\nexport const cacheNames = {\r\n    updateDetails: (details) => {\r\n        eachCacheNameDetail((key) => {\r\n            if (typeof details[key] === 'string') {\r\n                _cacheNameDetails[key] = details[key];\r\n            }\r\n        });\r\n    },\r\n    getGoogleAnalyticsName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\r\n    },\r\n    getPrecacheName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\r\n    },\r\n    getPrefix: () => {\r\n        return _cacheNameDetails.prefix;\r\n    },\r\n    getRuntimeName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\r\n    },\r\n    getSuffix: () => {\r\n        return _cacheNameDetails.suffix;\r\n    },\r\n};\r\n","/*\r\n  Copyright 2020 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * A utility method that makes it easier to use `event.waitUntil` with\r\n * async functions and return the result.\r\n *\r\n * @param {ExtendableEvent} event\r\n * @param {Function} asyncFn\r\n * @return {Function}\r\n * @private\r\n */\r\nfunction waitUntil(event, asyncFn) {\r\n    const returnPromise = asyncFn();\r\n    event.waitUntil(returnPromise);\r\n    return returnPromise;\r\n}\r\nexport { waitUntil };\r\n","\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:precaching:6.5.3'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport '../_version.js';\r\n// Name of the search parameter used to store revision info.\r\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\r\n/**\r\n * Converts a manifest entry into a versioned URL suitable for precaching.\r\n *\r\n * @param {Object|string} entry\r\n * @return {string} A URL with versioning info.\r\n *\r\n * @private\r\n * @memberof workbox-precaching\r\n */\r\nexport function createCacheKey(entry) {\r\n    if (!entry) {\r\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\r\n    }\r\n    // If a precache manifest entry is a string, it's assumed to be a versioned\r\n    // URL, like '/app.abcd1234.js'. Return as-is.\r\n    if (typeof entry === 'string') {\r\n        const urlObject = new URL(entry, location.href);\r\n        return {\r\n            cacheKey: urlObject.href,\r\n            url: urlObject.href,\r\n        };\r\n    }\r\n    const { revision, url } = entry;\r\n    if (!url) {\r\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\r\n    }\r\n    // If there's just a URL and no revision, then it's also assumed to be a\r\n    // versioned URL.\r\n    if (!revision) {\r\n        const urlObject = new URL(url, location.href);\r\n        return {\r\n            cacheKey: urlObject.href,\r\n            url: urlObject.href,\r\n        };\r\n    }\r\n    // Otherwise, construct a properly versioned URL using the custom Workbox\r\n    // search parameter along with the revision info.\r\n    const cacheKeyURL = new URL(url, location.href);\r\n    const originalURL = new URL(url, location.href);\r\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\r\n    return {\r\n        cacheKey: cacheKeyURL.href,\r\n        url: originalURL.href,\r\n    };\r\n}\r\n","/*\r\n  Copyright 2020 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * A plugin, designed to be used with PrecacheController, to determine the\r\n * of assets that were updated (or not updated) during the install event.\r\n *\r\n * @private\r\n */\r\nclass PrecacheInstallReportPlugin {\r\n    constructor() {\r\n        this.updatedURLs = [];\r\n        this.notUpdatedURLs = [];\r\n        this.handlerWillStart = async ({ request, state, }) => {\r\n            // TODO: `state` should never be undefined...\r\n            if (state) {\r\n                state.originalRequest = request;\r\n            }\r\n        };\r\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\r\n            if (event.type === 'install') {\r\n                if (state &&\r\n                    state.originalRequest &&\r\n                    state.originalRequest instanceof Request) {\r\n                    // TODO: `state` should never be undefined...\r\n                    const url = state.originalRequest.url;\r\n                    if (cachedResponse) {\r\n                        this.notUpdatedURLs.push(url);\r\n                    }\r\n                    else {\r\n                        this.updatedURLs.push(url);\r\n                    }\r\n                }\r\n            }\r\n            return cachedResponse;\r\n        };\r\n    }\r\n}\r\nexport { PrecacheInstallReportPlugin };\r\n","/*\r\n  Copyright 2020 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * A plugin, designed to be used with PrecacheController, to translate URLs into\r\n * the corresponding cache key, based on the current revision info.\r\n *\r\n * @private\r\n */\r\nclass PrecacheCacheKeyPlugin {\r\n    constructor({ precacheController }) {\r\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\r\n            // Params is type any, can't change right now.\r\n            /* eslint-disable */\r\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\r\n                this._precacheController.getCacheKeyForURL(request.url);\r\n            /* eslint-enable */\r\n            return cacheKey\r\n                ? new Request(cacheKey, { headers: request.headers })\r\n                : request;\r\n        };\r\n        this._precacheController = precacheController;\r\n    }\r\n}\r\nexport { PrecacheCacheKeyPlugin };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {string} groupTitle\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n */\r\nconst logGroup = (groupTitle, deletedURLs) => {\r\n    logger.groupCollapsed(groupTitle);\r\n    for (const url of deletedURLs) {\r\n        logger.log(url);\r\n    }\r\n    logger.groupEnd();\r\n};\r\n/**\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n * @memberof workbox-precaching\r\n */\r\nexport function printCleanupDetails(deletedURLs) {\r\n    const deletionCount = deletedURLs.length;\r\n    if (deletionCount > 0) {\r\n        logger.groupCollapsed(`During precaching cleanup, ` +\r\n            `${deletionCount} cached ` +\r\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\r\n        logGroup('Deleted Cache Requests', deletedURLs);\r\n        logger.groupEnd();\r\n    }\r\n}\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {string} groupTitle\r\n * @param {Array<string>} urls\r\n *\r\n * @private\r\n */\r\nfunction _nestedGroup(groupTitle, urls) {\r\n    if (urls.length === 0) {\r\n        return;\r\n    }\r\n    logger.groupCollapsed(groupTitle);\r\n    for (const url of urls) {\r\n        logger.log(url);\r\n    }\r\n    logger.groupEnd();\r\n}\r\n/**\r\n * @param {Array<string>} urlsToPrecache\r\n * @param {Array<string>} urlsAlreadyPrecached\r\n *\r\n * @private\r\n * @memberof workbox-precaching\r\n */\r\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\r\n    const precachedCount = urlsToPrecache.length;\r\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\r\n    if (precachedCount || alreadyPrecachedCount) {\r\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\r\n        if (alreadyPrecachedCount > 0) {\r\n            message +=\r\n                ` ${alreadyPrecachedCount} ` +\r\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\r\n        }\r\n        logger.groupCollapsed(message);\r\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\r\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\r\n        logger.groupEnd();\r\n    }\r\n}\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nlet supportStatus;\r\n/**\r\n * A utility function that determines whether the current browser supports\r\n * constructing a new `Response` from a `response.body` stream.\r\n *\r\n * @return {boolean} `true`, if the current browser can successfully\r\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\r\n *\r\n * @private\r\n */\r\nfunction canConstructResponseFromBodyStream() {\r\n    if (supportStatus === undefined) {\r\n        const testResponse = new Response('');\r\n        if ('body' in testResponse) {\r\n            try {\r\n                new Response(testResponse.body);\r\n                supportStatus = true;\r\n            }\r\n            catch (error) {\r\n                supportStatus = false;\r\n            }\r\n        }\r\n        supportStatus = false;\r\n    }\r\n    return supportStatus;\r\n}\r\nexport { canConstructResponseFromBodyStream };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\r\nimport { WorkboxError } from './_private/WorkboxError.js';\r\nimport './_version.js';\r\n/**\r\n * Allows developers to copy a response and modify its `headers`, `status`,\r\n * or `statusText` values (the values settable via a\r\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\r\n * object in the constructor).\r\n * To modify these values, pass a function as the second argument. That\r\n * function will be invoked with a single object with the response properties\r\n * `{headers, status, statusText}`. The return value of this function will\r\n * be used as the `ResponseInit` for the new `Response`. To change the values\r\n * either modify the passed parameter(s) and return it, or return a totally\r\n * new object.\r\n *\r\n * This method is intentionally limited to same-origin responses, regardless of\r\n * whether CORS was used or not.\r\n *\r\n * @param {Response} response\r\n * @param {Function} modifier\r\n * @memberof workbox-core\r\n */\r\nasync function copyResponse(response, modifier) {\r\n    let origin = null;\r\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\r\n    if (response.url) {\r\n        const responseURL = new URL(response.url);\r\n        origin = responseURL.origin;\r\n    }\r\n    if (origin !== self.location.origin) {\r\n        throw new WorkboxError('cross-origin-copy-response', { origin });\r\n    }\r\n    const clonedResponse = response.clone();\r\n    // Create a fresh `ResponseInit` object by cloning the headers.\r\n    const responseInit = {\r\n        headers: new Headers(clonedResponse.headers),\r\n        status: clonedResponse.status,\r\n        statusText: clonedResponse.statusText,\r\n    };\r\n    // Apply any user modifications.\r\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\r\n    // Create the new response from the body stream and `ResponseInit`\r\n    // modifications. Note: not all browsers support the Response.body stream,\r\n    // so fall back to reading the entire body into memory as a blob.\r\n    const body = canConstructResponseFromBodyStream()\r\n        ? clonedResponse.body\r\n        : await clonedResponse.blob();\r\n    return new Response(body, modifiedResponseInit);\r\n}\r\nexport { copyResponse };\r\n","/*\r\n  Copyright 2020 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nfunction stripParams(fullURL, ignoreParams) {\r\n    const strippedURL = new URL(fullURL);\r\n    for (const param of ignoreParams) {\r\n        strippedURL.searchParams.delete(param);\r\n    }\r\n    return strippedURL.href;\r\n}\r\n/**\r\n * Matches an item in the cache, ignoring specific URL params. This is similar\r\n * to the `ignoreSearch` option, but it allows you to ignore just specific\r\n * params (while continuing to match on the others).\r\n *\r\n * @private\r\n * @param {Cache} cache\r\n * @param {Request} request\r\n * @param {Object} matchOptions\r\n * @param {Array<string>} ignoreParams\r\n * @return {Promise<Response|undefined>}\r\n */\r\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\r\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\r\n    // If the request doesn't include any ignored params, match as normal.\r\n    if (request.url === strippedRequestURL) {\r\n        return cache.match(request, matchOptions);\r\n    }\r\n    // Otherwise, match by comparing keys\r\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\r\n    const cacheKeys = await cache.keys(request, keysOptions);\r\n    for (const cacheKey of cacheKeys) {\r\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\r\n        if (strippedRequestURL === strippedCacheKeyURL) {\r\n            return cache.match(cacheKey, matchOptions);\r\n        }\r\n    }\r\n    return;\r\n}\r\nexport { cacheMatchIgnoreParams };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * The Deferred class composes Promises in a way that allows for them to be\r\n * resolved or rejected from outside the constructor. In most cases promises\r\n * should be used directly, but Deferreds can be necessary when the logic to\r\n * resolve a promise must be separate.\r\n *\r\n * @private\r\n */\r\nclass Deferred {\r\n    /**\r\n     * Creates a promise and exposes its resolve and reject functions as methods.\r\n     */\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n}\r\nexport { Deferred };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n// Callbacks to be executed whenever there's a quota error.\r\n// Can't change Function type right now.\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nconst quotaErrorCallbacks = new Set();\r\nexport { quotaErrorCallbacks };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from '../_private/logger.js';\r\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\r\nimport '../_version.js';\r\n/**\r\n * Runs all of the callback functions, one at a time sequentially, in the order\r\n * in which they were registered.\r\n *\r\n * @memberof workbox-core\r\n * @private\r\n */\r\nasync function executeQuotaErrorCallbacks() {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\r\n            `callbacks to clean up caches.`);\r\n    }\r\n    for (const callback of quotaErrorCallbacks) {\r\n        await callback();\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.log(callback, 'is complete.');\r\n        }\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        logger.log('Finished running callbacks.');\r\n    }\r\n}\r\nexport { executeQuotaErrorCallbacks };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * Returns a promise that resolves and the passed number of milliseconds.\r\n * This utility is an async/await-friendly version of `setTimeout`.\r\n *\r\n * @param {number} ms\r\n * @return {Promise}\r\n * @private\r\n */\r\nexport function timeout(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n","\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:strategies:6.5.3'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2020 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\r\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\r\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { timeout } from 'workbox-core/_private/timeout.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport './_version.js';\r\nfunction toRequest(input) {\r\n    return typeof input === 'string' ? new Request(input) : input;\r\n}\r\n/**\r\n * A class created every time a Strategy instance instance calls\r\n * {@link workbox-strategies.Strategy~handle} or\r\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\r\n * cache actions around plugin callbacks and keeps track of when the strategy\r\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\r\n *\r\n * @memberof workbox-strategies\r\n */\r\nclass StrategyHandler {\r\n    /**\r\n     * Creates a new instance associated with the passed strategy and event\r\n     * that's handling the request.\r\n     *\r\n     * The constructor also initializes the state that will be passed to each of\r\n     * the plugins handling this request.\r\n     *\r\n     * @param {workbox-strategies.Strategy} strategy\r\n     * @param {Object} options\r\n     * @param {Request|string} options.request A request to run this strategy for.\r\n     * @param {ExtendableEvent} options.event The event associated with the\r\n     *     request.\r\n     * @param {URL} [options.url]\r\n     * @param {*} [options.params] The return value from the\r\n     *     {@link workbox-routing~matchCallback} (if applicable).\r\n     */\r\n    constructor(strategy, options) {\r\n        this._cacheKeys = {};\r\n        /**\r\n         * The request the strategy is performing (passed to the strategy's\r\n         * `handle()` or `handleAll()` method).\r\n         * @name request\r\n         * @instance\r\n         * @type {Request}\r\n         * @memberof workbox-strategies.StrategyHandler\r\n         */\r\n        /**\r\n         * The event associated with this request.\r\n         * @name event\r\n         * @instance\r\n         * @type {ExtendableEvent}\r\n         * @memberof workbox-strategies.StrategyHandler\r\n         */\r\n        /**\r\n         * A `URL` instance of `request.url` (if passed to the strategy's\r\n         * `handle()` or `handleAll()` method).\r\n         * Note: the `url` param will be present if the strategy was invoked\r\n         * from a workbox `Route` object.\r\n         * @name url\r\n         * @instance\r\n         * @type {URL|undefined}\r\n         * @memberof workbox-strategies.StrategyHandler\r\n         */\r\n        /**\r\n         * A `param` value (if passed to the strategy's\r\n         * `handle()` or `handleAll()` method).\r\n         * Note: the `param` param will be present if the strategy was invoked\r\n         * from a workbox `Route` object and the\r\n         * {@link workbox-routing~matchCallback} returned\r\n         * a truthy value (it will be that value).\r\n         * @name params\r\n         * @instance\r\n         * @type {*|undefined}\r\n         * @memberof workbox-strategies.StrategyHandler\r\n         */\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(options.event, ExtendableEvent, {\r\n                moduleName: 'workbox-strategies',\r\n                className: 'StrategyHandler',\r\n                funcName: 'constructor',\r\n                paramName: 'options.event',\r\n            });\r\n        }\r\n        Object.assign(this, options);\r\n        this.event = options.event;\r\n        this._strategy = strategy;\r\n        this._handlerDeferred = new Deferred();\r\n        this._extendLifetimePromises = [];\r\n        // Copy the plugins list (since it's mutable on the strategy),\r\n        // so any mutations don't affect this handler instance.\r\n        this._plugins = [...strategy.plugins];\r\n        this._pluginStateMap = new Map();\r\n        for (const plugin of this._plugins) {\r\n            this._pluginStateMap.set(plugin, {});\r\n        }\r\n        this.event.waitUntil(this._handlerDeferred.promise);\r\n    }\r\n    /**\r\n     * Fetches a given request (and invokes any applicable plugin callback\r\n     * methods) using the `fetchOptions` (for non-navigation requests) and\r\n     * `plugins` defined on the `Strategy` object.\r\n     *\r\n     * The following plugin lifecycle methods are invoked when using this method:\r\n     * - `requestWillFetch()`\r\n     * - `fetchDidSucceed()`\r\n     * - `fetchDidFail()`\r\n     *\r\n     * @param {Request|string} input The URL or request to fetch.\r\n     * @return {Promise<Response>}\r\n     */\r\n    async fetch(input) {\r\n        const { event } = this;\r\n        let request = toRequest(input);\r\n        if (request.mode === 'navigate' &&\r\n            event instanceof FetchEvent &&\r\n            event.preloadResponse) {\r\n            const possiblePreloadResponse = (await event.preloadResponse);\r\n            if (possiblePreloadResponse) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.log(`Using a preloaded navigation response for ` +\r\n                        `'${getFriendlyURL(request.url)}'`);\r\n                }\r\n                return possiblePreloadResponse;\r\n            }\r\n        }\r\n        // If there is a fetchDidFail plugin, we need to save a clone of the\r\n        // original request before it's either modified by a requestWillFetch\r\n        // plugin or before the original request's body is consumed via fetch().\r\n        const originalRequest = this.hasCallback('fetchDidFail')\r\n            ? request.clone()\r\n            : null;\r\n        try {\r\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\r\n                request = await cb({ request: request.clone(), event });\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err instanceof Error) {\r\n                throw new WorkboxError('plugin-error-request-will-fetch', {\r\n                    thrownErrorMessage: err.message,\r\n                });\r\n            }\r\n        }\r\n        // The request can be altered by plugins with `requestWillFetch` making\r\n        // the original request (most likely from a `fetch` event) different\r\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\r\n        const pluginFilteredRequest = request.clone();\r\n        try {\r\n            let fetchResponse;\r\n            // See https://github.com/GoogleChrome/workbox/issues/1796\r\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`Network request for ` +\r\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\r\n                    `status '${fetchResponse.status}'.`);\r\n            }\r\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\r\n                fetchResponse = await callback({\r\n                    event,\r\n                    request: pluginFilteredRequest,\r\n                    response: fetchResponse,\r\n                });\r\n            }\r\n            return fetchResponse;\r\n        }\r\n        catch (error) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.log(`Network request for ` +\r\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\r\n            }\r\n            // `originalRequest` will only exist if a `fetchDidFail` callback\r\n            // is being used (see above).\r\n            if (originalRequest) {\r\n                await this.runCallbacks('fetchDidFail', {\r\n                    error: error,\r\n                    event,\r\n                    originalRequest: originalRequest.clone(),\r\n                    request: pluginFilteredRequest.clone(),\r\n                });\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\r\n     * the response generated by `this.fetch()`.\r\n     *\r\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\r\n     * so you do not have to manually call `waitUntil()` on the event.\r\n     *\r\n     * @param {Request|string} input The request or URL to fetch and cache.\r\n     * @return {Promise<Response>}\r\n     */\r\n    async fetchAndCachePut(input) {\r\n        const response = await this.fetch(input);\r\n        const responseClone = response.clone();\r\n        void this.waitUntil(this.cachePut(input, responseClone));\r\n        return response;\r\n    }\r\n    /**\r\n     * Matches a request from the cache (and invokes any applicable plugin\r\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\r\n     * defined on the strategy object.\r\n     *\r\n     * The following plugin lifecycle methods are invoked when using this method:\r\n     * - cacheKeyWillByUsed()\r\n     * - cachedResponseWillByUsed()\r\n     *\r\n     * @param {Request|string} key The Request or URL to use as the cache key.\r\n     * @return {Promise<Response|undefined>} A matching response, if found.\r\n     */\r\n    async cacheMatch(key) {\r\n        const request = toRequest(key);\r\n        let cachedResponse;\r\n        const { cacheName, matchOptions } = this._strategy;\r\n        const effectiveRequest = await this.getCacheKey(request, 'read');\r\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\r\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (cachedResponse) {\r\n                logger.debug(`Found a cached response in '${cacheName}'.`);\r\n            }\r\n            else {\r\n                logger.debug(`No cached response found in '${cacheName}'.`);\r\n            }\r\n        }\r\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\r\n            cachedResponse =\r\n                (await callback({\r\n                    cacheName,\r\n                    matchOptions,\r\n                    cachedResponse,\r\n                    request: effectiveRequest,\r\n                    event: this.event,\r\n                })) || undefined;\r\n        }\r\n        return cachedResponse;\r\n    }\r\n    /**\r\n     * Puts a request/response pair in the cache (and invokes any applicable\r\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\r\n     * the strategy object.\r\n     *\r\n     * The following plugin lifecycle methods are invoked when using this method:\r\n     * - cacheKeyWillByUsed()\r\n     * - cacheWillUpdate()\r\n     * - cacheDidUpdate()\r\n     *\r\n     * @param {Request|string} key The request or URL to use as the cache key.\r\n     * @param {Response} response The response to cache.\r\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\r\n     * not be cached, and `true` otherwise.\r\n     */\r\n    async cachePut(key, response) {\r\n        const request = toRequest(key);\r\n        // Run in the next task to avoid blocking other cache reads.\r\n        // https://github.com/w3c/ServiceWorker/issues/1397\r\n        await timeout(0);\r\n        const effectiveRequest = await this.getCacheKey(request, 'write');\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\r\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\r\n                    url: getFriendlyURL(effectiveRequest.url),\r\n                    method: effectiveRequest.method,\r\n                });\r\n            }\r\n            // See https://github.com/GoogleChrome/workbox/issues/2818\r\n            const vary = response.headers.get('Vary');\r\n            if (vary) {\r\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\r\n                    `has a 'Vary: ${vary}' header. ` +\r\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\r\n                    `to ensure cache matching and deletion works as expected.`);\r\n            }\r\n        }\r\n        if (!response) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.error(`Cannot cache non-existent response for ` +\r\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\r\n            }\r\n            throw new WorkboxError('cache-put-with-no-response', {\r\n                url: getFriendlyURL(effectiveRequest.url),\r\n            });\r\n        }\r\n        const responseToCache = await this._ensureResponseSafeToCache(response);\r\n        if (!responseToCache) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\r\n                    `will not be cached.`, responseToCache);\r\n            }\r\n            return false;\r\n        }\r\n        const { cacheName, matchOptions } = this._strategy;\r\n        const cache = await self.caches.open(cacheName);\r\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\r\n        const oldResponse = hasCacheUpdateCallback\r\n            ? await cacheMatchIgnoreParams(\r\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\r\n            // feature. Consider into ways to only add this behavior if using\r\n            // precaching.\r\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\r\n            : null;\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\r\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\r\n        }\r\n        try {\r\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\r\n        }\r\n        catch (error) {\r\n            if (error instanceof Error) {\r\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\r\n                if (error.name === 'QuotaExceededError') {\r\n                    await executeQuotaErrorCallbacks();\r\n                }\r\n                throw error;\r\n            }\r\n        }\r\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\r\n            await callback({\r\n                cacheName,\r\n                oldResponse,\r\n                newResponse: responseToCache.clone(),\r\n                request: effectiveRequest,\r\n                event: this.event,\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\r\n     * executes any of those callbacks found in sequence. The final `Request`\r\n     * object returned by the last plugin is treated as the cache key for cache\r\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\r\n     * been registered, the passed request is returned unmodified\r\n     *\r\n     * @param {Request} request\r\n     * @param {string} mode\r\n     * @return {Promise<Request>}\r\n     */\r\n    async getCacheKey(request, mode) {\r\n        const key = `${request.url} | ${mode}`;\r\n        if (!this._cacheKeys[key]) {\r\n            let effectiveRequest = request;\r\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\r\n                effectiveRequest = toRequest(await callback({\r\n                    mode,\r\n                    request: effectiveRequest,\r\n                    event: this.event,\r\n                    // params has a type any can't change right now.\r\n                    params: this.params, // eslint-disable-line\r\n                }));\r\n            }\r\n            this._cacheKeys[key] = effectiveRequest;\r\n        }\r\n        return this._cacheKeys[key];\r\n    }\r\n    /**\r\n     * Returns true if the strategy has at least one plugin with the given\r\n     * callback.\r\n     *\r\n     * @param {string} name The name of the callback to check for.\r\n     * @return {boolean}\r\n     */\r\n    hasCallback(name) {\r\n        for (const plugin of this._strategy.plugins) {\r\n            if (name in plugin) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Runs all plugin callbacks matching the given name, in order, passing the\r\n     * given param object (merged ith the current plugin state) as the only\r\n     * argument.\r\n     *\r\n     * Note: since this method runs all plugins, it's not suitable for cases\r\n     * where the return value of a callback needs to be applied prior to calling\r\n     * the next callback. See\r\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\r\n     * below for how to handle that case.\r\n     *\r\n     * @param {string} name The name of the callback to run within each plugin.\r\n     * @param {Object} param The object to pass as the first (and only) param\r\n     *     when executing each callback. This object will be merged with the\r\n     *     current plugin state prior to callback execution.\r\n     */\r\n    async runCallbacks(name, param) {\r\n        for (const callback of this.iterateCallbacks(name)) {\r\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\r\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\r\n            await callback(param);\r\n        }\r\n    }\r\n    /**\r\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\r\n     * where each callback is wrapped with the current handler state (i.e. when\r\n     * you call each callback, whatever object parameter you pass it will\r\n     * be merged with the plugin's current state).\r\n     *\r\n     * @param {string} name The name fo the callback to run\r\n     * @return {Array<Function>}\r\n     */\r\n    *iterateCallbacks(name) {\r\n        for (const plugin of this._strategy.plugins) {\r\n            if (typeof plugin[name] === 'function') {\r\n                const state = this._pluginStateMap.get(plugin);\r\n                const statefulCallback = (param) => {\r\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\r\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\r\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\r\n                    return plugin[name](statefulParam);\r\n                };\r\n                yield statefulCallback;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Adds a promise to the\r\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\r\n     * of the event event associated with the request being handled (usually a\r\n     * `FetchEvent`).\r\n     *\r\n     * Note: you can await\r\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\r\n     * to know when all added promises have settled.\r\n     *\r\n     * @param {Promise} promise A promise to add to the extend lifetime promises\r\n     *     of the event that triggered the request.\r\n     */\r\n    waitUntil(promise) {\r\n        this._extendLifetimePromises.push(promise);\r\n        return promise;\r\n    }\r\n    /**\r\n     * Returns a promise that resolves once all promises passed to\r\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\r\n     * have settled.\r\n     *\r\n     * Note: any work done after `doneWaiting()` settles should be manually\r\n     * passed to an event's `waitUntil()` method (not this handler's\r\n     * `waitUntil()` method), otherwise the service worker thread my be killed\r\n     * prior to your work completing.\r\n     */\r\n    async doneWaiting() {\r\n        let promise;\r\n        while ((promise = this._extendLifetimePromises.shift())) {\r\n            await promise;\r\n        }\r\n    }\r\n    /**\r\n     * Stops running the strategy and immediately resolves any pending\r\n     * `waitUntil()` promises.\r\n     */\r\n    destroy() {\r\n        this._handlerDeferred.resolve(null);\r\n    }\r\n    /**\r\n     * This method will call cacheWillUpdate on the available plugins (or use\r\n     * status === 200) to determine if the Response is safe and valid to cache.\r\n     *\r\n     * @param {Request} options.request\r\n     * @param {Response} options.response\r\n     * @return {Promise<Response|undefined>}\r\n     *\r\n     * @private\r\n     */\r\n    async _ensureResponseSafeToCache(response) {\r\n        let responseToCache = response;\r\n        let pluginsUsed = false;\r\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\r\n            responseToCache =\r\n                (await callback({\r\n                    request: this.request,\r\n                    response: responseToCache,\r\n                    event: this.event,\r\n                })) || undefined;\r\n            pluginsUsed = true;\r\n            if (!responseToCache) {\r\n                break;\r\n            }\r\n        }\r\n        if (!pluginsUsed) {\r\n            if (responseToCache && responseToCache.status !== 200) {\r\n                responseToCache = undefined;\r\n            }\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (responseToCache) {\r\n                    if (responseToCache.status !== 200) {\r\n                        if (responseToCache.status === 0) {\r\n                            logger.warn(`The response for '${this.request.url}' ` +\r\n                                `is an opaque response. The caching strategy that you're ` +\r\n                                `using will not cache opaque responses by default.`);\r\n                        }\r\n                        else {\r\n                            logger.debug(`The response for '${this.request.url}' ` +\r\n                                `returned a status code of '${response.status}' and won't ` +\r\n                                `be cached as a result.`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return responseToCache;\r\n    }\r\n}\r\nexport { StrategyHandler };\r\n","/*\r\n  Copyright 2020 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { StrategyHandler } from './StrategyHandler.js';\r\nimport './_version.js';\r\n/**\r\n * An abstract base class that all other strategy classes must extend from:\r\n *\r\n * @memberof workbox-strategies\r\n */\r\nclass Strategy {\r\n    /**\r\n     * Creates a new instance of the strategy and sets all documented option\r\n     * properties as public instance properties.\r\n     *\r\n     * Note: if a custom strategy class extends the base Strategy class and does\r\n     * not need more than these properties, it does not need to define its own\r\n     * constructor.\r\n     *\r\n     * @param {Object} [options]\r\n     * @param {string} [options.cacheName] Cache name to store and retrieve\r\n     * requests. Defaults to the cache names provided by\r\n     * {@link workbox-core.cacheNames}.\r\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\r\n     * to use in conjunction with this caching strategy.\r\n     * @param {Object} [options.fetchOptions] Values passed along to the\r\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\r\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\r\n     * `fetch()` requests made by this strategy.\r\n     * @param {Object} [options.matchOptions] The\r\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\r\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\r\n     */\r\n    constructor(options = {}) {\r\n        /**\r\n         * Cache name to store and retrieve\r\n         * requests. Defaults to the cache names provided by\r\n         * {@link workbox-core.cacheNames}.\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\r\n        /**\r\n         * The list\r\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\r\n         * used by this strategy.\r\n         *\r\n         * @type {Array<Object>}\r\n         */\r\n        this.plugins = options.plugins || [];\r\n        /**\r\n         * Values passed along to the\r\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\r\n         * of all fetch() requests made by this strategy.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        this.fetchOptions = options.fetchOptions;\r\n        /**\r\n         * The\r\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\r\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        this.matchOptions = options.matchOptions;\r\n    }\r\n    /**\r\n     * Perform a request strategy and returns a `Promise` that will resolve with\r\n     * a `Response`, invoking all relevant plugin callbacks.\r\n     *\r\n     * When a strategy instance is registered with a Workbox\r\n     * {@link workbox-routing.Route}, this method is automatically\r\n     * called when the route matches.\r\n     *\r\n     * Alternatively, this method can be used in a standalone `FetchEvent`\r\n     * listener by passing it to `event.respondWith()`.\r\n     *\r\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\r\n     *     properties listed below.\r\n     * @param {Request|string} options.request A request to run this strategy for.\r\n     * @param {ExtendableEvent} options.event The event associated with the\r\n     *     request.\r\n     * @param {URL} [options.url]\r\n     * @param {*} [options.params]\r\n     */\r\n    handle(options) {\r\n        const [responseDone] = this.handleAll(options);\r\n        return responseDone;\r\n    }\r\n    /**\r\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\r\n     * instead of just returning a `Promise` that resolves to a `Response` it\r\n     * it will return an tuple of `[response, done]` promises, where the former\r\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\r\n     * Promise that will resolve once any promises that were added to\r\n     * `event.waitUntil()` as part of performing the strategy have completed.\r\n     *\r\n     * You can await the `done` promise to ensure any extra work performed by\r\n     * the strategy (usually caching responses) completes successfully.\r\n     *\r\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\r\n     *     properties listed below.\r\n     * @param {Request|string} options.request A request to run this strategy for.\r\n     * @param {ExtendableEvent} options.event The event associated with the\r\n     *     request.\r\n     * @param {URL} [options.url]\r\n     * @param {*} [options.params]\r\n     * @return {Array<Promise>} A tuple of [response, done]\r\n     *     promises that can be used to determine when the response resolves as\r\n     *     well as when the handler has completed all its work.\r\n     */\r\n    handleAll(options) {\r\n        // Allow for flexible options to be passed.\r\n        if (options instanceof FetchEvent) {\r\n            options = {\r\n                event: options,\r\n                request: options.request,\r\n            };\r\n        }\r\n        const event = options.event;\r\n        const request = typeof options.request === 'string'\r\n            ? new Request(options.request)\r\n            : options.request;\r\n        const params = 'params' in options ? options.params : undefined;\r\n        const handler = new StrategyHandler(this, { event, request, params });\r\n        const responseDone = this._getResponse(handler, request, event);\r\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\r\n        // Return an array of promises, suitable for use with Promise.all().\r\n        return [responseDone, handlerDone];\r\n    }\r\n    async _getResponse(handler, request, event) {\r\n        await handler.runCallbacks('handlerWillStart', { event, request });\r\n        let response = undefined;\r\n        try {\r\n            response = await this._handle(request, handler);\r\n            // The \"official\" Strategy subclasses all throw this error automatically,\r\n            // but in case a third-party Strategy doesn't, ensure that we have a\r\n            // consistent failure when there's no response or an error response.\r\n            if (!response || response.type === 'error') {\r\n                throw new WorkboxError('no-response', { url: request.url });\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (error instanceof Error) {\r\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\r\n                    response = await callback({ error, event, request });\r\n                    if (response) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!response) {\r\n                throw error;\r\n            }\r\n            else if (process.env.NODE_ENV !== 'production') {\r\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\r\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\r\n                    `a handlerDidError plugin.`);\r\n            }\r\n        }\r\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\r\n            response = await callback({ event, request, response });\r\n        }\r\n        return response;\r\n    }\r\n    async _awaitComplete(responseDone, handler, request, event) {\r\n        let response;\r\n        let error;\r\n        try {\r\n            response = await responseDone;\r\n        }\r\n        catch (error) {\r\n            // Ignore errors, as response errors should be caught via the `response`\r\n            // promise above. The `done` promise will only throw for errors in\r\n            // promises passed to `handler.waitUntil()`.\r\n        }\r\n        try {\r\n            await handler.runCallbacks('handlerDidRespond', {\r\n                event,\r\n                request,\r\n                response,\r\n            });\r\n            await handler.doneWaiting();\r\n        }\r\n        catch (waitUntilError) {\r\n            if (waitUntilError instanceof Error) {\r\n                error = waitUntilError;\r\n            }\r\n        }\r\n        await handler.runCallbacks('handlerDidComplete', {\r\n            event,\r\n            request,\r\n            response,\r\n            error: error,\r\n        });\r\n        handler.destroy();\r\n        if (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nexport { Strategy };\r\n/**\r\n * Classes extending the `Strategy` based class should implement this method,\r\n * and leverage the {@link workbox-strategies.StrategyHandler}\r\n * arg to perform all fetching and cache logic, which will ensure all relevant\r\n * cache, cache options, fetch options and plugins are used (per the current\r\n * strategy instance).\r\n *\r\n * @name _handle\r\n * @instance\r\n * @abstract\r\n * @function\r\n * @param {Request} request\r\n * @param {workbox-strategies.StrategyHandler} handler\r\n * @return {Promise<Response>}\r\n *\r\n * @memberof workbox-strategies.Strategy\r\n */\r\n","/*\r\n  Copyright 2020 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { copyResponse } from 'workbox-core/copyResponse.js';\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { Strategy } from 'workbox-strategies/Strategy.js';\r\nimport './_version.js';\r\n/**\r\n * A {@link workbox-strategies.Strategy} implementation\r\n * specifically designed to work with\r\n * {@link workbox-precaching.PrecacheController}\r\n * to both cache and fetch precached assets.\r\n *\r\n * Note: an instance of this class is created automatically when creating a\r\n * `PrecacheController`; it's generally not necessary to create this yourself.\r\n *\r\n * @extends workbox-strategies.Strategy\r\n * @memberof workbox-precaching\r\n */\r\nclass PrecacheStrategy extends Strategy {\r\n    /**\r\n     *\r\n     * @param {Object} [options]\r\n     * @param {string} [options.cacheName] Cache name to store and retrieve\r\n     * requests. Defaults to the cache names provided by\r\n     * {@link workbox-core.cacheNames}.\r\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\r\n     * to use in conjunction with this caching strategy.\r\n     * @param {Object} [options.fetchOptions] Values passed along to the\r\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\r\n     * of all fetch() requests made by this strategy.\r\n     * @param {Object} [options.matchOptions] The\r\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\r\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\r\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\r\n     * get the response from the network if there's a precache miss.\r\n     */\r\n    constructor(options = {}) {\r\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\r\n        super(options);\r\n        this._fallbackToNetwork =\r\n            options.fallbackToNetwork === false ? false : true;\r\n        // Redirected responses cannot be used to satisfy a navigation request, so\r\n        // any redirected response must be \"copied\" rather than cloned, so the new\r\n        // response doesn't contain the `redirected` flag. See:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\r\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Request|string} request A request to run this strategy for.\r\n     * @param {workbox-strategies.StrategyHandler} handler The event that\r\n     *     triggered the request.\r\n     * @return {Promise<Response>}\r\n     */\r\n    async _handle(request, handler) {\r\n        const response = await handler.cacheMatch(request);\r\n        if (response) {\r\n            return response;\r\n        }\r\n        // If this is an `install` event for an entry that isn't already cached,\r\n        // then populate the cache.\r\n        if (handler.event && handler.event.type === 'install') {\r\n            return await this._handleInstall(request, handler);\r\n        }\r\n        // Getting here means something went wrong. An entry that should have been\r\n        // precached wasn't found in the cache.\r\n        return await this._handleFetch(request, handler);\r\n    }\r\n    async _handleFetch(request, handler) {\r\n        let response;\r\n        const params = (handler.params || {});\r\n        // Fall back to the network if we're configured to do so.\r\n        if (this._fallbackToNetwork) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.warn(`The precached response for ` +\r\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\r\n                    `found. Falling back to the network.`);\r\n            }\r\n            const integrityInManifest = params.integrity;\r\n            const integrityInRequest = request.integrity;\r\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\r\n            // Do not add integrity if the original request is no-cors\r\n            // See https://github.com/GoogleChrome/workbox/issues/3096\r\n            response = await handler.fetch(new Request(request, {\r\n                integrity: request.mode !== 'no-cors'\r\n                    ? integrityInRequest || integrityInManifest\r\n                    : undefined,\r\n            }));\r\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\r\n            // that the response matches the precache manifest's expectations,\r\n            // and there's either a) no integrity property in the incoming request\r\n            // or b) there is an integrity, and it matches the precache manifest.\r\n            // See https://github.com/GoogleChrome/workbox/issues/2858\r\n            // Also if the original request users no-cors we don't use integrity.\r\n            // See https://github.com/GoogleChrome/workbox/issues/3096\r\n            if (integrityInManifest &&\r\n                noIntegrityConflict &&\r\n                request.mode !== 'no-cors') {\r\n                this._useDefaultCacheabilityPluginIfNeeded();\r\n                const wasCached = await handler.cachePut(request, response.clone());\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    if (wasCached) {\r\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\r\n                            `was used to \"repair\" the precache.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // This shouldn't normally happen, but there are edge cases:\r\n            // https://github.com/GoogleChrome/workbox/issues/1441\r\n            throw new WorkboxError('missing-precache-entry', {\r\n                cacheName: this.cacheName,\r\n                url: request.url,\r\n            });\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\r\n            // Workbox is going to handle the route.\r\n            // print the routing details to the console.\r\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\r\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\r\n            logger.groupCollapsed(`View request details here.`);\r\n            logger.log(request);\r\n            logger.groupEnd();\r\n            logger.groupCollapsed(`View response details here.`);\r\n            logger.log(response);\r\n            logger.groupEnd();\r\n            logger.groupEnd();\r\n        }\r\n        return response;\r\n    }\r\n    async _handleInstall(request, handler) {\r\n        this._useDefaultCacheabilityPluginIfNeeded();\r\n        const response = await handler.fetch(request);\r\n        // Make sure we defer cachePut() until after we know the response\r\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\r\n        const wasCached = await handler.cachePut(request, response.clone());\r\n        if (!wasCached) {\r\n            // Throwing here will lead to the `install` handler failing, which\r\n            // we want to do if *any* of the responses aren't safe to cache.\r\n            throw new WorkboxError('bad-precaching-response', {\r\n                url: request.url,\r\n                status: response.status,\r\n            });\r\n        }\r\n        return response;\r\n    }\r\n    /**\r\n     * This method is complex, as there a number of things to account for:\r\n     *\r\n     * The `plugins` array can be set at construction, and/or it might be added to\r\n     * to at any time before the strategy is used.\r\n     *\r\n     * At the time the strategy is used (i.e. during an `install` event), there\r\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\r\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\r\n     *\r\n     * - If this method is called and there are no suitable `cacheWillUpdate`\r\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\r\n     *\r\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\r\n     * we don't have to do anything (this might be a previously added\r\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\r\n     *\r\n     * - If this method is called and there is more than one `cacheWillUpdate`,\r\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\r\n     * we need to remove it. (This situation is unlikely, but it could happen if\r\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\r\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\r\n     *\r\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\r\n     *\r\n     * @private\r\n     */\r\n    _useDefaultCacheabilityPluginIfNeeded() {\r\n        let defaultPluginIndex = null;\r\n        let cacheWillUpdatePluginCount = 0;\r\n        for (const [index, plugin] of this.plugins.entries()) {\r\n            // Ignore the copy redirected plugin when determining what to do.\r\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\r\n                continue;\r\n            }\r\n            // Save the default plugin's index, in case it needs to be removed.\r\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\r\n                defaultPluginIndex = index;\r\n            }\r\n            if (plugin.cacheWillUpdate) {\r\n                cacheWillUpdatePluginCount++;\r\n            }\r\n        }\r\n        if (cacheWillUpdatePluginCount === 0) {\r\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\r\n        }\r\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\r\n            // Only remove the default plugin; multiple custom plugins are allowed.\r\n            this.plugins.splice(defaultPluginIndex, 1);\r\n        }\r\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\r\n    }\r\n}\r\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\r\n    async cacheWillUpdate({ response }) {\r\n        if (!response || response.status >= 400) {\r\n            return null;\r\n        }\r\n        return response;\r\n    },\r\n};\r\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\r\n    async cacheWillUpdate({ response }) {\r\n        return response.redirected ? await copyResponse(response) : response;\r\n    },\r\n};\r\nexport { PrecacheStrategy };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\r\nimport { createCacheKey } from './utils/createCacheKey.js';\r\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\r\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\r\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\r\nimport { printInstallDetails } from './utils/printInstallDetails.js';\r\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\r\nimport './_version.js';\r\n/**\r\n * Performs efficient precaching of assets.\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nclass PrecacheController {\r\n    /**\r\n     * Create a new PrecacheController.\r\n     *\r\n     * @param {Object} [options]\r\n     * @param {string} [options.cacheName] The cache to use for precaching.\r\n     * @param {string} [options.plugins] Plugins to use when precaching as well\r\n     * as responding to fetch events for precached assets.\r\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\r\n     * get the response from the network if there's a precache miss.\r\n     */\r\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\r\n        this._urlsToCacheKeys = new Map();\r\n        this._urlsToCacheModes = new Map();\r\n        this._cacheKeysToIntegrities = new Map();\r\n        this._strategy = new PrecacheStrategy({\r\n            cacheName: cacheNames.getPrecacheName(cacheName),\r\n            plugins: [\r\n                ...plugins,\r\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\r\n            ],\r\n            fallbackToNetwork,\r\n        });\r\n        // Bind the install and activate methods to the instance.\r\n        this.install = this.install.bind(this);\r\n        this.activate = this.activate.bind(this);\r\n    }\r\n    /**\r\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\r\n     * used to cache assets and respond to fetch events.\r\n     */\r\n    get strategy() {\r\n        return this._strategy;\r\n    }\r\n    /**\r\n     * Adds items to the precache list, removing any duplicates and\r\n     * stores the files in the\r\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\r\n     * worker installs.\r\n     *\r\n     * This method can be called multiple times.\r\n     *\r\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\r\n     */\r\n    precache(entries) {\r\n        this.addToCacheList(entries);\r\n        if (!this._installAndActiveListenersAdded) {\r\n            self.addEventListener('install', this.install);\r\n            self.addEventListener('activate', this.activate);\r\n            this._installAndActiveListenersAdded = true;\r\n        }\r\n    }\r\n    /**\r\n     * This method will add items to the precache list, removing duplicates\r\n     * and ensuring the information is valid.\r\n     *\r\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\r\n     *     Array of entries to precache.\r\n     */\r\n    addToCacheList(entries) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isArray(entries, {\r\n                moduleName: 'workbox-precaching',\r\n                className: 'PrecacheController',\r\n                funcName: 'addToCacheList',\r\n                paramName: 'entries',\r\n            });\r\n        }\r\n        const urlsToWarnAbout = [];\r\n        for (const entry of entries) {\r\n            // See https://github.com/GoogleChrome/workbox/issues/2259\r\n            if (typeof entry === 'string') {\r\n                urlsToWarnAbout.push(entry);\r\n            }\r\n            else if (entry && entry.revision === undefined) {\r\n                urlsToWarnAbout.push(entry.url);\r\n            }\r\n            const { cacheKey, url } = createCacheKey(entry);\r\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\r\n            if (this._urlsToCacheKeys.has(url) &&\r\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\r\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\r\n                    firstEntry: this._urlsToCacheKeys.get(url),\r\n                    secondEntry: cacheKey,\r\n                });\r\n            }\r\n            if (typeof entry !== 'string' && entry.integrity) {\r\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\r\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\r\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\r\n                        url,\r\n                    });\r\n                }\r\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\r\n            }\r\n            this._urlsToCacheKeys.set(url, cacheKey);\r\n            this._urlsToCacheModes.set(url, cacheMode);\r\n            if (urlsToWarnAbout.length > 0) {\r\n                const warningMessage = `Workbox is precaching URLs without revision ` +\r\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\r\n                    `Learn more at https://bit.ly/wb-precache`;\r\n                if (process.env.NODE_ENV === 'production') {\r\n                    // Use console directly to display this warning without bloating\r\n                    // bundle sizes by pulling in all of the logger codebase in prod.\r\n                    console.warn(warningMessage);\r\n                }\r\n                else {\r\n                    logger.warn(warningMessage);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Precaches new and updated assets. Call this method from the service worker\r\n     * install event.\r\n     *\r\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\r\n     * to call it yourself in your event handlers.\r\n     *\r\n     * @param {ExtendableEvent} event\r\n     * @return {Promise<workbox-precaching.InstallResult>}\r\n     */\r\n    install(event) {\r\n        // waitUntil returns Promise<any>\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return waitUntil(event, async () => {\r\n            const installReportPlugin = new PrecacheInstallReportPlugin();\r\n            this.strategy.plugins.push(installReportPlugin);\r\n            // Cache entries one at a time.\r\n            // See https://github.com/GoogleChrome/workbox/issues/2528\r\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\r\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\r\n                const cacheMode = this._urlsToCacheModes.get(url);\r\n                const request = new Request(url, {\r\n                    integrity,\r\n                    cache: cacheMode,\r\n                    credentials: 'same-origin',\r\n                });\r\n                await Promise.all(this.strategy.handleAll({\r\n                    params: { cacheKey },\r\n                    request,\r\n                    event,\r\n                }));\r\n            }\r\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                printInstallDetails(updatedURLs, notUpdatedURLs);\r\n            }\r\n            return { updatedURLs, notUpdatedURLs };\r\n        });\r\n    }\r\n    /**\r\n     * Deletes assets that are no longer present in the current precache manifest.\r\n     * Call this method from the service worker activate event.\r\n     *\r\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\r\n     * to call it yourself in your event handlers.\r\n     *\r\n     * @param {ExtendableEvent} event\r\n     * @return {Promise<workbox-precaching.CleanupResult>}\r\n     */\r\n    activate(event) {\r\n        // waitUntil returns Promise<any>\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return waitUntil(event, async () => {\r\n            const cache = await self.caches.open(this.strategy.cacheName);\r\n            const currentlyCachedRequests = await cache.keys();\r\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\r\n            const deletedURLs = [];\r\n            for (const request of currentlyCachedRequests) {\r\n                if (!expectedCacheKeys.has(request.url)) {\r\n                    await cache.delete(request);\r\n                    deletedURLs.push(request.url);\r\n                }\r\n            }\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                printCleanupDetails(deletedURLs);\r\n            }\r\n            return { deletedURLs };\r\n        });\r\n    }\r\n    /**\r\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\r\n     * into account the revision information for the URL.\r\n     *\r\n     * @return {Map<string, string>} A URL to cache key mapping.\r\n     */\r\n    getURLsToCacheKeys() {\r\n        return this._urlsToCacheKeys;\r\n    }\r\n    /**\r\n     * Returns a list of all the URLs that have been precached by the current\r\n     * service worker.\r\n     *\r\n     * @return {Array<string>} The precached URLs.\r\n     */\r\n    getCachedURLs() {\r\n        return [...this._urlsToCacheKeys.keys()];\r\n    }\r\n    /**\r\n     * Returns the cache key used for storing a given URL. If that URL is\r\n     * unversioned, like `/index.html', then the cache key will be the original\r\n     * URL with a search parameter appended to it.\r\n     *\r\n     * @param {string} url A URL whose cache key you want to look up.\r\n     * @return {string} The versioned URL that corresponds to a cache key\r\n     * for the original URL, or undefined if that URL isn't precached.\r\n     */\r\n    getCacheKeyForURL(url) {\r\n        const urlObject = new URL(url, location.href);\r\n        return this._urlsToCacheKeys.get(urlObject.href);\r\n    }\r\n    /**\r\n     * @param {string} url A cache key whose SRI you want to look up.\r\n     * @return {string} The subresource integrity associated with the cache key,\r\n     * or undefined if it's not set.\r\n     */\r\n    getIntegrityForCacheKey(cacheKey) {\r\n        return this._cacheKeysToIntegrities.get(cacheKey);\r\n    }\r\n    /**\r\n     * This acts as a drop-in replacement for\r\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\r\n     * with the following differences:\r\n     *\r\n     * - It knows what the name of the precache is, and only checks in that cache.\r\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\r\n     * and it will automatically look up the correct cache key for the currently\r\n     * active revision of that URL.\r\n     *\r\n     * E.g., `matchPrecache('index.html')` will find the correct precached\r\n     * response for the currently active service worker, even if the actual cache\r\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\r\n     *\r\n     * @param {string|Request} request The key (without revisioning parameters)\r\n     * to look up in the precache.\r\n     * @return {Promise<Response|undefined>}\r\n     */\r\n    async matchPrecache(request) {\r\n        const url = request instanceof Request ? request.url : request;\r\n        const cacheKey = this.getCacheKeyForURL(url);\r\n        if (cacheKey) {\r\n            const cache = await self.caches.open(this.strategy.cacheName);\r\n            return cache.match(cacheKey);\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns a function that looks up `url` in the precache (taking into\r\n     * account revision information), and returns the corresponding `Response`.\r\n     *\r\n     * @param {string} url The precached URL which will be used to lookup the\r\n     * `Response`.\r\n     * @return {workbox-routing~handlerCallback}\r\n     */\r\n    createHandlerBoundToURL(url) {\r\n        const cacheKey = this.getCacheKeyForURL(url);\r\n        if (!cacheKey) {\r\n            throw new WorkboxError('non-precached-url', { url });\r\n        }\r\n        return (options) => {\r\n            options.request = new Request(url);\r\n            options.params = Object.assign({ cacheKey }, options.params);\r\n            return this.strategy.handle(options);\r\n        };\r\n    }\r\n}\r\nexport { PrecacheController };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { PrecacheController } from '../PrecacheController.js';\r\nimport '../_version.js';\r\nlet precacheController;\r\n/**\r\n * @return {PrecacheController}\r\n * @private\r\n */\r\nexport const getOrCreatePrecacheController = () => {\r\n    if (!precacheController) {\r\n        precacheController = new PrecacheController();\r\n    }\r\n    return precacheController;\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * Removes any URL search parameters that should be ignored.\r\n *\r\n * @param {URL} urlObject The original URL.\r\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\r\n * each search parameter name. Matches mean that the search parameter should be\r\n * ignored.\r\n * @return {URL} The URL with any ignored search parameters removed.\r\n *\r\n * @private\r\n * @memberof workbox-precaching\r\n */\r\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\r\n    // Convert the iterable into an array at the start of the loop to make sure\r\n    // deletion doesn't mess up iteration.\r\n    for (const paramName of [...urlObject.searchParams.keys()]) {\r\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\r\n            urlObject.searchParams.delete(paramName);\r\n        }\r\n    }\r\n    return urlObject;\r\n}\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\r\nimport '../_version.js';\r\n/**\r\n * Generator function that yields possible variations on the original URL to\r\n * check, one at a time.\r\n *\r\n * @param {string} url\r\n * @param {Object} options\r\n *\r\n * @private\r\n * @memberof workbox-precaching\r\n */\r\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\r\n    const urlObject = new URL(url, location.href);\r\n    urlObject.hash = '';\r\n    yield urlObject.href;\r\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\r\n    yield urlWithoutIgnoredParams.href;\r\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\r\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\r\n        directoryURL.pathname += directoryIndex;\r\n        yield directoryURL.href;\r\n    }\r\n    if (cleanURLs) {\r\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\r\n        cleanURL.pathname += '.html';\r\n        yield cleanURL.href;\r\n    }\r\n    if (urlManipulation) {\r\n        const additionalURLs = urlManipulation({ url: urlObject });\r\n        for (const urlToAttempt of additionalURLs) {\r\n            yield urlToAttempt.href;\r\n        }\r\n    }\r\n}\r\n","/*\r\n  Copyright 2020 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { Route } from 'workbox-routing/Route.js';\r\nimport { generateURLVariations } from './utils/generateURLVariations.js';\r\nimport './_version.js';\r\n/**\r\n * A subclass of {@link workbox-routing.Route} that takes a\r\n * {@link workbox-precaching.PrecacheController}\r\n * instance and uses it to match incoming requests and handle fetching\r\n * responses from the precache.\r\n *\r\n * @memberof workbox-precaching\r\n * @extends workbox-routing.Route\r\n */\r\nclass PrecacheRoute extends Route {\r\n    /**\r\n     * @param {PrecacheController} precacheController A `PrecacheController`\r\n     * instance used to both match requests and respond to fetch events.\r\n     * @param {Object} [options] Options to control how requests are matched\r\n     * against the list of precached URLs.\r\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\r\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\r\n     * appending the `directoryIndex` value.\r\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\r\n     * array of regex's to remove search params when looking for a cache match.\r\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\r\n     * check the cache for the URL with a `.html` added to the end of the end.\r\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\r\n     * This is a function that should take a URL and return an array of\r\n     * alternative URLs that should be checked for precache matches.\r\n     */\r\n    constructor(precacheController, options) {\r\n        const match = ({ request, }) => {\r\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\r\n            for (const possibleURL of generateURLVariations(request.url, options)) {\r\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\r\n                if (cacheKey) {\r\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\r\n                    return { cacheKey, integrity };\r\n                }\r\n            }\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\r\n            }\r\n            return;\r\n        };\r\n        super(match, precacheController.strategy);\r\n    }\r\n}\r\nexport { PrecacheRoute };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\r\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\r\nimport { PrecacheRoute } from './PrecacheRoute.js';\r\nimport './_version.js';\r\n/**\r\n * Add a `fetch` listener to the service worker that will\r\n * respond to\r\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\r\n * with precached assets.\r\n *\r\n * Requests for assets that aren't precached, the `FetchEvent` will not be\r\n * responded to, allowing the event to fall through to other `fetch` event\r\n * listeners.\r\n *\r\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\r\n * options.\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction addRoute(options) {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    const precacheRoute = new PrecacheRoute(precacheController, options);\r\n    registerRoute(precacheRoute);\r\n}\r\nexport { addRoute };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\r\nimport './_version.js';\r\n/**\r\n * Adds items to the precache list, removing any duplicates and\r\n * stores the files in the\r\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\r\n * worker installs.\r\n *\r\n * This method can be called multiple times.\r\n *\r\n * Please note: This method **will not** serve any of the cached files for you.\r\n * It only precaches files. To respond to a network request you call\r\n * {@link workbox-precaching.addRoute}.\r\n *\r\n * If you have a single array of files to precache, you can just call\r\n * {@link workbox-precaching.precacheAndRoute}.\r\n *\r\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction precache(entries) {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    precacheController.precache(entries);\r\n}\r\nexport { precache };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { addRoute } from './addRoute.js';\r\nimport { precache } from './precache.js';\r\nimport './_version.js';\r\n/**\r\n * This method will add entries to the precache list and add a route to\r\n * respond to fetch events.\r\n *\r\n * This is a convenience method that will call\r\n * {@link workbox-precaching.precache} and\r\n * {@link workbox-precaching.addRoute} in a single call.\r\n *\r\n * @param {Array<Object|string>} entries Array of entries to precache.\r\n * @param {Object} [options] See the\r\n * {@link workbox-precaching.PrecacheRoute} options.\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction precacheAndRoute(entries, options) {\r\n    precache(entries);\r\n    addRoute(options);\r\n}\r\nexport { precacheAndRoute };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst SUBSTRING_TO_FIND = '-precache-';\r\n/**\r\n * Cleans up incompatible precaches that were created by older versions of\r\n * Workbox, by a service worker registered under the current scope.\r\n *\r\n * This is meant to be called as part of the `activate` event.\r\n *\r\n * This should be safe to use as long as you don't include `substringToFind`\r\n * (defaulting to `-precache-`) in your non-precache cache names.\r\n *\r\n * @param {string} currentPrecacheName The cache name currently in use for\r\n * precaching. This cache won't be deleted.\r\n * @param {string} [substringToFind='-precache-'] Cache names which include this\r\n * substring will be deleted (excluding `currentPrecacheName`).\r\n * @return {Array<string>} A list of all the cache names that were deleted.\r\n *\r\n * @private\r\n * @memberof workbox-precaching\r\n */\r\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\r\n    const cacheNames = await self.caches.keys();\r\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\r\n        return (cacheName.includes(substringToFind) &&\r\n            cacheName.includes(self.registration.scope) &&\r\n            cacheName !== currentPrecacheName);\r\n    });\r\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\r\n    return cacheNamesToDelete;\r\n};\r\nexport { deleteOutdatedCaches };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\r\nimport './_version.js';\r\n/**\r\n * Adds an `activate` event listener which will clean up incompatible\r\n * precaches that were created by older versions of Workbox.\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction cleanupOutdatedCaches() {\r\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n    self.addEventListener('activate', ((event) => {\r\n        const cacheName = cacheNames.getPrecacheName();\r\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (cachesDeleted.length > 0) {\r\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\r\n                        `automatically:`, cachesDeleted);\r\n                }\r\n            }\r\n        }));\r\n    }));\r\n}\r\nexport { cleanupOutdatedCaches };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { Route } from './Route.js';\r\nimport './_version.js';\r\n/**\r\n * NavigationRoute makes it easy to create a\r\n * {@link workbox-routing.Route} that matches for browser\r\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\r\n *\r\n * It will only match incoming Requests whose\r\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\r\n * is set to `navigate`.\r\n *\r\n * You can optionally only apply this route to a subset of navigation requests\r\n * by using one or both of the `denylist` and `allowlist` parameters.\r\n *\r\n * @memberof workbox-routing\r\n * @extends workbox-routing.Route\r\n */\r\nclass NavigationRoute extends Route {\r\n    /**\r\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\r\n     * take precedence and the request will not match this route.\r\n     *\r\n     * The regular expressions in `allowlist` and `denylist`\r\n     * are matched against the concatenated\r\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\r\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\r\n     * portions of the requested URL.\r\n     *\r\n     * *Note*: These RegExps may be evaluated against every destination URL during\r\n     * a navigation. Avoid using\r\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\r\n     * or else your users may see delays when navigating your site.\r\n     *\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resulting in a Response.\r\n     * @param {Object} options\r\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\r\n     * the route will not handle the request (even if a allowlist RegExp matches).\r\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\r\n     * match the URL's pathname and search parameter, the route will handle the\r\n     * request (assuming the denylist doesn't match).\r\n     */\r\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isArrayOfClass(allowlist, RegExp, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'NavigationRoute',\r\n                funcName: 'constructor',\r\n                paramName: 'options.allowlist',\r\n            });\r\n            assert.isArrayOfClass(denylist, RegExp, {\r\n                moduleName: 'workbox-routing',\r\n                className: 'NavigationRoute',\r\n                funcName: 'constructor',\r\n                paramName: 'options.denylist',\r\n            });\r\n        }\r\n        super((options) => this._match(options), handler);\r\n        this._allowlist = allowlist;\r\n        this._denylist = denylist;\r\n    }\r\n    /**\r\n     * Routes match handler.\r\n     *\r\n     * @param {Object} options\r\n     * @param {URL} options.url\r\n     * @param {Request} options.request\r\n     * @return {boolean}\r\n     *\r\n     * @private\r\n     */\r\n    _match({ url, request }) {\r\n        if (request && request.mode !== 'navigate') {\r\n            return false;\r\n        }\r\n        const pathnameAndSearch = url.pathname + url.search;\r\n        for (const regExp of this._denylist) {\r\n            if (regExp.test(pathnameAndSearch)) {\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\r\n                        `being used, since the URL matches this denylist pattern: ` +\r\n                        `${regExp.toString()}`);\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\r\n            }\r\n            return true;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\r\n                `being used, since the URL being navigated to doesn't ` +\r\n                `match the allowlist.`);\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport { NavigationRoute };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\r\nimport './_version.js';\r\n/**\r\n * Helper function that calls\r\n * {@link PrecacheController#createHandlerBoundToURL} on the default\r\n * {@link PrecacheController} instance.\r\n *\r\n * If you are creating your own {@link PrecacheController}, then call the\r\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\r\n * instead of using this function.\r\n *\r\n * @param {string} url The precached URL which will be used to lookup the\r\n * `Response`.\r\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\r\n * response from the network if there's a precache miss.\r\n * @return {workbox-routing~handlerCallback}\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction createHandlerBoundToURL(url) {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    return precacheController.createHandlerBoundToURL(url);\r\n}\r\nexport { createHandlerBoundToURL };\r\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","invalid-value","paramName","validValueDescription","value","Error","JSON","stringify","not-an-array","moduleName","className","funcName","incorrect-type","expectedType","classNameStr","incorrect-class","expectedClassName","isReturnValueProblem","missing-a-method","expectedMethod","add-to-cache-list-unexpected-type","entry","add-to-cache-list-conflicting-entries","firstEntry","secondEntry","plugin-error-request-will-fetch","thrownErrorMessage","invalid-cache-name","cacheNameId","unregister-route-but-not-found-with-method","unregister-route-route-not-registered","queue-replay-failed","name","duplicate-queue-name","expired-test-without-max-age","methodName","unsupported-route-type","not-array-of-class","expectedClass","max-entries-or-age-required","statuses-or-headers-required","invalid-string","channel-name-required","invalid-responses-are-same-args","expire-custom-caches-only","unit-must-be-bytes","normalizedRangeHeader","single-range-only","invalid-range-values","no-range-header","range-not-satisfiable","size","start","end","attempt-to-cache-non-get-request","url","cache-put-with-no-response","no-response","message","bad-precaching-response","status","non-precached-url","add-to-cache-list-conflicting-integrities","missing-precache-entry","cacheName","cross-origin-copy-response","origin","opaque-streams-source","type","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","state","originalRequest","cachedResponseWillBeUsed","cachedResponse","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","headers","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","response","modifier","responseURL","clonedResponse","clone","responseInit","Headers","statusText","modifiedResponseInit","blob","stripParams","fullURL","ignoreParams","strippedURL","param","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","assign","ignoreSearch","cacheKeys","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","effectiveRequest","getCacheKey","multiMatchOptions","caches","vary","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","entries","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","bind","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","getIntegrityForCacheKey","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","precacheAndRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search"],"mappings":";;IACA;IACA,IAAI;IACAA,EAAAA,IAAI,CAAC,oBAAoB,CAAC,IAAIC,CAAC,EAAE,CAAA;IACrC,CAAC,CACD,OAAOC,CAAC,EAAE;;ICLV;IACA;IACA;IACA;IACA;IACA;IAEA,MAAMC,MAAM,GAEN,CAAC,MAAM;IACL;IACA;IACA,EAAA,IAAI,EAAE,uBAAuB,IAAIH,IAAI,CAAC,EAAE;QACpCA,IAAI,CAACI,qBAAqB,GAAG,KAAK,CAAA;IACtC,GAAA;MACA,IAAIC,OAAO,GAAG,KAAK,CAAA;IACnB,EAAA,MAAMC,gBAAgB,GAAG;IACrBC,IAAAA,KAAK,EAAG,CAAQ,OAAA,CAAA;IAChBC,IAAAA,GAAG,EAAG,CAAQ,OAAA,CAAA;IACdC,IAAAA,IAAI,EAAG,CAAQ,OAAA,CAAA;IACfC,IAAAA,KAAK,EAAG,CAAQ,OAAA,CAAA;IAChBC,IAAAA,cAAc,EAAG,CAAQ,OAAA,CAAA;QACzBC,QAAQ,EAAE,IAAI;OACjB,CAAA;;IACD,EAAA,MAAMC,KAAK,GAAG,UAAUC,MAAM,EAAEC,IAAI,EAAE;QAClC,IAAIf,IAAI,CAACI,qBAAqB,EAAE;IAC5B,MAAA,OAAA;IACJ,KAAA;QACA,IAAIU,MAAM,KAAK,gBAAgB,EAAE;IAC7B;IACA;UACA,IAAI,gCAAgC,CAACE,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,EAAE;IAC5DC,QAAAA,OAAO,CAACL,MAAM,CAAC,CAAC,GAAGC,IAAI,CAAC,CAAA;IACxB,QAAA,OAAA;IACJ,OAAA;IACJ,KAAA;IACA,IAAA,MAAMK,MAAM,GAAG,CACV,CAAcd,YAAAA,EAAAA,gBAAgB,CAACQ,MAAM,CAAE,CAAC,CAAA,EACxC,sBAAqB,EACrB,CAAA,YAAA,CAAa,EACb,CAAkB,iBAAA,CAAA,EAClB,oBAAmB,CACvB,CAAA;IACD;IACA,IAAA,MAAMO,SAAS,GAAGhB,OAAO,GAAG,EAAE,GAAG,CAAC,WAAW,EAAEe,MAAM,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QAChEH,OAAO,CAACL,MAAM,CAAC,CAAC,GAAGO,SAAS,EAAE,GAAGN,IAAI,CAAC,CAAA;QACtC,IAAID,MAAM,KAAK,gBAAgB,EAAE;IAC7BT,MAAAA,OAAO,GAAG,IAAI,CAAA;IAClB,KAAA;QACA,IAAIS,MAAM,KAAK,UAAU,EAAE;IACvBT,MAAAA,OAAO,GAAG,KAAK,CAAA;IACnB,KAAA;OACH,CAAA;IACD;MACA,MAAMkB,GAAG,GAAG,EAAE,CAAA;IACd,EAAA,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACpB,gBAAgB,CAAC,CAAA;IACnD,EAAA,KAAK,MAAMqB,GAAG,IAAIH,aAAa,EAAE;QAC7B,MAAMV,MAAM,GAAGa,GAAG,CAAA;IAClBJ,IAAAA,GAAG,CAACT,MAAM,CAAC,GAAG,CAAC,GAAGC,IAAI,KAAK;IACvBF,MAAAA,KAAK,CAACC,MAAM,EAAEC,IAAI,CAAC,CAAA;SACtB,CAAA;IACL,GAAA;IACA,EAAA,OAAOQ,GAAG,CAAA;IACd,CAAC,GAAI;;IC/DT;IACA;AACA;IACA;IACA;IACA;IACA;IAEO,MAAMK,QAAQ,GAAG;IACpB,EAAA,eAAe,EAAEC,CAAC;QAAEC,SAAS;QAAEC,qBAAqB;IAAEC,IAAAA,KAAAA;IAAM,GAAC,KAAK;IAC9D,IAAA,IAAI,CAACF,SAAS,IAAI,CAACC,qBAAqB,EAAE;IACtC,MAAA,MAAM,IAAIE,KAAK,CAAE,CAAA,0CAAA,CAA2C,CAAC,CAAA;IACjE,KAAA;IACA,IAAA,OAAS,CAAOH,KAAAA,EAAAA,SAAU,CAAuC,sCAAA,CAAA,GAC5D,qBAAoBC,qBAAsB,CAAA,qBAAA,CAAsB,GAChE,CAAA,EAAEG,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,CAAE,CAAA,CAAA,CAAA;OAClC;IACD,EAAA,cAAc,EAAEI,CAAC;QAAEC,UAAU;QAAEC,SAAS;QAAEC,QAAQ;IAAET,IAAAA,SAAAA;IAAU,GAAC,KAAK;QAChE,IAAI,CAACO,UAAU,IAAI,CAACC,SAAS,IAAI,CAACC,QAAQ,IAAI,CAACT,SAAS,EAAE;IACtD,MAAA,MAAM,IAAIG,KAAK,CAAE,CAAA,yCAAA,CAA0C,CAAC,CAAA;IAChE,KAAA;QACA,OAAS,CAAA,eAAA,EAAiBH,SAAU,CAAA,cAAA,CAAe,GAC9C,CAAA,CAAA,EAAGO,UAAW,CAAGC,CAAAA,EAAAA,SAAU,CAAGC,CAAAA,EAAAA,QAAS,CAAsB,qBAAA,CAAA,CAAA;OACrE;IACD,EAAA,gBAAgB,EAAEC,CAAC;QAAEC,YAAY;QAAEX,SAAS;QAAEO,UAAU;QAAEC,SAAS;IAAEC,IAAAA,QAAAA;IAAU,GAAC,KAAK;QACjF,IAAI,CAACE,YAAY,IAAI,CAACX,SAAS,IAAI,CAACO,UAAU,IAAI,CAACE,QAAQ,EAAE;IACzD,MAAA,MAAM,IAAIN,KAAK,CAAE,CAAA,2CAAA,CAA4C,CAAC,CAAA;IAClE,KAAA;QACA,MAAMS,YAAY,GAAGJ,SAAS,GAAI,GAAEA,SAAU,CAAA,CAAA,CAAE,GAAG,EAAE,CAAA;IACrD,IAAA,OAAS,CAAiBR,eAAAA,EAAAA,SAAU,CAAe,cAAA,CAAA,GAC9C,IAAGO,UAAW,CAAA,CAAA,EAAGK,YAAa,CAAA,CAAC,GAC/B,CAAA,EAAEH,QAAS,CAAA,oBAAA,EAAsBE,YAAa,CAAE,CAAA,CAAA,CAAA;OACxD;IACD,EAAA,iBAAiB,EAAEE,CAAC;QAAEC,iBAAiB;QAAEd,SAAS;QAAEO,UAAU;QAAEC,SAAS;QAAEC,QAAQ;IAAEM,IAAAA,oBAAAA;IAAsB,GAAC,KAAK;QAC7G,IAAI,CAACD,iBAAiB,IAAI,CAACP,UAAU,IAAI,CAACE,QAAQ,EAAE;IAChD,MAAA,MAAM,IAAIN,KAAK,CAAE,CAAA,4CAAA,CAA6C,CAAC,CAAA;IACnE,KAAA;QACA,MAAMS,YAAY,GAAGJ,SAAS,GAAI,GAAEA,SAAU,CAAA,CAAA,CAAE,GAAG,EAAE,CAAA;IACrD,IAAA,IAAIO,oBAAoB,EAAE;IACtB,MAAA,OAAS,CAAuB,sBAAA,CAAA,GAC3B,CAAGR,CAAAA,EAAAA,UAAW,CAAGK,CAAAA,EAAAA,YAAa,CAAEH,EAAAA,QAAS,CAAK,IAAA,CAAA,GAC9C,CAA+BK,6BAAAA,EAAAA,iBAAkB,CAAE,CAAA,CAAA,CAAA;IAC5D,KAAA;IACA,IAAA,OAAS,CAAiBd,eAAAA,EAAAA,SAAU,CAAe,cAAA,CAAA,GAC9C,IAAGO,UAAW,CAAA,CAAA,EAAGK,YAAa,CAAA,EAAEH,QAAS,CAAA,IAAA,CAAK,GAC9C,CAAA,6BAAA,EAA+BK,iBAAkB,CAAE,CAAA,CAAA,CAAA;OAC3D;IACD,EAAA,kBAAkB,EAAEE,CAAC;QAAEC,cAAc;QAAEjB,SAAS;QAAEO,UAAU;QAAEC,SAAS;IAAEC,IAAAA,QAAAA;IAAU,GAAC,KAAK;IACrF,IAAA,IAAI,CAACQ,cAAc,IACf,CAACjB,SAAS,IACV,CAACO,UAAU,IACX,CAACC,SAAS,IACV,CAACC,QAAQ,EAAE;IACX,MAAA,MAAM,IAAIN,KAAK,CAAE,CAAA,6CAAA,CAA8C,CAAC,CAAA;IACpE,KAAA;IACA,IAAA,OAAS,CAAEI,EAAAA,UAAW,CAAGC,CAAAA,EAAAA,SAAU,CAAGC,CAAAA,EAAAA,QAAS,CAAiB,gBAAA,CAAA,GAC3D,CAAGT,CAAAA,EAAAA,SAAU,CAA2BiB,yBAAAA,EAAAA,cAAe,CAAU,SAAA,CAAA,CAAA;OACzE;IACD,EAAA,mCAAmC,EAAEC,CAAC;IAAEC,IAAAA,KAAAA;IAAM,GAAC,KAAK;IAChD,IAAA,OAAS,CAAmC,kCAAA,CAAA,GACvC,CAAoE,mEAAA,CAAA,GACpE,IAAGf,IAAI,CAACC,SAAS,CAACc,KAAK,CAAE,CAAA,+CAAA,CAAgD,GACzE,CAAA,oEAAA,CAAqE,GACrE,CAAiB,gBAAA,CAAA,CAAA;OACzB;IACD,EAAA,uCAAuC,EAAEC,CAAC;QAAEC,UAAU;IAAEC,IAAAA,WAAAA;IAAY,GAAC,KAAK;IACtE,IAAA,IAAI,CAACD,UAAU,IAAI,CAACC,WAAW,EAAE;IAC7B,MAAA,MAAM,IAAInB,KAAK,CAAE,CAAqB,oBAAA,CAAA,GAAI,8CAA6C,CAAC,CAAA;IAC5F,KAAA;QACA,OAAS,CAAA,6BAAA,CAA8B,GAClC,CAAA,qEAAA,CAAsE,GACtE,CAAA,EAAEkB,UAAW,CAA6C,4CAAA,CAAA,GAC1D,CAAoE,mEAAA,CAAA,GACpE,CAAgB,eAAA,CAAA,CAAA;OACxB;IACD,EAAA,iCAAiC,EAAEE,CAAC;IAAEC,IAAAA,kBAAAA;IAAmB,GAAC,KAAK;QAC3D,IAAI,CAACA,kBAAkB,EAAE;IACrB,MAAA,MAAM,IAAIrB,KAAK,CAAE,CAAqB,oBAAA,CAAA,GAAI,2CAA0C,CAAC,CAAA;IACzF,KAAA;IACA,IAAA,OAAS,CAA+D,8DAAA,CAAA,GACnE,CAAiCqB,+BAAAA,EAAAA,kBAAmB,CAAG,EAAA,CAAA,CAAA;OAC/D;IACD,EAAA,oBAAoB,EAAEC,CAAC;QAAEC,WAAW;IAAExB,IAAAA,KAAAA;IAAM,GAAC,KAAK;QAC9C,IAAI,CAACwB,WAAW,EAAE;IACd,MAAA,MAAM,IAAIvB,KAAK,CAAE,CAAA,uDAAA,CAAwD,CAAC,CAAA;IAC9E,KAAA;IACA,IAAA,OAAS,CAA+D,8DAAA,CAAA,GACnE,CAAmBuB,iBAAAA,EAAAA,WAAY,CAAgC,+BAAA,CAAA,GAC/D,CAAGtB,CAAAA,EAAAA,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,CAAE,CAAA,CAAA,CAAA;OACnC;IACD,EAAA,4CAA4C,EAAEyB,CAAC;IAAE3C,IAAAA,MAAAA;IAAO,GAAC,KAAK;QAC1D,IAAI,CAACA,MAAM,EAAE;IACT,MAAA,MAAM,IAAImB,KAAK,CAAE,CAAqB,oBAAA,CAAA,GACjC,qDAAoD,CAAC,CAAA;IAC9D,KAAA;IACA,IAAA,OAAS,CAA2D,0DAAA,CAAA,GAC/D,CAAkCnB,gCAAAA,EAAAA,MAAO,CAAG,EAAA,CAAA,CAAA;OACpD;MACD,uCAAuC,EAAE4C,MAAM;QAC3C,OAAS,CAAA,yDAAA,CAA0D,GAC9D,CAAY,WAAA,CAAA,CAAA;OACpB;IACD,EAAA,qBAAqB,EAAEC,CAAC;IAAEC,IAAAA,IAAAA;IAAK,GAAC,KAAK;QACjC,OAAQ,CAAA,qCAAA,EAAuCA,IAAK,CAAU,SAAA,CAAA,CAAA;OACjE;IACD,EAAA,sBAAsB,EAAEC,CAAC;IAAED,IAAAA,IAAAA;IAAK,GAAC,KAAK;IAClC,IAAA,OAAS,CAAkBA,gBAAAA,EAAAA,IAAK,CAA0B,yBAAA,CAAA,GACrD,CAAkE,iEAAA,CAAA,CAAA;OAC1E;IACD,EAAA,8BAA8B,EAAEE,CAAC;QAAEC,UAAU;IAAEjC,IAAAA,SAAAA;IAAU,GAAC,KAAK;IAC3D,IAAA,OAAS,QAAOiC,UAAW,CAAA,qCAAA,CAAsC,GAC5D,CAAA,CAAA,EAAGjC,SAAU,CAA8B,6BAAA,CAAA,CAAA;OACnD;IACD,EAAA,wBAAwB,EAAEkC,CAAC;QAAE3B,UAAU;QAAEC,SAAS;QAAEC,QAAQ;IAAET,IAAAA,SAAAA;IAAU,GAAC,KAAK;IAC1E,IAAA,OAAS,CAAgBA,cAAAA,EAAAA,SAAU,CAAsC,qCAAA,CAAA,GACpE,CAA4BO,0BAAAA,EAAAA,UAAW,CAAGC,CAAAA,EAAAA,SAAU,CAAGC,CAAAA,EAAAA,QAAS,CAAM,KAAA,CAAA,GACtE,CAAmB,kBAAA,CAAA,CAAA;OAC3B;IACD,EAAA,oBAAoB,EAAE0B,CAAC;QAAEjC,KAAK;QAAEkC,aAAa;QAAE7B,UAAU;QAAEC,SAAS;QAAEC,QAAQ;IAAET,IAAAA,SAAAA;IAAW,GAAC,KAAK;QAC7F,OAAS,CAAA,cAAA,EAAgBA,SAAU,CAAiC,gCAAA,CAAA,GAC/D,IAAGoC,aAAc,CAAA,qBAAA,EAAuBhC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,CAAA,IAAA,CAAK,GACnE,CAAA,yBAAA,EAA2BK,UAAW,CAAA,CAAA,EAAGC,SAAU,CAAGC,CAAAA,EAAAA,QAAS,CAAI,GAAA,CAAA,GACnE,CAAkB,iBAAA,CAAA,CAAA;OAC1B;IACD,EAAA,6BAA6B,EAAE4B,CAAC;QAAE9B,UAAU;QAAEC,SAAS;IAAEC,IAAAA,QAAAA;IAAS,GAAC,KAAK;QACpE,OAAS,CAAA,gEAAA,CAAiE,GACrE,CAAKF,GAAAA,EAAAA,UAAW,IAAGC,SAAU,CAAA,CAAA,EAAGC,QAAS,CAAC,CAAA,CAAA;OAClD;IACD,EAAA,8BAA8B,EAAE6B,CAAC;QAAE/B,UAAU;QAAEC,SAAS;IAAEC,IAAAA,QAAAA;IAAS,GAAC,KAAK;QACrE,OAAS,CAAA,wDAAA,CAAyD,GAC7D,CAAKF,GAAAA,EAAAA,UAAW,IAAGC,SAAU,CAAA,CAAA,EAAGC,QAAS,CAAC,CAAA,CAAA;OAClD;IACD,EAAA,gBAAgB,EAAE8B,CAAC;QAAEhC,UAAU;QAAEE,QAAQ;IAAET,IAAAA,SAAAA;IAAU,GAAC,KAAK;QACvD,IAAI,CAACA,SAAS,IAAI,CAACO,UAAU,IAAI,CAACE,QAAQ,EAAE;IACxC,MAAA,MAAM,IAAIN,KAAK,CAAE,CAAA,2CAAA,CAA4C,CAAC,CAAA;IAClE,KAAA;IACA,IAAA,OAAS,CAA2BH,yBAAAA,EAAAA,SAAU,CAA6B,4BAAA,CAAA,GACtE,CAAqE,oEAAA,CAAA,GACrE,CAA0BO,wBAAAA,EAAAA,UAAW,CAAGE,CAAAA,EAAAA,QAAS,CAAQ,OAAA,CAAA,GACzD,CAAW,UAAA,CAAA,CAAA;OACnB;MACD,uBAAuB,EAAE+B,MAAM;QAC3B,OAAS,CAAA,8CAAA,CAA+C,GACnD,CAA+B,8BAAA,CAAA,CAAA;OACvC;MACD,iCAAiC,EAAEC,MAAM;QACrC,OAAS,CAAA,0DAAA,CAA2D,GAC/D,CAAiD,gDAAA,CAAA,CAAA;OACzD;MACD,2BAA2B,EAAEC,MAAM;QAC/B,OAAS,CAAA,uDAAA,CAAwD,GAC5D,CAAmD,kDAAA,CAAA,CAAA;OAC3D;IACD,EAAA,oBAAoB,EAAEC,CAAC;IAAEC,IAAAA,qBAAAA;IAAsB,GAAC,KAAK;QACjD,IAAI,CAACA,qBAAqB,EAAE;IACxB,MAAA,MAAM,IAAIzC,KAAK,CAAE,CAAA,+CAAA,CAAgD,CAAC,CAAA;IACtE,KAAA;IACA,IAAA,OAAS,CAAgE,+DAAA,CAAA,GACpE,CAAiCyC,+BAAAA,EAAAA,qBAAsB,CAAE,CAAA,CAAA,CAAA;OACjE;IACD,EAAA,mBAAmB,EAAEC,CAAC;IAAED,IAAAA,qBAAAA;IAAsB,GAAC,KAAK;QAChD,IAAI,CAACA,qBAAqB,EAAE;IACxB,MAAA,MAAM,IAAIzC,KAAK,CAAE,CAAA,8CAAA,CAA+C,CAAC,CAAA;IACrE,KAAA;IACA,IAAA,OAAS,gEAA+D,GACnE,CAAA,6DAAA,CAA8D,GAC9D,CAAA,CAAA,EAAGyC,qBAAsB,CAAE,CAAA,CAAA,CAAA;OACnC;IACD,EAAA,sBAAsB,EAAEE,CAAC;IAAEF,IAAAA,qBAAAA;IAAsB,GAAC,KAAK;QACnD,IAAI,CAACA,qBAAqB,EAAE;IACxB,MAAA,MAAM,IAAIzC,KAAK,CAAE,CAAA,iDAAA,CAAkD,CAAC,CAAA;IACxE,KAAA;IACA,IAAA,OAAS,kEAAiE,GACrE,CAAA,6DAAA,CAA8D,GAC9D,CAAA,CAAA,EAAGyC,qBAAsB,CAAE,CAAA,CAAA,CAAA;OACnC;MACD,iBAAiB,EAAEG,MAAM;IACrB,IAAA,OAAQ,CAAmD,kDAAA,CAAA,CAAA;OAC9D;IACD,EAAA,uBAAuB,EAAEC,CAAC;QAAEC,IAAI;QAAEC,KAAK;IAAEC,IAAAA,GAAAA;IAAI,GAAC,KAAK;QAC/C,OAAS,CAAA,WAAA,EAAaD,KAAM,CAAaC,WAAAA,EAAAA,GAAI,4BAA2B,GACnE,CAAA,iDAAA,EAAmDF,IAAK,CAAQ,OAAA,CAAA,CAAA;OACxE;IACD,EAAA,kCAAkC,EAAEG,CAAC;QAAEC,GAAG;IAAErE,IAAAA,MAAAA;IAAO,GAAC,KAAK;IACrD,IAAA,OAAS,oBAAmBqE,GAAI,CAAA,mBAAA,EAAqBrE,MAAO,CAAA,cAAA,CAAe,GACtE,CAAmC,kCAAA,CAAA,CAAA;OAC3C;IACD,EAAA,4BAA4B,EAAEsE,CAAC;IAAED,IAAAA,GAAAA;IAAI,GAAC,KAAK;IACvC,IAAA,OAAS,CAAiCA,+BAAAA,EAAAA,GAAI,CAA4B,2BAAA,CAAA,GACrE,CAAS,QAAA,CAAA,CAAA;OACjB;IACD,EAAA,aAAa,EAAEE,CAAC;QAAEF,GAAG;IAAEzE,IAAAA,KAAAA;IAAM,GAAC,KAAK;IAC/B,IAAA,IAAI4E,OAAO,GAAI,CAAkDH,gDAAAA,EAAAA,GAAI,CAAG,EAAA,CAAA,CAAA;IACxE,IAAA,IAAIzE,KAAK,EAAE;UACP4E,OAAO,IAAK,CAA2B5E,yBAAAA,EAAAA,KAAM,CAAE,CAAA,CAAA,CAAA;IACnD,KAAA;IACA,IAAA,OAAO4E,OAAO,CAAA;OACjB;IACD,EAAA,yBAAyB,EAAEC,CAAC;QAAEJ,GAAG;IAAEK,IAAAA,MAAAA;IAAO,GAAC,KAAK;QAC5C,OAAS,CAAA,4BAAA,EAA8BL,GAAI,CAAA,QAAA,CAAS,IAC/CK,MAAM,GAAI,CAAA,wBAAA,EAA0BA,MAAO,CAAA,CAAA,CAAE,GAAI,CAAA,CAAA,CAAE,CAAC,CAAA;OAC5D;IACD,EAAA,mBAAmB,EAAEC,CAAC;IAAEN,IAAAA,GAAAA;IAAI,GAAC,KAAK;IAC9B,IAAA,OAAS,CAA2BA,yBAAAA,EAAAA,GAAI,CAAgC,+BAAA,CAAA,GACnE,CAA+D,8DAAA,CAAA,CAAA;OACvE;IACD,EAAA,2CAA2C,EAAEO,CAAC;IAAEP,IAAAA,GAAAA;IAAI,GAAC,KAAK;IACtD,IAAA,OAAS,+BAA8B,GAClC,CAAA,qEAAA,CAAsE,GACtE,CAAA,EAAEA,GAAI,CAA6D,4DAAA,CAAA,CAAA;OAC3E;IACD,EAAA,wBAAwB,EAAEQ,CAAC;QAAEC,SAAS;IAAET,IAAAA,GAAAA;IAAI,GAAC,KAAK;IAC9C,IAAA,OAAQ,CAAyCS,uCAAAA,EAAAA,SAAU,CAAOT,KAAAA,EAAAA,GAAI,CAAE,CAAA,CAAA,CAAA;OAC3E;IACD,EAAA,4BAA4B,EAAEU,CAAC;IAAEC,IAAAA,MAAAA;IAAO,GAAC,KAAK;IAC1C,IAAA,OAAS,CAA+D,8DAAA,CAAA,GACnE,CAAkDA,gDAAAA,EAAAA,MAAO,CAAE,CAAA,CAAA,CAAA;OACnE;IACD,EAAA,uBAAuB,EAAEC,CAAC;IAAEC,IAAAA,IAAAA;IAAK,GAAC,KAAK;IACnC,IAAA,MAAMV,OAAO,GAAI,CAAA,kDAAA,CAAmD,GAC/D,CAAA,CAAA,EAAGU,IAAK,CAAY,WAAA,CAAA,CAAA;QACzB,IAAIA,IAAI,KAAK,gBAAgB,EAAE;IAC3B,MAAA,OAAS,CAAEV,EAAAA,OAAQ,CAAsD,qDAAA,CAAA,GACpE,CAA2B,0BAAA,CAAA,CAAA;IACpC,KAAA;QACA,OAAQ,CAAA,EAAEA,OAAQ,CAA8C,6CAAA,CAAA,CAAA;IACpE,GAAA;IACJ,CAAC;;ICnOD;IACA;AACA;IACA;IACA;IACA;IACA;IAUA,MAAMW,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAG,EAAE,KAAK;IAC9C,EAAA,MAAMb,OAAO,GAAG1D,QAAQ,CAACsE,IAAI,CAAC,CAAA;MAC9B,IAAI,CAACZ,OAAO,EAAE;IACV,IAAA,MAAM,IAAIrD,KAAK,CAAE,CAAmCiE,iCAAAA,EAAAA,IAAK,IAAG,CAAC,CAAA;IACjE,GAAA;MACA,OAAOZ,OAAO,CAACa,OAAO,CAAC,CAAA;IAC3B,CAAC,CAAA;IACM,MAAMC,gBAAgB,GAAsDH,iBAAiB;;ICvBpG;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMI,YAAY,SAASpE,KAAK,CAAC;IAC7B;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACIqE,EAAAA,WAAWA,CAACC,SAAS,EAAEJ,OAAO,EAAE;IAC5B,IAAA,MAAMb,OAAO,GAAGc,gBAAgB,CAACG,SAAS,EAAEJ,OAAO,CAAC,CAAA;QACpD,KAAK,CAACb,OAAO,CAAC,CAAA;QACd,IAAI,CAAC1B,IAAI,GAAG2C,SAAS,CAAA;QACrB,IAAI,CAACJ,OAAO,GAAGA,OAAO,CAAA;IAC1B,GAAA;IACJ;;ICjCA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMK,OAAO,GAAGA,CAACxE,KAAK,EAAEmE,OAAO,KAAK;IAChC,EAAA,IAAI,CAACM,KAAK,CAACD,OAAO,CAACxE,KAAK,CAAC,EAAE;IACvB,IAAA,MAAM,IAAIqE,YAAY,CAAC,cAAc,EAAEF,OAAO,CAAC,CAAA;IACnD,GAAA;IACJ,CAAC,CAAA;IACD,MAAMO,SAAS,GAAGA,CAACC,MAAM,EAAE5D,cAAc,EAAEoD,OAAO,KAAK;IACnD,EAAA,MAAMH,IAAI,GAAG,OAAOW,MAAM,CAAC5D,cAAc,CAAC,CAAA;MAC1C,IAAIiD,IAAI,KAAK,UAAU,EAAE;IACrBG,IAAAA,OAAO,CAAC,gBAAgB,CAAC,GAAGpD,cAAc,CAAA;IAC1C,IAAA,MAAM,IAAIsD,YAAY,CAAC,kBAAkB,EAAEF,OAAO,CAAC,CAAA;IACvD,GAAA;IACJ,CAAC,CAAA;IACD,MAAMS,MAAM,GAAGA,CAACD,MAAM,EAAElE,YAAY,EAAE0D,OAAO,KAAK;IAC9C,EAAA,IAAI,OAAOQ,MAAM,KAAKlE,YAAY,EAAE;IAChC0D,IAAAA,OAAO,CAAC,cAAc,CAAC,GAAG1D,YAAY,CAAA;IACtC,IAAA,MAAM,IAAI4D,YAAY,CAAC,gBAAgB,EAAEF,OAAO,CAAC,CAAA;IACrD,GAAA;IACJ,CAAC,CAAA;IACD,MAAMU,UAAU,GAAGA,CAACF,MAAM;IAC1B;IACA;IACAzC,aAAa,EAAEiC,OAAO,KAAK;IACvB,EAAA,IAAI,EAAEQ,MAAM,YAAYzC,aAAa,CAAC,EAAE;IACpCiC,IAAAA,OAAO,CAAC,mBAAmB,CAAC,GAAGjC,aAAa,CAACN,IAAI,CAAA;IACjD,IAAA,MAAM,IAAIyC,YAAY,CAAC,iBAAiB,EAAEF,OAAO,CAAC,CAAA;IACtD,GAAA;IACJ,CAAC,CAAA;IACD,MAAMW,OAAO,GAAGA,CAAC9E,KAAK,EAAE+E,WAAW,EAAEZ,OAAO,KAAK;IAC7C,EAAA,IAAI,CAACY,WAAW,CAACC,QAAQ,CAAChF,KAAK,CAAC,EAAE;QAC9BmE,OAAO,CAAC,uBAAuB,CAAC,GAAI,CAAA,iBAAA,EAAmBjE,IAAI,CAACC,SAAS,CAAC4E,WAAW,CAAE,CAAE,CAAA,CAAA,CAAA;IACrF,IAAA,MAAM,IAAIV,YAAY,CAAC,eAAe,EAAEF,OAAO,CAAC,CAAA;IACpD,GAAA;IACJ,CAAC,CAAA;IACD,MAAMc,cAAc,GAAGA,CAACjF,KAAK;IAC7B;IACAkC,aAAa;IAAE;IACfiC,OAAO,KAAK;MACR,MAAMzF,KAAK,GAAG,IAAI2F,YAAY,CAAC,oBAAoB,EAAEF,OAAO,CAAC,CAAA;IAC7D,EAAA,IAAI,CAACM,KAAK,CAACD,OAAO,CAACxE,KAAK,CAAC,EAAE;IACvB,IAAA,MAAMtB,KAAK,CAAA;IACf,GAAA;IACA,EAAA,KAAK,MAAMwG,IAAI,IAAIlF,KAAK,EAAE;IACtB,IAAA,IAAI,EAAEkF,IAAI,YAAYhD,aAAa,CAAC,EAAE;IAClC,MAAA,MAAMxD,KAAK,CAAA;IACf,KAAA;IACJ,GAAA;IACJ,CAAC,CAAA;IACD,MAAMyG,kBAAkB,GAElB;MACET,SAAS;MACTF,OAAO;MACPK,UAAU;MACVC,OAAO;MACPF,MAAM;IACNK,EAAAA,cAAAA;IACJ,CAAC;;ICtEL;IACA,IAAI;IACAjH,EAAAA,IAAI,CAAC,uBAAuB,CAAC,IAAIC,CAAC,EAAE,CAAA;IACxC,CAAC,CACD,OAAOC,CAAC,EAAE;;ICLV;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMkH,aAAa,GAAG,KAAK,CAAA;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMC,YAAY,GAAG,CACxB,QAAQ,EACR,KAAK,EACL,MAAM,EACN,OAAO,EACP,MAAM,EACN,KAAK,CACR;;IC/BD;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACzC,EAAA,IAAIA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;QACG;IACvCC,MAAAA,kBAAM,CAACd,SAAS,CAACa,OAAO,EAAE,QAAQ,EAAE;IAChClF,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,OAAO;IAClBC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,SAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;IACA,IAAA,OAAOyF,OAAO,CAAA;IAClB,GAAC,MACI;QAC0C;IACvCC,MAAAA,kBAAM,CAACZ,MAAM,CAACW,OAAO,EAAE,UAAU,EAAE;IAC/BlF,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,OAAO;IAClBC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,SAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;QACA,OAAO;IAAE2F,MAAAA,MAAM,EAAEF,OAAAA;SAAS,CAAA;IAC9B,GAAA;IACJ,CAAC;;ICvCD;IACA;AACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMG,KAAK,CAAC;IACR;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIpB,WAAWA,CAACqB,KAAK,EAAEJ,OAAO,EAAEzG,MAAM,GAAGsG,aAAa,EAAE;QACL;IACvCI,MAAAA,kBAAM,CAACZ,MAAM,CAACe,KAAK,EAAE,UAAU,EAAE;IAC7BtF,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,OAAO;IAClBC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,OAAA;IACf,OAAC,CAAC,CAAA;IACF,MAAA,IAAIhB,MAAM,EAAE;IACR0G,QAAAA,kBAAM,CAACV,OAAO,CAAChG,MAAM,EAAEuG,YAAY,EAAE;IAAEvF,UAAAA,SAAS,EAAE,QAAA;IAAS,SAAC,CAAC,CAAA;IACjE,OAAA;IACJ,KAAA;IACA;IACA;IACA,IAAA,IAAI,CAACyF,OAAO,GAAGD,gBAAgB,CAACC,OAAO,CAAC,CAAA;QACxC,IAAI,CAACI,KAAK,GAAGA,KAAK,CAAA;QAClB,IAAI,CAAC7G,MAAM,GAAGA,MAAM,CAAA;IACxB,GAAA;IACA;IACJ;IACA;IACA;IACA;MACI8G,eAAeA,CAACL,OAAO,EAAE;IACrB,IAAA,IAAI,CAACM,YAAY,GAAGP,gBAAgB,CAACC,OAAO,CAAC,CAAA;IACjD,GAAA;IACJ;;IC1DA;IACA;AACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMO,WAAW,SAASJ,KAAK,CAAC;IAC5B;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIpB,EAAAA,WAAWA,CAACyB,MAAM,EAAER,OAAO,EAAEzG,MAAM,EAAE;QACU;IACvC0G,MAAAA,kBAAM,CAACX,UAAU,CAACkB,MAAM,EAAEC,MAAM,EAAE;IAC9B3F,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,aAAa;IACxBC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,SAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;QACA,MAAM6F,KAAK,GAAGA,CAAC;IAAExC,MAAAA,GAAAA;IAAI,KAAC,KAAK;UACvB,MAAM8C,MAAM,GAAGF,MAAM,CAACG,IAAI,CAAC/C,GAAG,CAACgD,IAAI,CAAC,CAAA;IACpC;UACA,IAAI,CAACF,MAAM,EAAE;IACT,QAAA,OAAA;IACJ,OAAA;IACA;IACA;IACA;IACA;IACA,MAAA,IAAI9C,GAAG,CAACW,MAAM,KAAKsC,QAAQ,CAACtC,MAAM,IAAImC,MAAM,CAACI,KAAK,KAAK,CAAC,EAAE;YACX;IACvClI,UAAAA,MAAM,CAACI,KAAK,CAAE,2BAA0BwH,MAAM,CAACO,QAAQ,EAAG,CAAA,yBAAA,CAA0B,GAC/E,CAAA,8BAAA,EAAgCnD,GAAG,CAACmD,QAAQ,EAAG,CAA4B,2BAAA,CAAA,GAC3E,4DAA2D,CAAC,CAAA;IACrE,SAAA;IACA,QAAA,OAAA;IACJ,OAAA;IACA;IACA;IACA;IACA;IACA,MAAA,OAAOL,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAAA;SACzB,CAAA;IACD,IAAA,KAAK,CAACZ,KAAK,EAAEJ,OAAO,EAAEzG,MAAM,CAAC,CAAA;IACjC,GAAA;IACJ;;ICvEA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA,MAAM0H,cAAc,GAAIrD,GAAG,IAAK;IAC5B,EAAA,MAAMsD,MAAM,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACxD,GAAG,CAAC,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;IAClD;IACA;IACA,EAAA,OAAOM,MAAM,CAACN,IAAI,CAACS,OAAO,CAAC,IAAIZ,MAAM,CAAE,CAAA,CAAA,EAAGI,QAAQ,CAACtC,MAAO,EAAC,CAAC,EAAE,EAAE,CAAC,CAAA;IACrE,CAAC;;ICbD;IACA;AACA;IACA;IACA;IACA;IACA;IAQA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM+C,MAAM,CAAC;IACT;IACJ;IACA;IACIvC,EAAAA,WAAWA,GAAG;IACV,IAAA,IAAI,CAACwC,OAAO,GAAG,IAAIC,GAAG,EAAE,CAAA;IACxB,IAAA,IAAI,CAACC,kBAAkB,GAAG,IAAID,GAAG,EAAE,CAAA;IACvC,GAAA;IACA;IACJ;IACA;IACA;IACA;MACI,IAAIE,MAAMA,GAAG;QACT,OAAO,IAAI,CAACH,OAAO,CAAA;IACvB,GAAA;IACA;IACJ;IACA;IACA;IACII,EAAAA,gBAAgBA,GAAG;IACf;IACAlJ,IAAAA,IAAI,CAACmJ,gBAAgB,CAAC,OAAO,EAAIC,KAAK,IAAK;UACvC,MAAM;IAAEC,QAAAA,OAAAA;IAAQ,OAAC,GAAGD,KAAK,CAAA;IACzB,MAAA,MAAME,eAAe,GAAG,IAAI,CAACC,aAAa,CAAC;YAAEF,OAAO;IAAED,QAAAA,KAAAA;IAAM,OAAC,CAAC,CAAA;IAC9D,MAAA,IAAIE,eAAe,EAAE;IACjBF,QAAAA,KAAK,CAACI,WAAW,CAACF,eAAe,CAAC,CAAA;IACtC,OAAA;IACJ,KAAC,CAAE,CAAA;IACP,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIG,EAAAA,gBAAgBA,GAAG;IACf;IACAzJ,IAAAA,IAAI,CAACmJ,gBAAgB,CAAC,SAAS,EAAIC,KAAK,IAAK;IACzC;IACA;UACA,IAAIA,KAAK,CAACM,IAAI,IAAIN,KAAK,CAACM,IAAI,CAAC1D,IAAI,KAAK,YAAY,EAAE;IAChD;YACA,MAAM;IAAE2D,UAAAA,OAAAA;aAAS,GAAGP,KAAK,CAACM,IAAI,CAAA;YACa;cACvCvJ,MAAM,CAACI,KAAK,CAAE,CAAA,4BAAA,CAA6B,EAAEoJ,OAAO,CAACC,WAAW,CAAC,CAAA;IACrE,SAAA;IACA,QAAA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACC,WAAW,CAACI,GAAG,CAAE/G,KAAK,IAAK;IACnE,UAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;gBAC3BA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAA;IACnB,WAAA;IACA,UAAA,MAAMoG,OAAO,GAAG,IAAIY,OAAO,CAAC,GAAGhH,KAAK,CAAC,CAAA;cACrC,OAAO,IAAI,CAACsG,aAAa,CAAC;gBAAEF,OAAO;IAAED,YAAAA,KAAAA;IAAM,WAAC,CAAC,CAAA;IAC7C;IACA;IACA;aACH,CAAC,CAAC,CAAC;IACJA,QAAAA,KAAK,CAACc,SAAS,CAACL,eAAe,CAAC,CAAA;IAChC;YACA,IAAIT,KAAK,CAACe,KAAK,IAAIf,KAAK,CAACe,KAAK,CAAC,CAAC,CAAC,EAAE;IAC/B,UAAA,KAAKN,eAAe,CAACO,IAAI,CAAC,MAAMhB,KAAK,CAACe,KAAK,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAA;IACrE,SAAA;IACJ,OAAA;IACJ,KAAC,CAAE,CAAA;IACP,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACId,EAAAA,aAAaA,CAAC;QAAEF,OAAO;IAAED,IAAAA,KAAAA;IAAO,GAAC,EAAE;QACY;IACvC5B,MAAAA,kBAAM,CAACX,UAAU,CAACwC,OAAO,EAAEY,OAAO,EAAE;IAChC5H,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,QAAQ;IACnBC,QAAAA,QAAQ,EAAE,eAAe;IACzBT,QAAAA,SAAS,EAAE,iBAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;IACA,IAAA,MAAMqD,GAAG,GAAG,IAAIuD,GAAG,CAACW,OAAO,CAAClE,GAAG,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;QAC/C,IAAI,CAAChD,GAAG,CAACmF,QAAQ,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;UACS;IACvCpK,QAAAA,MAAM,CAACI,KAAK,CAAE,CAAA,yDAAA,CAA0D,CAAC,CAAA;IAC7E,OAAA;IACA,MAAA,OAAA;IACJ,KAAA;QACA,MAAMiK,UAAU,GAAGrF,GAAG,CAACW,MAAM,KAAKsC,QAAQ,CAACtC,MAAM,CAAA;QACjD,MAAM;UAAE2E,MAAM;IAAEC,MAAAA,KAAAA;IAAM,KAAC,GAAG,IAAI,CAACC,iBAAiB,CAAC;UAC7CvB,KAAK;UACLC,OAAO;UACPmB,UAAU;IACVrF,MAAAA,GAAAA;IACJ,KAAC,CAAC,CAAA;IACF,IAAA,IAAIoC,OAAO,GAAGmD,KAAK,IAAIA,KAAK,CAACnD,OAAO,CAAA;QACpC,MAAMqD,aAAa,GAAG,EAAE,CAAA;QACmB;IACvC,MAAA,IAAIrD,OAAO,EAAE;YACTqD,aAAa,CAACC,IAAI,CAAC,CAAE,uCAAsC,EAAEH,KAAK,CAAC,CAAC,CAAA;IACpE,QAAA,IAAID,MAAM,EAAE;cACRG,aAAa,CAACC,IAAI,CAAC,CACd,sDAAqD,EACtDJ,MAAM,CACT,CAAC,CAAA;IACN,SAAA;IACJ,OAAA;IACJ,KAAA;IACA;IACA;IACA,IAAA,MAAM3J,MAAM,GAAGuI,OAAO,CAACvI,MAAM,CAAA;QAC7B,IAAI,CAACyG,OAAO,IAAI,IAAI,CAACyB,kBAAkB,CAAC8B,GAAG,CAAChK,MAAM,CAAC,EAAE;UACN;YACvC8J,aAAa,CAACC,IAAI,CAAE,CAAA,yCAAA,CAA0C,GACzD,CAAkC/J,gCAAAA,EAAAA,MAAO,GAAE,CAAC,CAAA;IACrD,OAAA;UACAyG,OAAO,GAAG,IAAI,CAACyB,kBAAkB,CAAC+B,GAAG,CAACjK,MAAM,CAAC,CAAA;IACjD,KAAA;QACA,IAAI,CAACyG,OAAO,EAAE;UACiC;IACvC;IACA;YACApH,MAAM,CAACI,KAAK,CAAE,CAAA,oBAAA,EAAsBiI,cAAc,CAACrD,GAAG,CAAE,CAAA,CAAC,CAAC,CAAA;IAC9D,OAAA;IACA,MAAA,OAAA;IACJ,KAAA;QAC2C;IACvC;IACA;UACAhF,MAAM,CAACQ,cAAc,CAAE,CAAA,yBAAA,EAA2B6H,cAAc,CAACrD,GAAG,CAAE,CAAA,CAAC,CAAC,CAAA;IACxEyF,MAAAA,aAAa,CAACI,OAAO,CAAEC,GAAG,IAAK;IAC3B,QAAA,IAAIxE,KAAK,CAACD,OAAO,CAACyE,GAAG,CAAC,EAAE;IACpB9K,UAAAA,MAAM,CAACK,GAAG,CAAC,GAAGyK,GAAG,CAAC,CAAA;IACtB,SAAC,MACI;IACD9K,UAAAA,MAAM,CAACK,GAAG,CAACyK,GAAG,CAAC,CAAA;IACnB,SAAA;IACJ,OAAC,CAAC,CAAA;UACF9K,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,KAAA;IACA;IACA;IACA,IAAA,IAAI0I,eAAe,CAAA;QACnB,IAAI;IACAA,MAAAA,eAAe,GAAG/B,OAAO,CAACE,MAAM,CAAC;YAAEtC,GAAG;YAAEkE,OAAO;YAAED,KAAK;IAAEqB,QAAAA,MAAAA;IAAO,OAAC,CAAC,CAAA;SACpE,CACD,OAAOS,GAAG,EAAE;IACR5B,MAAAA,eAAe,GAAGQ,OAAO,CAACqB,MAAM,CAACD,GAAG,CAAC,CAAA;IACzC,KAAA;IACA;IACA,IAAA,MAAMrD,YAAY,GAAG6C,KAAK,IAAIA,KAAK,CAAC7C,YAAY,CAAA;QAChD,IAAIyB,eAAe,YAAYQ,OAAO,KACjC,IAAI,CAACsB,aAAa,IAAIvD,YAAY,CAAC,EAAE;IACtCyB,MAAAA,eAAe,GAAGA,eAAe,CAAC+B,KAAK,CAAC,MAAOH,GAAG,IAAK;IACnD;IACA,QAAA,IAAIrD,YAAY,EAAE;cAC6B;IACvC;IACA;gBACA1H,MAAM,CAACQ,cAAc,CAAE,CAAkC,iCAAA,CAAA,GACpD,CAAG6H,CAAAA,EAAAA,cAAc,CAACrD,GAAG,CAAE,CAAA,wCAAA,CAAyC,CAAC,CAAA;IACtEhF,YAAAA,MAAM,CAACO,KAAK,CAAE,CAAiB,gBAAA,CAAA,EAAEgK,KAAK,CAAC,CAAA;IACvCvK,YAAAA,MAAM,CAACO,KAAK,CAACwK,GAAG,CAAC,CAAA;gBACjB/K,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,WAAA;cACA,IAAI;IACA,YAAA,OAAO,MAAMiH,YAAY,CAACJ,MAAM,CAAC;kBAAEtC,GAAG;kBAAEkE,OAAO;kBAAED,KAAK;IAAEqB,cAAAA,MAAAA;IAAO,aAAC,CAAC,CAAA;eACpE,CACD,OAAOa,QAAQ,EAAE;gBACb,IAAIA,QAAQ,YAAYrJ,KAAK,EAAE;IAC3BiJ,cAAAA,GAAG,GAAGI,QAAQ,CAAA;IAClB,aAAA;IACJ,WAAA;IACJ,SAAA;YACA,IAAI,IAAI,CAACF,aAAa,EAAE;cACuB;IACvC;IACA;gBACAjL,MAAM,CAACQ,cAAc,CAAE,CAAkC,iCAAA,CAAA,GACpD,CAAG6H,CAAAA,EAAAA,cAAc,CAACrD,GAAG,CAAE,CAAA,uCAAA,CAAwC,CAAC,CAAA;IACrEhF,YAAAA,MAAM,CAACO,KAAK,CAAE,CAAiB,gBAAA,CAAA,EAAEgK,KAAK,CAAC,CAAA;IACvCvK,YAAAA,MAAM,CAACO,KAAK,CAACwK,GAAG,CAAC,CAAA;gBACjB/K,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,WAAA;IACA,UAAA,OAAO,IAAI,CAACwK,aAAa,CAAC3D,MAAM,CAAC;gBAAEtC,GAAG;gBAAEkE,OAAO;IAAED,YAAAA,KAAAA;IAAM,WAAC,CAAC,CAAA;IAC7D,SAAA;IACA,QAAA,MAAM8B,GAAG,CAAA;IACb,OAAC,CAAC,CAAA;IACN,KAAA;IACA,IAAA,OAAO5B,eAAe,CAAA;IAC1B,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIqB,EAAAA,iBAAiBA,CAAC;QAAExF,GAAG;QAAEqF,UAAU;QAAEnB,OAAO;IAAED,IAAAA,KAAAA;IAAO,GAAC,EAAE;IACpD,IAAA,MAAMH,MAAM,GAAG,IAAI,CAACH,OAAO,CAACiC,GAAG,CAAC1B,OAAO,CAACvI,MAAM,CAAC,IAAI,EAAE,CAAA;IACrD,IAAA,KAAK,MAAM4J,KAAK,IAAIzB,MAAM,EAAE;IACxB,MAAA,IAAIwB,MAAM,CAAA;IACV;IACA;IACA,MAAA,MAAMc,WAAW,GAAGb,KAAK,CAAC/C,KAAK,CAAC;YAAExC,GAAG;YAAEqF,UAAU;YAAEnB,OAAO;IAAED,QAAAA,KAAAA;IAAM,OAAC,CAAC,CAAA;IACpE,MAAA,IAAImC,WAAW,EAAE;YAC8B;IACvC;IACA;cACA,IAAIA,WAAW,YAAYzB,OAAO,EAAE;IAChC3J,YAAAA,MAAM,CAACM,IAAI,CAAE,CAAA,cAAA,EAAgB+H,cAAc,CAACrD,GAAG,CAAE,CAAA,WAAA,CAAY,GACxD,CAAqD,oDAAA,CAAA,GACrD,CAA6D,4DAAA,CAAA,EAAEuF,KAAK,CAAC,CAAA;IAC9E,WAAA;IACJ,SAAA;IACA;IACA;IACAD,QAAAA,MAAM,GAAGc,WAAW,CAAA;IACpB,QAAA,IAAI9E,KAAK,CAACD,OAAO,CAACiE,MAAM,CAAC,IAAIA,MAAM,CAACe,MAAM,KAAK,CAAC,EAAE;IAC9C;IACAf,UAAAA,MAAM,GAAGgB,SAAS,CAAA;IACtB,SAAC,MACI,IAAIF,WAAW,CAACjF,WAAW,KAAK7E,MAAM;IAAI;YAC3CA,MAAM,CAACC,IAAI,CAAC6J,WAAW,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IACvC;IACAf,UAAAA,MAAM,GAAGgB,SAAS,CAAA;IACtB,SAAC,MACI,IAAI,OAAOF,WAAW,KAAK,SAAS,EAAE;IACvC;IACA;IACA;IACAd,UAAAA,MAAM,GAAGgB,SAAS,CAAA;IACtB,SAAA;IACA;YACA,OAAO;cAAEf,KAAK;IAAED,UAAAA,MAAAA;aAAQ,CAAA;IAC5B,OAAA;IACJ,KAAA;IACA;IACA,IAAA,OAAO,EAAE,CAAA;IACb,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIiB,EAAAA,iBAAiBA,CAACnE,OAAO,EAAEzG,MAAM,GAAGsG,aAAa,EAAE;QAC/C,IAAI,CAAC4B,kBAAkB,CAAC2C,GAAG,CAAC7K,MAAM,EAAEwG,gBAAgB,CAACC,OAAO,CAAC,CAAC,CAAA;IAClE,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;MACIK,eAAeA,CAACL,OAAO,EAAE;IACrB,IAAA,IAAI,CAAC6D,aAAa,GAAG9D,gBAAgB,CAACC,OAAO,CAAC,CAAA;IAClD,GAAA;IACA;IACJ;IACA;IACA;IACA;MACIqE,aAAaA,CAAClB,KAAK,EAAE;QAC0B;IACvClD,MAAAA,kBAAM,CAACZ,MAAM,CAAC8D,KAAK,EAAE,QAAQ,EAAE;IAC3BrI,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,QAAQ;IACnBC,QAAAA,QAAQ,EAAE,eAAe;IACzBT,QAAAA,SAAS,EAAE,OAAA;IACf,OAAC,CAAC,CAAA;IACF0F,MAAAA,kBAAM,CAACd,SAAS,CAACgE,KAAK,EAAE,OAAO,EAAE;IAC7BrI,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,QAAQ;IACnBC,QAAAA,QAAQ,EAAE,eAAe;IACzBT,QAAAA,SAAS,EAAE,OAAA;IACf,OAAC,CAAC,CAAA;UACF0F,kBAAM,CAACZ,MAAM,CAAC8D,KAAK,CAACnD,OAAO,EAAE,QAAQ,EAAE;IACnClF,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,QAAQ;IACnBC,QAAAA,QAAQ,EAAE,eAAe;IACzBT,QAAAA,SAAS,EAAE,OAAA;IACf,OAAC,CAAC,CAAA;UACF0F,kBAAM,CAACd,SAAS,CAACgE,KAAK,CAACnD,OAAO,EAAE,QAAQ,EAAE;IACtClF,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,QAAQ;IACnBC,QAAAA,QAAQ,EAAE,eAAe;IACzBT,QAAAA,SAAS,EAAE,eAAA;IACf,OAAC,CAAC,CAAA;UACF0F,kBAAM,CAACZ,MAAM,CAAC8D,KAAK,CAAC5J,MAAM,EAAE,QAAQ,EAAE;IAClCuB,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,QAAQ;IACnBC,QAAAA,QAAQ,EAAE,eAAe;IACzBT,QAAAA,SAAS,EAAE,cAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;QACA,IAAI,CAAC,IAAI,CAACgH,OAAO,CAACgC,GAAG,CAACJ,KAAK,CAAC5J,MAAM,CAAC,EAAE;UACjC,IAAI,CAACgI,OAAO,CAAC6C,GAAG,CAACjB,KAAK,CAAC5J,MAAM,EAAE,EAAE,CAAC,CAAA;IACtC,KAAA;IACA;IACA;IACA,IAAA,IAAI,CAACgI,OAAO,CAACiC,GAAG,CAACL,KAAK,CAAC5J,MAAM,CAAC,CAAC+J,IAAI,CAACH,KAAK,CAAC,CAAA;IAC9C,GAAA;IACA;IACJ;IACA;IACA;IACA;MACImB,eAAeA,CAACnB,KAAK,EAAE;QACnB,IAAI,CAAC,IAAI,CAAC5B,OAAO,CAACgC,GAAG,CAACJ,KAAK,CAAC5J,MAAM,CAAC,EAAE;IACjC,MAAA,MAAM,IAAIuF,YAAY,CAAC,4CAA4C,EAAE;YACjEvF,MAAM,EAAE4J,KAAK,CAAC5J,MAAAA;IAClB,OAAC,CAAC,CAAA;IACN,KAAA;IACA,IAAA,MAAMgL,UAAU,GAAG,IAAI,CAAChD,OAAO,CAACiC,GAAG,CAACL,KAAK,CAAC5J,MAAM,CAAC,CAACiL,OAAO,CAACrB,KAAK,CAAC,CAAA;IAChE,IAAA,IAAIoB,UAAU,GAAG,CAAC,CAAC,EAAE;IACjB,MAAA,IAAI,CAAChD,OAAO,CAACiC,GAAG,CAACL,KAAK,CAAC5J,MAAM,CAAC,CAACkL,MAAM,CAACF,UAAU,EAAE,CAAC,CAAC,CAAA;IACxD,KAAC,MACI;IACD,MAAA,MAAM,IAAIzF,YAAY,CAAC,uCAAuC,CAAC,CAAA;IACnE,KAAA;IACJ,GAAA;IACJ;;ICvYA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA,IAAI4F,aAAa,CAAA;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMC,wBAAwB,GAAGA,MAAM;MAC1C,IAAI,CAACD,aAAa,EAAE;QAChBA,aAAa,GAAG,IAAIpD,MAAM,EAAE,CAAA;IAC5B;QACAoD,aAAa,CAAC/C,gBAAgB,EAAE,CAAA;QAChC+C,aAAa,CAACxC,gBAAgB,EAAE,CAAA;IACpC,GAAA;IACA,EAAA,OAAOwC,aAAa,CAAA;IACxB,CAAC;;ICzBD;IACA;AACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASL,aAAaA,CAACO,OAAO,EAAE5E,OAAO,EAAEzG,MAAM,EAAE;IAC7C,EAAA,IAAI4J,KAAK,CAAA;IACT,EAAA,IAAI,OAAOyB,OAAO,KAAK,QAAQ,EAAE;QAC7B,MAAMC,UAAU,GAAG,IAAI1D,GAAG,CAACyD,OAAO,EAAE/D,QAAQ,CAACD,IAAI,CAAC,CAAA;QACP;IACvC,MAAA,IAAI,EAAEgE,OAAO,CAAC5B,UAAU,CAAC,GAAG,CAAC,IAAI4B,OAAO,CAAC5B,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE;IAC1D,QAAA,MAAM,IAAIlE,YAAY,CAAC,gBAAgB,EAAE;IACrChE,UAAAA,UAAU,EAAE,iBAAiB;IAC7BE,UAAAA,QAAQ,EAAE,eAAe;IACzBT,UAAAA,SAAS,EAAE,SAAA;IACf,SAAC,CAAC,CAAA;IACN,OAAA;IACA;IACA;IACA,MAAA,MAAMuK,YAAY,GAAGF,OAAO,CAAC5B,UAAU,CAAC,MAAM,CAAC,GACzC6B,UAAU,CAACE,QAAQ,GACnBH,OAAO,CAAA;IACb;UACA,MAAMI,SAAS,GAAG,QAAQ,CAAA;IAC1B,MAAA,IAAI,IAAIvE,MAAM,CAAE,CAAA,EAAEuE,SAAU,CAAA,CAAC,CAAC,CAACrE,IAAI,CAACmE,YAAY,CAAC,EAAE;YAC/ClM,MAAM,CAACI,KAAK,CAAE,CAA6D,4DAAA,CAAA,GACtE,cAAagM,SAAU,CAAA,yCAAA,CAA0C,GACjE,CAAA,4DAAA,CAA6D,CAAC,CAAA;IACvE,OAAA;IACJ,KAAA;QACA,MAAMC,aAAa,GAAGA,CAAC;IAAErH,MAAAA,GAAAA;IAAI,KAAC,KAAK;UACY;IACvC,QAAA,IAAIA,GAAG,CAACmH,QAAQ,KAAKF,UAAU,CAACE,QAAQ,IACpCnH,GAAG,CAACW,MAAM,KAAKsG,UAAU,CAACtG,MAAM,EAAE;IAClC3F,UAAAA,MAAM,CAACI,KAAK,CAAE,CAAA,EAAE4L,OAAQ,CAA8C,6CAAA,CAAA,GACjE,CAAEhH,EAAAA,GAAG,CAACmD,QAAQ,EAAG,CAAqD,oDAAA,CAAA,GACtE,+BAA8B,CAAC,CAAA;IACxC,SAAA;IACJ,OAAA;IACA,MAAA,OAAOnD,GAAG,CAACgD,IAAI,KAAKiE,UAAU,CAACjE,IAAI,CAAA;SACtC,CAAA;IACD;QACAuC,KAAK,GAAG,IAAIhD,KAAK,CAAC8E,aAAa,EAAEjF,OAAO,EAAEzG,MAAM,CAAC,CAAA;IACrD,GAAC,MACI,IAAIqL,OAAO,YAAYnE,MAAM,EAAE;IAChC;QACA0C,KAAK,GAAG,IAAI5C,WAAW,CAACqE,OAAO,EAAE5E,OAAO,EAAEzG,MAAM,CAAC,CAAA;IACrD,GAAC,MACI,IAAI,OAAOqL,OAAO,KAAK,UAAU,EAAE;IACpC;QACAzB,KAAK,GAAG,IAAIhD,KAAK,CAACyE,OAAO,EAAE5E,OAAO,EAAEzG,MAAM,CAAC,CAAA;IAC/C,GAAC,MACI,IAAIqL,OAAO,YAAYzE,KAAK,EAAE;IAC/BgD,IAAAA,KAAK,GAAGyB,OAAO,CAAA;IACnB,GAAC,MACI;IACD,IAAA,MAAM,IAAI9F,YAAY,CAAC,wBAAwB,EAAE;IAC7ChE,MAAAA,UAAU,EAAE,iBAAiB;IAC7BE,MAAAA,QAAQ,EAAE,eAAe;IACzBT,MAAAA,SAAS,EAAE,SAAA;IACf,KAAC,CAAC,CAAA;IACN,GAAA;MACA,MAAMmK,aAAa,GAAGC,wBAAwB,EAAE,CAAA;IAChDD,EAAAA,aAAa,CAACL,aAAa,CAAClB,KAAK,CAAC,CAAA;IAClC,EAAA,OAAOA,KAAK,CAAA;IAChB;;IC3FA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA,MAAM+B,iBAAiB,GAAG;IACtBC,EAAAA,eAAe,EAAE,iBAAiB;IAClCC,EAAAA,QAAQ,EAAE,aAAa;IACvBC,EAAAA,MAAM,EAAE,SAAS;IACjBC,EAAAA,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE,OAAOC,YAAY,KAAK,WAAW,GAAGA,YAAY,CAACC,KAAK,GAAG,EAAA;IACvE,CAAC,CAAA;IACD,MAAMC,gBAAgB,GAAIrH,SAAS,IAAK;IACpC,EAAA,OAAO,CAAC6G,iBAAiB,CAACG,MAAM,EAAEhH,SAAS,EAAE6G,iBAAiB,CAACK,MAAM,CAAC,CACjEI,MAAM,CAAElL,KAAK,IAAKA,KAAK,IAAIA,KAAK,CAACwJ,MAAM,GAAG,CAAC,CAAC,CAC5ClK,IAAI,CAAC,GAAG,CAAC,CAAA;IAClB,CAAC,CAAA;IACD,MAAM6L,mBAAmB,GAAIC,EAAE,IAAK;MAChC,KAAK,MAAMzL,GAAG,IAAIF,MAAM,CAACC,IAAI,CAAC+K,iBAAiB,CAAC,EAAE;QAC9CW,EAAE,CAACzL,GAAG,CAAC,CAAA;IACX,GAAA;IACJ,CAAC,CAAA;IACM,MAAM0L,UAAU,GAAG;MACtBC,aAAa,EAAGnH,OAAO,IAAK;QACxBgH,mBAAmB,CAAExL,GAAG,IAAK;IACzB,MAAA,IAAI,OAAOwE,OAAO,CAACxE,GAAG,CAAC,KAAK,QAAQ,EAAE;IAClC8K,QAAAA,iBAAiB,CAAC9K,GAAG,CAAC,GAAGwE,OAAO,CAACxE,GAAG,CAAC,CAAA;IACzC,OAAA;IACJ,KAAC,CAAC,CAAA;OACL;MACD4L,sBAAsB,EAAGC,aAAa,IAAK;IACvC,IAAA,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACC,eAAe,CAAC,CAAA;OAC9E;MACDe,eAAe,EAAGD,aAAa,IAAK;IAChC,IAAA,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACE,QAAQ,CAAC,CAAA;OACvE;MACDe,SAAS,EAAEA,MAAM;QACb,OAAOjB,iBAAiB,CAACG,MAAM,CAAA;OAClC;MACDe,cAAc,EAAGH,aAAa,IAAK;IAC/B,IAAA,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACI,OAAO,CAAC,CAAA;OACtE;MACDe,SAAS,EAAEA,MAAM;QACb,OAAOnB,iBAAiB,CAACK,MAAM,CAAA;IACnC,GAAA;IACJ,CAAC;;IChDD;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS5C,SAASA,CAACd,KAAK,EAAEyE,OAAO,EAAE;MAC/B,MAAMC,aAAa,GAAGD,OAAO,EAAE,CAAA;IAC/BzE,EAAAA,KAAK,CAACc,SAAS,CAAC4D,aAAa,CAAC,CAAA;IAC9B,EAAA,OAAOA,aAAa,CAAA;IACxB;;ICnBA;IACA,IAAI;IACA9N,EAAAA,IAAI,CAAC,0BAA0B,CAAC,IAAIC,CAAC,EAAE,CAAA;IAC3C,CAAC,CACD,OAAOC,CAAC,EAAE;;ICLV;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA,MAAM6N,qBAAqB,GAAG,iBAAiB,CAAA;IAC/C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAASC,cAAcA,CAAC/K,KAAK,EAAE;MAClC,IAAI,CAACA,KAAK,EAAE;IACR,IAAA,MAAM,IAAIoD,YAAY,CAAC,mCAAmC,EAAE;IAAEpD,MAAAA,KAAAA;IAAM,KAAC,CAAC,CAAA;IAC1E,GAAA;IACA;IACA;IACA,EAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC3B,MAAMgL,SAAS,GAAG,IAAIvF,GAAG,CAACzF,KAAK,EAAEmF,QAAQ,CAACD,IAAI,CAAC,CAAA;QAC/C,OAAO;UACH+F,QAAQ,EAAED,SAAS,CAAC9F,IAAI;UACxBhD,GAAG,EAAE8I,SAAS,CAAC9F,IAAAA;SAClB,CAAA;IACL,GAAA;MACA,MAAM;QAAEgG,QAAQ;IAAEhJ,IAAAA,GAAAA;IAAI,GAAC,GAAGlC,KAAK,CAAA;MAC/B,IAAI,CAACkC,GAAG,EAAE;IACN,IAAA,MAAM,IAAIkB,YAAY,CAAC,mCAAmC,EAAE;IAAEpD,MAAAA,KAAAA;IAAM,KAAC,CAAC,CAAA;IAC1E,GAAA;IACA;IACA;MACA,IAAI,CAACkL,QAAQ,EAAE;QACX,MAAMF,SAAS,GAAG,IAAIvF,GAAG,CAACvD,GAAG,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;QAC7C,OAAO;UACH+F,QAAQ,EAAED,SAAS,CAAC9F,IAAI;UACxBhD,GAAG,EAAE8I,SAAS,CAAC9F,IAAAA;SAClB,CAAA;IACL,GAAA;IACA;IACA;MACA,MAAMiG,WAAW,GAAG,IAAI1F,GAAG,CAACvD,GAAG,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;MAC/C,MAAMkG,WAAW,GAAG,IAAI3F,GAAG,CAACvD,GAAG,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;MAC/CiG,WAAW,CAACE,YAAY,CAAC3C,GAAG,CAACoC,qBAAqB,EAAEI,QAAQ,CAAC,CAAA;MAC7D,OAAO;QACHD,QAAQ,EAAEE,WAAW,CAACjG,IAAI;QAC1BhD,GAAG,EAAEkJ,WAAW,CAAClG,IAAAA;OACpB,CAAA;IACL;;ICvDA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMoG,2BAA2B,CAAC;IAC9BjI,EAAAA,WAAWA,GAAG;QACV,IAAI,CAACkI,WAAW,GAAG,EAAE,CAAA;QACrB,IAAI,CAACC,cAAc,GAAG,EAAE,CAAA;QACxB,IAAI,CAACC,gBAAgB,GAAG,OAAO;UAAErF,OAAO;IAAEsF,MAAAA,KAAAA;IAAO,KAAC,KAAK;IACnD;IACA,MAAA,IAAIA,KAAK,EAAE;YACPA,KAAK,CAACC,eAAe,GAAGvF,OAAO,CAAA;IACnC,OAAA;SACH,CAAA;QACD,IAAI,CAACwF,wBAAwB,GAAG,OAAO;UAAEzF,KAAK;UAAEuF,KAAK;IAAEG,MAAAA,cAAAA;IAAgB,KAAC,KAAK;IACzE,MAAA,IAAI1F,KAAK,CAACpD,IAAI,KAAK,SAAS,EAAE;YAC1B,IAAI2I,KAAK,IACLA,KAAK,CAACC,eAAe,IACrBD,KAAK,CAACC,eAAe,YAAY3E,OAAO,EAAE;IAC1C;IACA,UAAA,MAAM9E,GAAG,GAAGwJ,KAAK,CAACC,eAAe,CAACzJ,GAAG,CAAA;IACrC,UAAA,IAAI2J,cAAc,EAAE;IAChB,YAAA,IAAI,CAACL,cAAc,CAAC5D,IAAI,CAAC1F,GAAG,CAAC,CAAA;IACjC,WAAC,MACI;IACD,YAAA,IAAI,CAACqJ,WAAW,CAAC3D,IAAI,CAAC1F,GAAG,CAAC,CAAA;IAC9B,WAAA;IACJ,SAAA;IACJ,OAAA;IACA,MAAA,OAAO2J,cAAc,CAAA;SACxB,CAAA;IACL,GAAA;IACJ;;IC1CA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,sBAAsB,CAAC;IACzBzI,EAAAA,WAAWA,CAAC;IAAE0I,IAAAA,kBAAAA;IAAmB,GAAC,EAAE;QAChC,IAAI,CAACC,kBAAkB,GAAG,OAAO;UAAE5F,OAAO;IAAEoB,MAAAA,MAAAA;IAAQ,KAAC,KAAK;IACtD;IACA;IACA,MAAA,MAAMyD,QAAQ,GAAG,CAACzD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACyD,QAAQ,KAC7E,IAAI,CAACgB,mBAAmB,CAACC,iBAAiB,CAAC9F,OAAO,CAAClE,GAAG,CAAC,CAAA;IAC3D;IACA,MAAA,OAAO+I,QAAQ,GACT,IAAIjE,OAAO,CAACiE,QAAQ,EAAE;YAAEkB,OAAO,EAAE/F,OAAO,CAAC+F,OAAAA;WAAS,CAAC,GACnD/F,OAAO,CAAA;SAChB,CAAA;QACD,IAAI,CAAC6F,mBAAmB,GAAGF,kBAAkB,CAAA;IACjD,GAAA;IACJ;;IC5BA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMK,QAAQ,GAAGA,CAACC,UAAU,EAAEC,WAAW,KAAK;IAC1CpP,EAAAA,MAAM,CAACQ,cAAc,CAAC2O,UAAU,CAAC,CAAA;IACjC,EAAA,KAAK,MAAMnK,GAAG,IAAIoK,WAAW,EAAE;IAC3BpP,IAAAA,MAAM,CAACK,GAAG,CAAC2E,GAAG,CAAC,CAAA;IACnB,GAAA;MACAhF,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,CAAC,CAAA;IACD;IACA;IACA;IACA;IACA;IACA;IACO,SAAS4O,mBAAmBA,CAACD,WAAW,EAAE;IAC7C,EAAA,MAAME,aAAa,GAAGF,WAAW,CAAC/D,MAAM,CAAA;MACxC,IAAIiE,aAAa,GAAG,CAAC,EAAE;IACnBtP,IAAAA,MAAM,CAACQ,cAAc,CAAE,6BAA4B,GAC9C,CAAA,EAAE8O,aAAc,CAAS,QAAA,CAAA,GACzB,CAASA,OAAAA,EAAAA,aAAa,KAAK,CAAC,GAAG,MAAM,GAAG,QAAS,WAAU,CAAC,CAAA;IACjEJ,IAAAA,QAAQ,CAAC,wBAAwB,EAAEE,WAAW,CAAC,CAAA;QAC/CpP,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,GAAA;IACJ;;ICrCA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS8O,YAAYA,CAACJ,UAAU,EAAEK,IAAI,EAAE;IACpC,EAAA,IAAIA,IAAI,CAACnE,MAAM,KAAK,CAAC,EAAE;IACnB,IAAA,OAAA;IACJ,GAAA;IACArL,EAAAA,MAAM,CAACQ,cAAc,CAAC2O,UAAU,CAAC,CAAA;IACjC,EAAA,KAAK,MAAMnK,GAAG,IAAIwK,IAAI,EAAE;IACpBxP,IAAAA,MAAM,CAACK,GAAG,CAAC2E,GAAG,CAAC,CAAA;IACnB,GAAA;MACAhF,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,CAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAASgP,mBAAmBA,CAACC,cAAc,EAAEC,oBAAoB,EAAE;IACtE,EAAA,MAAMC,cAAc,GAAGF,cAAc,CAACrE,MAAM,CAAA;IAC5C,EAAA,MAAMwE,qBAAqB,GAAGF,oBAAoB,CAACtE,MAAM,CAAA;MACzD,IAAIuE,cAAc,IAAIC,qBAAqB,EAAE;IACzC,IAAA,IAAI1K,OAAO,GAAI,CAAayK,WAAAA,EAAAA,cAAe,CAAOA,KAAAA,EAAAA,cAAc,KAAK,CAAC,GAAG,EAAE,GAAG,GAAI,CAAE,CAAA,CAAA,CAAA;QACpF,IAAIC,qBAAqB,GAAG,CAAC,EAAE;IAC3B1K,MAAAA,OAAO,IACF,CAAA,CAAA,EAAG0K,qBAAsB,CAAA,CAAA,CAAE,GACvB,CAAA,IAAA,EAAMA,qBAAqB,KAAK,CAAC,GAAG,KAAK,GAAG,OAAQ,CAAiB,gBAAA,CAAA,CAAA;IAClF,KAAA;IACA7P,IAAAA,MAAM,CAACQ,cAAc,CAAC2E,OAAO,CAAC,CAAA;IAC9BoK,IAAAA,YAAY,CAAE,CAAA,0BAAA,CAA2B,EAAEG,cAAc,CAAC,CAAA;IAC1DH,IAAAA,YAAY,CAAE,CAAA,+BAAA,CAAgC,EAAEI,oBAAoB,CAAC,CAAA;QACrE3P,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,GAAA;IACJ;;IC/CA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA,IAAIqP,aAAa,CAAA;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASC,kCAAkCA,GAAG;MAC1C,IAAID,aAAa,KAAKxE,SAAS,EAAE;IAC7B,IAAA,MAAM0E,YAAY,GAAG,IAAIC,QAAQ,CAAC,EAAE,CAAC,CAAA;QACrC,IAAI,MAAM,IAAID,YAAY,EAAE;UACxB,IAAI;IACA,QAAA,IAAIC,QAAQ,CAACD,YAAY,CAACE,IAAI,CAAC,CAAA;IAC/BJ,QAAAA,aAAa,GAAG,IAAI,CAAA;WACvB,CACD,OAAOvP,KAAK,EAAE;IACVuP,QAAAA,aAAa,GAAG,KAAK,CAAA;IACzB,OAAA;IACJ,KAAA;IACAA,IAAAA,aAAa,GAAG,KAAK,CAAA;IACzB,GAAA;IACA,EAAA,OAAOA,aAAa,CAAA;IACxB;;ICjCA;IACA;AACA;IACA;IACA;IACA;IACA;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAeK,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;MAC5C,IAAI1K,MAAM,GAAG,IAAI,CAAA;IACjB;MACA,IAAIyK,QAAQ,CAACpL,GAAG,EAAE;QACd,MAAMsL,WAAW,GAAG,IAAI/H,GAAG,CAAC6H,QAAQ,CAACpL,GAAG,CAAC,CAAA;QACzCW,MAAM,GAAG2K,WAAW,CAAC3K,MAAM,CAAA;IAC/B,GAAA;IACA,EAAA,IAAIA,MAAM,KAAK9F,IAAI,CAACoI,QAAQ,CAACtC,MAAM,EAAE;IACjC,IAAA,MAAM,IAAIO,YAAY,CAAC,4BAA4B,EAAE;IAAEP,MAAAA,MAAAA;IAAO,KAAC,CAAC,CAAA;IACpE,GAAA;IACA,EAAA,MAAM4K,cAAc,GAAGH,QAAQ,CAACI,KAAK,EAAE,CAAA;IACvC;IACA,EAAA,MAAMC,YAAY,GAAG;IACjBxB,IAAAA,OAAO,EAAE,IAAIyB,OAAO,CAACH,cAAc,CAACtB,OAAO,CAAC;QAC5C5J,MAAM,EAAEkL,cAAc,CAAClL,MAAM;QAC7BsL,UAAU,EAAEJ,cAAc,CAACI,UAAAA;OAC9B,CAAA;IACD;MACA,MAAMC,oBAAoB,GAAGP,QAAQ,GAAGA,QAAQ,CAACI,YAAY,CAAC,GAAGA,YAAY,CAAA;IAC7E;IACA;IACA;IACA,EAAA,MAAMP,IAAI,GAAGH,kCAAkC,EAAE,GAC3CQ,cAAc,CAACL,IAAI,GACnB,MAAMK,cAAc,CAACM,IAAI,EAAE,CAAA;IACjC,EAAA,OAAO,IAAIZ,QAAQ,CAACC,IAAI,EAAEU,oBAAoB,CAAC,CAAA;IACnD;;ICvDA;IACA;IACA;IACA;IACA;IACA;IAEA,SAASE,WAAWA,CAACC,OAAO,EAAEC,YAAY,EAAE;IACxC,EAAA,MAAMC,WAAW,GAAG,IAAI1I,GAAG,CAACwI,OAAO,CAAC,CAAA;IACpC,EAAA,KAAK,MAAMG,KAAK,IAAIF,YAAY,EAAE;IAC9BC,IAAAA,WAAW,CAAC9C,YAAY,CAACgD,MAAM,CAACD,KAAK,CAAC,CAAA;IAC1C,GAAA;MACA,OAAOD,WAAW,CAACjJ,IAAI,CAAA;IAC3B,CAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAeoJ,sBAAsBA,CAACC,KAAK,EAAEnI,OAAO,EAAE8H,YAAY,EAAEM,YAAY,EAAE;MAC9E,MAAMC,kBAAkB,GAAGT,WAAW,CAAC5H,OAAO,CAAClE,GAAG,EAAEgM,YAAY,CAAC,CAAA;IACjE;IACA,EAAA,IAAI9H,OAAO,CAAClE,GAAG,KAAKuM,kBAAkB,EAAE;IACpC,IAAA,OAAOF,KAAK,CAAC7J,KAAK,CAAC0B,OAAO,EAAEoI,YAAY,CAAC,CAAA;IAC7C,GAAA;IACA;IACA,EAAA,MAAME,WAAW,GAAGlQ,MAAM,CAACmQ,MAAM,CAACnQ,MAAM,CAACmQ,MAAM,CAAC,EAAE,EAAEH,YAAY,CAAC,EAAE;IAAEI,IAAAA,YAAY,EAAE,IAAA;IAAK,GAAC,CAAC,CAAA;MAC1F,MAAMC,SAAS,GAAG,MAAMN,KAAK,CAAC9P,IAAI,CAAC2H,OAAO,EAAEsI,WAAW,CAAC,CAAA;IACxD,EAAA,KAAK,MAAMzD,QAAQ,IAAI4D,SAAS,EAAE;QAC9B,MAAMC,mBAAmB,GAAGd,WAAW,CAAC/C,QAAQ,CAAC/I,GAAG,EAAEgM,YAAY,CAAC,CAAA;QACnE,IAAIO,kBAAkB,KAAKK,mBAAmB,EAAE;IAC5C,MAAA,OAAOP,KAAK,CAAC7J,KAAK,CAACuG,QAAQ,EAAEuD,YAAY,CAAC,CAAA;IAC9C,KAAA;IACJ,GAAA;IACA,EAAA,OAAA;IACJ;;IC1CA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMO,QAAQ,CAAC;IACX;IACJ;IACA;IACI1L,EAAAA,WAAWA,GAAG;QACV,IAAI,CAAC2L,OAAO,GAAG,IAAInI,OAAO,CAAC,CAACoI,OAAO,EAAE/G,MAAM,KAAK;UAC5C,IAAI,CAAC+G,OAAO,GAAGA,OAAO,CAAA;UACtB,IAAI,CAAC/G,MAAM,GAAGA,MAAM,CAAA;IACxB,KAAC,CAAC,CAAA;IACN,GAAA;IACJ;;IC1BA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA,MAAMgH,mBAAmB,GAAG,IAAIC,GAAG,EAAE;;ICXrC;IACA;AACA;IACA;IACA;IACA;IACA;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAeC,0BAA0BA,GAAG;MACG;QACvClS,MAAM,CAACK,GAAG,CAAE,CAAe2R,aAAAA,EAAAA,mBAAmB,CAACpN,IAAK,CAAA,CAAA,CAAE,GACjD,CAAA,6BAAA,CAA8B,CAAC,CAAA;IACxC,GAAA;IACA,EAAA,KAAK,MAAMuN,QAAQ,IAAIH,mBAAmB,EAAE;IACxC,IAAA,MAAMG,QAAQ,EAAE,CAAA;QAC2B;IACvCnS,MAAAA,MAAM,CAACK,GAAG,CAAC8R,QAAQ,EAAE,cAAc,CAAC,CAAA;IACxC,KAAA;IACJ,GAAA;MAC2C;IACvCnS,IAAAA,MAAM,CAACK,GAAG,CAAC,6BAA6B,CAAC,CAAA;IAC7C,GAAA;IACJ;;IC/BA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS+R,OAAOA,CAACC,EAAE,EAAE;MACxB,OAAO,IAAI1I,OAAO,CAAEoI,OAAO,IAAKO,UAAU,CAACP,OAAO,EAAEM,EAAE,CAAC,CAAC,CAAA;IAC5D;;IChBA;IACA,IAAI;IACAxS,EAAAA,IAAI,CAAC,0BAA0B,CAAC,IAAIC,CAAC,EAAE,CAAA;IAC3C,CAAC,CACD,OAAOC,CAAC,EAAE;;ICLV;IACA;AACA;IACA;IACA;IACA;IACA;IAUA,SAASwS,SAASA,CAACC,KAAK,EAAE;MACtB,OAAO,OAAOA,KAAK,KAAK,QAAQ,GAAG,IAAI1I,OAAO,CAAC0I,KAAK,CAAC,GAAGA,KAAK,CAAA;IACjE,CAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,eAAe,CAAC;IAClB;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACItM,EAAAA,WAAWA,CAACuM,QAAQ,EAAEC,OAAO,EAAE;IAC3B,IAAA,IAAI,CAACC,UAAU,GAAG,EAAE,CAAA;IACpB;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACQ;IACR;IACA;IACA;IACA;IACA;IACA;IACQ;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACQ;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;QACmD;UACvCvL,kBAAM,CAACX,UAAU,CAACiM,OAAO,CAAC1J,KAAK,EAAE4J,eAAe,EAAE;IAC9C3Q,QAAAA,UAAU,EAAE,oBAAoB;IAChCC,QAAAA,SAAS,EAAE,iBAAiB;IAC5BC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,eAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;IACAL,IAAAA,MAAM,CAACmQ,MAAM,CAAC,IAAI,EAAEkB,OAAO,CAAC,CAAA;IAC5B,IAAA,IAAI,CAAC1J,KAAK,GAAG0J,OAAO,CAAC1J,KAAK,CAAA;QAC1B,IAAI,CAAC6J,SAAS,GAAGJ,QAAQ,CAAA;IACzB,IAAA,IAAI,CAACK,gBAAgB,GAAG,IAAIlB,QAAQ,EAAE,CAAA;QACtC,IAAI,CAACmB,uBAAuB,GAAG,EAAE,CAAA;IACjC;IACA;QACA,IAAI,CAACC,QAAQ,GAAG,CAAC,GAAGP,QAAQ,CAACQ,OAAO,CAAC,CAAA;IACrC,IAAA,IAAI,CAACC,eAAe,GAAG,IAAIvK,GAAG,EAAE,CAAA;IAChC,IAAA,KAAK,MAAMwK,MAAM,IAAI,IAAI,CAACH,QAAQ,EAAE;UAChC,IAAI,CAACE,eAAe,CAAC3H,GAAG,CAAC4H,MAAM,EAAE,EAAE,CAAC,CAAA;IACxC,KAAA;QACA,IAAI,CAACnK,KAAK,CAACc,SAAS,CAAC,IAAI,CAACgJ,gBAAgB,CAACjB,OAAO,CAAC,CAAA;IACvD,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,MAAMuB,KAAKA,CAACb,KAAK,EAAE;QACf,MAAM;IAAEvJ,MAAAA,KAAAA;IAAM,KAAC,GAAG,IAAI,CAAA;IACtB,IAAA,IAAIC,OAAO,GAAGqJ,SAAS,CAACC,KAAK,CAAC,CAAA;IAC9B,IAAA,IAAItJ,OAAO,CAACoK,IAAI,KAAK,UAAU,IAC3BrK,KAAK,YAAYsK,UAAU,IAC3BtK,KAAK,CAACuK,eAAe,EAAE;IACvB,MAAA,MAAMC,uBAAuB,GAAI,MAAMxK,KAAK,CAACuK,eAAgB,CAAA;IAC7D,MAAA,IAAIC,uBAAuB,EAAE;YACkB;IACvCzT,UAAAA,MAAM,CAACK,GAAG,CAAE,CAAA,0CAAA,CAA2C,GAClD,CAAA,CAAA,EAAGgI,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAE,GAAE,CAAC,CAAA;IAC3C,SAAA;IACA,QAAA,OAAOyO,uBAAuB,CAAA;IAClC,OAAA;IACJ,KAAA;IACA;IACA;IACA;IACA,IAAA,MAAMhF,eAAe,GAAG,IAAI,CAACiF,WAAW,CAAC,cAAc,CAAC,GAClDxK,OAAO,CAACsH,KAAK,EAAE,GACf,IAAI,CAAA;QACV,IAAI;UACA,KAAK,MAAMmD,EAAE,IAAI,IAAI,CAACC,gBAAgB,CAAC,kBAAkB,CAAC,EAAE;YACxD1K,OAAO,GAAG,MAAMyK,EAAE,CAAC;IAAEzK,UAAAA,OAAO,EAAEA,OAAO,CAACsH,KAAK,EAAE;IAAEvH,UAAAA,KAAAA;IAAM,SAAC,CAAC,CAAA;IAC3D,OAAA;SACH,CACD,OAAO8B,GAAG,EAAE;UACR,IAAIA,GAAG,YAAYjJ,KAAK,EAAE;IACtB,QAAA,MAAM,IAAIoE,YAAY,CAAC,iCAAiC,EAAE;cACtD/C,kBAAkB,EAAE4H,GAAG,CAAC5F,OAAAA;IAC5B,SAAC,CAAC,CAAA;IACN,OAAA;IACJ,KAAA;IACA;IACA;IACA;IACA,IAAA,MAAM0O,qBAAqB,GAAG3K,OAAO,CAACsH,KAAK,EAAE,CAAA;QAC7C,IAAI;IACA,MAAA,IAAIsD,aAAa,CAAA;IACjB;IACAA,MAAAA,aAAa,GAAG,MAAMT,KAAK,CAACnK,OAAO,EAAEA,OAAO,CAACoK,IAAI,KAAK,UAAU,GAAGhI,SAAS,GAAG,IAAI,CAACwH,SAAS,CAACiB,YAAY,CAAC,CAAA;UAC3G,IAAI,aAAoB,KAAK,YAAY,EAAE;IACvC/T,QAAAA,MAAM,CAACI,KAAK,CAAE,sBAAqB,GAC9B,CAAA,CAAA,EAAGiI,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAE,6BAA4B,GAC3D,CAAA,QAAA,EAAU8O,aAAa,CAACzO,MAAO,IAAG,CAAC,CAAA;IAC5C,OAAA;UACA,KAAK,MAAM8M,QAAQ,IAAI,IAAI,CAACyB,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;YAC7DE,aAAa,GAAG,MAAM3B,QAAQ,CAAC;cAC3BlJ,KAAK;IACLC,UAAAA,OAAO,EAAE2K,qBAAqB;IAC9BzD,UAAAA,QAAQ,EAAE0D,aAAAA;IACd,SAAC,CAAC,CAAA;IACN,OAAA;IACA,MAAA,OAAOA,aAAa,CAAA;SACvB,CACD,OAAOvT,KAAK,EAAE;UACiC;IACvCP,QAAAA,MAAM,CAACK,GAAG,CAAE,CAAA,oBAAA,CAAqB,GAC5B,CAAGgI,CAAAA,EAAAA,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAE,CAAkB,iBAAA,CAAA,EAAEzE,KAAK,CAAC,CAAA;IAClE,OAAA;IACA;IACA;IACA,MAAA,IAAIkO,eAAe,EAAE;IACjB,QAAA,MAAM,IAAI,CAACuF,YAAY,CAAC,cAAc,EAAE;IACpCzT,UAAAA,KAAK,EAAEA,KAAK;cACZ0I,KAAK;IACLwF,UAAAA,eAAe,EAAEA,eAAe,CAAC+B,KAAK,EAAE;cACxCtH,OAAO,EAAE2K,qBAAqB,CAACrD,KAAK,EAAA;IACxC,SAAC,CAAC,CAAA;IACN,OAAA;IACA,MAAA,MAAMjQ,KAAK,CAAA;IACf,KAAA;IACJ,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,MAAM0T,gBAAgBA,CAACzB,KAAK,EAAE;QAC1B,MAAMpC,QAAQ,GAAG,MAAM,IAAI,CAACiD,KAAK,CAACb,KAAK,CAAC,CAAA;IACxC,IAAA,MAAM0B,aAAa,GAAG9D,QAAQ,CAACI,KAAK,EAAE,CAAA;IACtC,IAAA,KAAK,IAAI,CAACzG,SAAS,CAAC,IAAI,CAACoK,QAAQ,CAAC3B,KAAK,EAAE0B,aAAa,CAAC,CAAC,CAAA;IACxD,IAAA,OAAO9D,QAAQ,CAAA;IACnB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,MAAMgE,UAAUA,CAAC5S,GAAG,EAAE;IAClB,IAAA,MAAM0H,OAAO,GAAGqJ,SAAS,CAAC/Q,GAAG,CAAC,CAAA;IAC9B,IAAA,IAAImN,cAAc,CAAA;QAClB,MAAM;UAAElJ,SAAS;IAAE6L,MAAAA,YAAAA;SAAc,GAAG,IAAI,CAACwB,SAAS,CAAA;QAClD,MAAMuB,gBAAgB,GAAG,MAAM,IAAI,CAACC,WAAW,CAACpL,OAAO,EAAE,MAAM,CAAC,CAAA;IAChE,IAAA,MAAMqL,iBAAiB,GAAGjT,MAAM,CAACmQ,MAAM,CAACnQ,MAAM,CAACmQ,MAAM,CAAC,EAAE,EAAEH,YAAY,CAAC,EAAE;IAAE7L,MAAAA,SAAAA;IAAU,KAAC,CAAC,CAAA;QACvFkJ,cAAc,GAAG,MAAM6F,MAAM,CAAChN,KAAK,CAAC6M,gBAAgB,EAAEE,iBAAiB,CAAC,CAAA;QAC7B;IACvC,MAAA,IAAI5F,cAAc,EAAE;IAChB3O,QAAAA,MAAM,CAACI,KAAK,CAAE,CAA8BqF,4BAAAA,EAAAA,SAAU,IAAG,CAAC,CAAA;IAC9D,OAAC,MACI;IACDzF,QAAAA,MAAM,CAACI,KAAK,CAAE,CAA+BqF,6BAAAA,EAAAA,SAAU,IAAG,CAAC,CAAA;IAC/D,OAAA;IACJ,KAAA;QACA,KAAK,MAAM0M,QAAQ,IAAI,IAAI,CAACyB,gBAAgB,CAAC,0BAA0B,CAAC,EAAE;IACtEjF,MAAAA,cAAc,GACV,CAAC,MAAMwD,QAAQ,CAAC;YACZ1M,SAAS;YACT6L,YAAY;YACZ3C,cAAc;IACdzF,QAAAA,OAAO,EAAEmL,gBAAgB;YACzBpL,KAAK,EAAE,IAAI,CAACA,KAAAA;WACf,CAAC,KAAKqC,SAAS,CAAA;IACxB,KAAA;IACA,IAAA,OAAOqD,cAAc,CAAA;IACzB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI,EAAA,MAAMwF,QAAQA,CAAC3S,GAAG,EAAE4O,QAAQ,EAAE;IAC1B,IAAA,MAAMlH,OAAO,GAAGqJ,SAAS,CAAC/Q,GAAG,CAAC,CAAA;IAC9B;IACA;QACA,MAAM4Q,OAAO,CAAC,CAAC,CAAC,CAAA;QAChB,MAAMiC,gBAAgB,GAAG,MAAM,IAAI,CAACC,WAAW,CAACpL,OAAO,EAAE,OAAO,CAAC,CAAA;QACtB;UACvC,IAAImL,gBAAgB,CAAC1T,MAAM,IAAI0T,gBAAgB,CAAC1T,MAAM,KAAK,KAAK,EAAE;IAC9D,QAAA,MAAM,IAAIuF,YAAY,CAAC,kCAAkC,EAAE;IACvDlB,UAAAA,GAAG,EAAEqD,cAAc,CAACgM,gBAAgB,CAACrP,GAAG,CAAC;cACzCrE,MAAM,EAAE0T,gBAAgB,CAAC1T,MAAAA;IAC7B,SAAC,CAAC,CAAA;IACN,OAAA;IACA;UACA,MAAM8T,IAAI,GAAGrE,QAAQ,CAACnB,OAAO,CAACrE,GAAG,CAAC,MAAM,CAAC,CAAA;IACzC,MAAA,IAAI6J,IAAI,EAAE;IACNzU,QAAAA,MAAM,CAACI,KAAK,CAAE,oBAAmBiI,cAAc,CAACgM,gBAAgB,CAACrP,GAAG,CAAE,CAAE,CAAA,CAAA,GACnE,gBAAeyP,IAAK,CAAA,UAAA,CAAW,GAC/B,CAAiE,gEAAA,CAAA,GACjE,0DAAyD,CAAC,CAAA;IACnE,OAAA;IACJ,KAAA;QACA,IAAI,CAACrE,QAAQ,EAAE;UACgC;IACvCpQ,QAAAA,MAAM,CAACO,KAAK,CAAE,CAAA,uCAAA,CAAwC,GACjD,CAAA,CAAA,EAAG8H,cAAc,CAACgM,gBAAgB,CAACrP,GAAG,CAAE,IAAG,CAAC,CAAA;IACrD,OAAA;IACA,MAAA,MAAM,IAAIkB,YAAY,CAAC,4BAA4B,EAAE;IACjDlB,QAAAA,GAAG,EAAEqD,cAAc,CAACgM,gBAAgB,CAACrP,GAAG,CAAA;IAC5C,OAAC,CAAC,CAAA;IACN,KAAA;QACA,MAAM0P,eAAe,GAAG,MAAM,IAAI,CAACC,0BAA0B,CAACvE,QAAQ,CAAC,CAAA;QACvE,IAAI,CAACsE,eAAe,EAAE;UACyB;IACvC1U,QAAAA,MAAM,CAACI,KAAK,CAAE,CAAA,UAAA,EAAYiI,cAAc,CAACgM,gBAAgB,CAACrP,GAAG,CAAE,CAAG,EAAA,CAAA,GAC7D,CAAoB,mBAAA,CAAA,EAAE0P,eAAe,CAAC,CAAA;IAC/C,OAAA;IACA,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;QACA,MAAM;UAAEjP,SAAS;IAAE6L,MAAAA,YAAAA;SAAc,GAAG,IAAI,CAACwB,SAAS,CAAA;QAClD,MAAMzB,KAAK,GAAG,MAAMxR,IAAI,CAAC2U,MAAM,CAACI,IAAI,CAACnP,SAAS,CAAC,CAAA;IAC/C,IAAA,MAAMoP,sBAAsB,GAAG,IAAI,CAACnB,WAAW,CAAC,gBAAgB,CAAC,CAAA;IACjE,IAAA,MAAMoB,WAAW,GAAGD,sBAAsB,GACpC,MAAMzD,sBAAsB;IAC9B;IACA;IACA;IACAC,IAAAA,KAAK,EAAEgD,gBAAgB,CAAC7D,KAAK,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAEc,YAAY,CAAC,GACjE,IAAI,CAAA;QACiC;IACvCtR,MAAAA,MAAM,CAACI,KAAK,CAAE,CAAA,cAAA,EAAgBqF,SAAU,CAA6B,4BAAA,CAAA,GAChE,CAAM4C,IAAAA,EAAAA,cAAc,CAACgM,gBAAgB,CAACrP,GAAG,CAAE,GAAE,CAAC,CAAA;IACvD,KAAA;QACA,IAAI;IACA,MAAA,MAAMqM,KAAK,CAAC0D,GAAG,CAACV,gBAAgB,EAAEQ,sBAAsB,GAAGH,eAAe,CAAClE,KAAK,EAAE,GAAGkE,eAAe,CAAC,CAAA;SACxG,CACD,OAAOnU,KAAK,EAAE;UACV,IAAIA,KAAK,YAAYuB,KAAK,EAAE;IACxB;IACA,QAAA,IAAIvB,KAAK,CAACkD,IAAI,KAAK,oBAAoB,EAAE;IACrC,UAAA,MAAMyO,0BAA0B,EAAE,CAAA;IACtC,SAAA;IACA,QAAA,MAAM3R,KAAK,CAAA;IACf,OAAA;IACJ,KAAA;QACA,KAAK,MAAM4R,QAAQ,IAAI,IAAI,CAACyB,gBAAgB,CAAC,gBAAgB,CAAC,EAAE;IAC5D,MAAA,MAAMzB,QAAQ,CAAC;YACX1M,SAAS;YACTqP,WAAW;IACXE,QAAAA,WAAW,EAAEN,eAAe,CAAClE,KAAK,EAAE;IACpCtH,QAAAA,OAAO,EAAEmL,gBAAgB;YACzBpL,KAAK,EAAE,IAAI,CAACA,KAAAA;IAChB,OAAC,CAAC,CAAA;IACN,KAAA;IACA,IAAA,OAAO,IAAI,CAAA;IACf,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI,EAAA,MAAMqL,WAAWA,CAACpL,OAAO,EAAEoK,IAAI,EAAE;QAC7B,MAAM9R,GAAG,GAAI,CAAE0H,EAAAA,OAAO,CAAClE,GAAI,CAAA,GAAA,EAAKsO,IAAK,CAAC,CAAA,CAAA;IACtC,IAAA,IAAI,CAAC,IAAI,CAACV,UAAU,CAACpR,GAAG,CAAC,EAAE;UACvB,IAAI6S,gBAAgB,GAAGnL,OAAO,CAAA;UAC9B,KAAK,MAAMiJ,QAAQ,IAAI,IAAI,CAACyB,gBAAgB,CAAC,oBAAoB,CAAC,EAAE;IAChES,QAAAA,gBAAgB,GAAG9B,SAAS,CAAC,MAAMJ,QAAQ,CAAC;cACxCmB,IAAI;IACJpK,UAAAA,OAAO,EAAEmL,gBAAgB;cACzBpL,KAAK,EAAE,IAAI,CAACA,KAAK;IACjB;IACAqB,UAAAA,MAAM,EAAE,IAAI,CAACA,MAAM;IACvB,SAAC,CAAC,CAAC,CAAA;IACP,OAAA;;IACA,MAAA,IAAI,CAACsI,UAAU,CAACpR,GAAG,CAAC,GAAG6S,gBAAgB,CAAA;IAC3C,KAAA;IACA,IAAA,OAAO,IAAI,CAACzB,UAAU,CAACpR,GAAG,CAAC,CAAA;IAC/B,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;MACIkS,WAAWA,CAACjQ,IAAI,EAAE;QACd,KAAK,MAAM2P,MAAM,IAAI,IAAI,CAACN,SAAS,CAACI,OAAO,EAAE;UACzC,IAAIzP,IAAI,IAAI2P,MAAM,EAAE;IAChB,QAAA,OAAO,IAAI,CAAA;IACf,OAAA;IACJ,KAAA;IACA,IAAA,OAAO,KAAK,CAAA;IAChB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI,EAAA,MAAMY,YAAYA,CAACvQ,IAAI,EAAEyN,KAAK,EAAE;QAC5B,KAAK,MAAMiB,QAAQ,IAAI,IAAI,CAACyB,gBAAgB,CAACnQ,IAAI,CAAC,EAAE;IAChD;IACA;UACA,MAAM0O,QAAQ,CAACjB,KAAK,CAAC,CAAA;IACzB,KAAA;IACJ,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,CAAC0C,gBAAgBA,CAACnQ,IAAI,EAAE;QACpB,KAAK,MAAM2P,MAAM,IAAI,IAAI,CAACN,SAAS,CAACI,OAAO,EAAE;IACzC,MAAA,IAAI,OAAOE,MAAM,CAAC3P,IAAI,CAAC,KAAK,UAAU,EAAE;YACpC,MAAM+K,KAAK,GAAG,IAAI,CAAC2E,eAAe,CAACvI,GAAG,CAACwI,MAAM,CAAC,CAAA;YAC9C,MAAM6B,gBAAgB,GAAI/D,KAAK,IAAK;IAChC,UAAA,MAAMgE,aAAa,GAAG5T,MAAM,CAACmQ,MAAM,CAACnQ,MAAM,CAACmQ,MAAM,CAAC,EAAE,EAAEP,KAAK,CAAC,EAAE;IAAE1C,YAAAA,KAAAA;IAAM,WAAC,CAAC,CAAA;IACxE;IACA;IACA,UAAA,OAAO4E,MAAM,CAAC3P,IAAI,CAAC,CAACyR,aAAa,CAAC,CAAA;aACrC,CAAA;IACD,QAAA,MAAMD,gBAAgB,CAAA;IAC1B,OAAA;IACJ,KAAA;IACJ,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIlL,SAASA,CAAC+H,OAAO,EAAE;IACf,IAAA,IAAI,CAACkB,uBAAuB,CAACtI,IAAI,CAACoH,OAAO,CAAC,CAAA;IAC1C,IAAA,OAAOA,OAAO,CAAA;IAClB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,MAAMqD,WAAWA,GAAG;IAChB,IAAA,IAAIrD,OAAO,CAAA;QACX,OAAQA,OAAO,GAAG,IAAI,CAACkB,uBAAuB,CAACoC,KAAK,EAAE,EAAG;IACrD,MAAA,MAAMtD,OAAO,CAAA;IACjB,KAAA;IACJ,GAAA;IACA;IACJ;IACA;IACA;IACIuD,EAAAA,OAAOA,GAAG;IACN,IAAA,IAAI,CAACtC,gBAAgB,CAAChB,OAAO,CAAC,IAAI,CAAC,CAAA;IACvC,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,MAAM4C,0BAA0BA,CAACvE,QAAQ,EAAE;QACvC,IAAIsE,eAAe,GAAGtE,QAAQ,CAAA;QAC9B,IAAIkF,WAAW,GAAG,KAAK,CAAA;QACvB,KAAK,MAAMnD,QAAQ,IAAI,IAAI,CAACyB,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;IAC7Dc,MAAAA,eAAe,GACX,CAAC,MAAMvC,QAAQ,CAAC;YACZjJ,OAAO,EAAE,IAAI,CAACA,OAAO;IACrBkH,QAAAA,QAAQ,EAAEsE,eAAe;YACzBzL,KAAK,EAAE,IAAI,CAACA,KAAAA;WACf,CAAC,KAAKqC,SAAS,CAAA;IACpBgK,MAAAA,WAAW,GAAG,IAAI,CAAA;UAClB,IAAI,CAACZ,eAAe,EAAE;IAClB,QAAA,MAAA;IACJ,OAAA;IACJ,KAAA;QACA,IAAI,CAACY,WAAW,EAAE;IACd,MAAA,IAAIZ,eAAe,IAAIA,eAAe,CAACrP,MAAM,KAAK,GAAG,EAAE;IACnDqP,QAAAA,eAAe,GAAGpJ,SAAS,CAAA;IAC/B,OAAA;UAC2C;IACvC,QAAA,IAAIoJ,eAAe,EAAE;IACjB,UAAA,IAAIA,eAAe,CAACrP,MAAM,KAAK,GAAG,EAAE;IAChC,YAAA,IAAIqP,eAAe,CAACrP,MAAM,KAAK,CAAC,EAAE;IAC9BrF,cAAAA,MAAM,CAACM,IAAI,CAAE,CAAA,kBAAA,EAAoB,IAAI,CAAC4I,OAAO,CAAClE,GAAI,CAAG,EAAA,CAAA,GAChD,CAAyD,wDAAA,CAAA,GACzD,mDAAkD,CAAC,CAAA;IAC5D,aAAC,MACI;IACDhF,cAAAA,MAAM,CAACI,KAAK,CAAE,qBAAoB,IAAI,CAAC8I,OAAO,CAAClE,GAAI,CAAG,EAAA,CAAA,GACjD,8BAA6BoL,QAAQ,CAAC/K,MAAO,CAAa,YAAA,CAAA,GAC1D,wBAAuB,CAAC,CAAA;IACjC,aAAA;IACJ,WAAA;IACJ,SAAA;IACJ,OAAA;IACJ,KAAA;IACA,IAAA,OAAOqP,eAAe,CAAA;IAC1B,GAAA;IACJ;;ICngBA;IACA;AACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;IACA,MAAMa,QAAQ,CAAC;IACX;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIpP,EAAAA,WAAWA,CAACwM,OAAO,GAAG,EAAE,EAAE;IACtB;IACR;IACA;IACA;IACA;IACA;IACA;QACQ,IAAI,CAAClN,SAAS,GAAGyH,UAAU,CAACM,cAAc,CAACmF,OAAO,CAAClN,SAAS,CAAC,CAAA;IAC7D;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,IAAA,IAAI,CAACyN,OAAO,GAAGP,OAAO,CAACO,OAAO,IAAI,EAAE,CAAA;IACpC;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,IAAA,IAAI,CAACa,YAAY,GAAGpB,OAAO,CAACoB,YAAY,CAAA;IACxC;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,IAAA,IAAI,CAACzC,YAAY,GAAGqB,OAAO,CAACrB,YAAY,CAAA;IAC5C,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIhK,MAAMA,CAACqL,OAAO,EAAE;QACZ,MAAM,CAAC6C,YAAY,CAAC,GAAG,IAAI,CAACC,SAAS,CAAC9C,OAAO,CAAC,CAAA;IAC9C,IAAA,OAAO6C,YAAY,CAAA;IACvB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIC,SAASA,CAAC9C,OAAO,EAAE;IACf;QACA,IAAIA,OAAO,YAAYY,UAAU,EAAE;IAC/BZ,MAAAA,OAAO,GAAG;IACN1J,QAAAA,KAAK,EAAE0J,OAAO;YACdzJ,OAAO,EAAEyJ,OAAO,CAACzJ,OAAAA;WACpB,CAAA;IACL,KAAA;IACA,IAAA,MAAMD,KAAK,GAAG0J,OAAO,CAAC1J,KAAK,CAAA;IAC3B,IAAA,MAAMC,OAAO,GAAG,OAAOyJ,OAAO,CAACzJ,OAAO,KAAK,QAAQ,GAC7C,IAAIY,OAAO,CAAC6I,OAAO,CAACzJ,OAAO,CAAC,GAC5ByJ,OAAO,CAACzJ,OAAO,CAAA;QACrB,MAAMoB,MAAM,GAAG,QAAQ,IAAIqI,OAAO,GAAGA,OAAO,CAACrI,MAAM,GAAGgB,SAAS,CAAA;IAC/D,IAAA,MAAMlE,OAAO,GAAG,IAAIqL,eAAe,CAAC,IAAI,EAAE;UAAExJ,KAAK;UAAEC,OAAO;IAAEoB,MAAAA,MAAAA;IAAO,KAAC,CAAC,CAAA;QACrE,MAAMkL,YAAY,GAAG,IAAI,CAACE,YAAY,CAACtO,OAAO,EAAE8B,OAAO,EAAED,KAAK,CAAC,CAAA;IAC/D,IAAA,MAAM0M,WAAW,GAAG,IAAI,CAACC,cAAc,CAACJ,YAAY,EAAEpO,OAAO,EAAE8B,OAAO,EAAED,KAAK,CAAC,CAAA;IAC9E;IACA,IAAA,OAAO,CAACuM,YAAY,EAAEG,WAAW,CAAC,CAAA;IACtC,GAAA;IACA,EAAA,MAAMD,YAAYA,CAACtO,OAAO,EAAE8B,OAAO,EAAED,KAAK,EAAE;IACxC,IAAA,MAAM7B,OAAO,CAAC4M,YAAY,CAAC,kBAAkB,EAAE;UAAE/K,KAAK;IAAEC,MAAAA,OAAAA;IAAQ,KAAC,CAAC,CAAA;QAClE,IAAIkH,QAAQ,GAAG9E,SAAS,CAAA;QACxB,IAAI;UACA8E,QAAQ,GAAG,MAAM,IAAI,CAACyF,OAAO,CAAC3M,OAAO,EAAE9B,OAAO,CAAC,CAAA;IAC/C;IACA;IACA;UACA,IAAI,CAACgJ,QAAQ,IAAIA,QAAQ,CAACvK,IAAI,KAAK,OAAO,EAAE;IACxC,QAAA,MAAM,IAAIK,YAAY,CAAC,aAAa,EAAE;cAAElB,GAAG,EAAEkE,OAAO,CAAClE,GAAAA;IAAI,SAAC,CAAC,CAAA;IAC/D,OAAA;SACH,CACD,OAAOzE,KAAK,EAAE;UACV,IAAIA,KAAK,YAAYuB,KAAK,EAAE;YACxB,KAAK,MAAMqQ,QAAQ,IAAI/K,OAAO,CAACwM,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;cAChExD,QAAQ,GAAG,MAAM+B,QAAQ,CAAC;gBAAE5R,KAAK;gBAAE0I,KAAK;IAAEC,YAAAA,OAAAA;IAAQ,WAAC,CAAC,CAAA;IACpD,UAAA,IAAIkH,QAAQ,EAAE;IACV,YAAA,MAAA;IACJ,WAAA;IACJ,SAAA;IACJ,OAAA;UACA,IAAI,CAACA,QAAQ,EAAE;IACX,QAAA,MAAM7P,KAAK,CAAA;IACf,OAAC,MAC+C;YAC5CP,MAAM,CAACK,GAAG,CAAE,CAAuBgI,qBAAAA,EAAAA,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAE,CAAA,GAAA,CAAI,GAC9D,CAAA,GAAA,EAAKzE,KAAK,YAAYuB,KAAK,GAAGvB,KAAK,CAAC4H,QAAQ,EAAE,GAAG,EAAG,CAAA,uDAAA,CAAwD,GAC5G,CAAA,yBAAA,CAA0B,CAAC,CAAA;IACpC,OAAA;IACJ,KAAA;QACA,KAAK,MAAMgK,QAAQ,IAAI/K,OAAO,CAACwM,gBAAgB,CAAC,oBAAoB,CAAC,EAAE;UACnExD,QAAQ,GAAG,MAAM+B,QAAQ,CAAC;YAAElJ,KAAK;YAAEC,OAAO;IAAEkH,QAAAA,QAAAA;IAAS,OAAC,CAAC,CAAA;IAC3D,KAAA;IACA,IAAA,OAAOA,QAAQ,CAAA;IACnB,GAAA;MACA,MAAMwF,cAAcA,CAACJ,YAAY,EAAEpO,OAAO,EAAE8B,OAAO,EAAED,KAAK,EAAE;IACxD,IAAA,IAAImH,QAAQ,CAAA;IACZ,IAAA,IAAI7P,KAAK,CAAA;QACT,IAAI;UACA6P,QAAQ,GAAG,MAAMoF,YAAY,CAAA;SAChC,CACD,OAAOjV,KAAK,EAAE;IACV;IACA;IACA;IAAA,KAAA;QAEJ,IAAI;IACA,MAAA,MAAM6G,OAAO,CAAC4M,YAAY,CAAC,mBAAmB,EAAE;YAC5C/K,KAAK;YACLC,OAAO;IACPkH,QAAAA,QAAAA;IACJ,OAAC,CAAC,CAAA;UACF,MAAMhJ,OAAO,CAAC+N,WAAW,EAAE,CAAA;SAC9B,CACD,OAAOW,cAAc,EAAE;UACnB,IAAIA,cAAc,YAAYhU,KAAK,EAAE;IACjCvB,QAAAA,KAAK,GAAGuV,cAAc,CAAA;IAC1B,OAAA;IACJ,KAAA;IACA,IAAA,MAAM1O,OAAO,CAAC4M,YAAY,CAAC,oBAAoB,EAAE;UAC7C/K,KAAK;UACLC,OAAO;UACPkH,QAAQ;IACR7P,MAAAA,KAAK,EAAEA,KAAAA;IACX,KAAC,CAAC,CAAA;QACF6G,OAAO,CAACiO,OAAO,EAAE,CAAA;IACjB,IAAA,IAAI9U,KAAK,EAAE;IACP,MAAA,MAAMA,KAAK,CAAA;IACf,KAAA;IACJ,GAAA;IACJ,CAAA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;ICnOA;IACA;AACA;IACA;IACA;IACA;IACA;IAQA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMwV,gBAAgB,SAASR,QAAQ,CAAC;IACpC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIpP,EAAAA,WAAWA,CAACwM,OAAO,GAAG,EAAE,EAAE;QACtBA,OAAO,CAAClN,SAAS,GAAGyH,UAAU,CAACI,eAAe,CAACqF,OAAO,CAAClN,SAAS,CAAC,CAAA;QACjE,KAAK,CAACkN,OAAO,CAAC,CAAA;QACd,IAAI,CAACqD,kBAAkB,GACnBrD,OAAO,CAACsD,iBAAiB,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI,CAAA;IACtD;IACA;IACA;IACA;QACA,IAAI,CAAC/C,OAAO,CAACxI,IAAI,CAACqL,gBAAgB,CAACG,sCAAsC,CAAC,CAAA;IAC9E,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACI,EAAA,MAAML,OAAOA,CAAC3M,OAAO,EAAE9B,OAAO,EAAE;QAC5B,MAAMgJ,QAAQ,GAAG,MAAMhJ,OAAO,CAACgN,UAAU,CAAClL,OAAO,CAAC,CAAA;IAClD,IAAA,IAAIkH,QAAQ,EAAE;IACV,MAAA,OAAOA,QAAQ,CAAA;IACnB,KAAA;IACA;IACA;QACA,IAAIhJ,OAAO,CAAC6B,KAAK,IAAI7B,OAAO,CAAC6B,KAAK,CAACpD,IAAI,KAAK,SAAS,EAAE;UACnD,OAAO,MAAM,IAAI,CAACsQ,cAAc,CAACjN,OAAO,EAAE9B,OAAO,CAAC,CAAA;IACtD,KAAA;IACA;IACA;QACA,OAAO,MAAM,IAAI,CAACgP,YAAY,CAAClN,OAAO,EAAE9B,OAAO,CAAC,CAAA;IACpD,GAAA;IACA,EAAA,MAAMgP,YAAYA,CAAClN,OAAO,EAAE9B,OAAO,EAAE;IACjC,IAAA,IAAIgJ,QAAQ,CAAA;IACZ,IAAA,MAAM9F,MAAM,GAAIlD,OAAO,CAACkD,MAAM,IAAI,EAAG,CAAA;IACrC;QACA,IAAI,IAAI,CAAC0L,kBAAkB,EAAE;UACkB;IACvChW,QAAAA,MAAM,CAACM,IAAI,CAAE,6BAA4B,GACpC,CAAA,EAAE+H,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAE,OAAM,IAAI,CAACS,SAAU,CAAU,SAAA,CAAA,GAC7D,qCAAoC,CAAC,CAAA;IAC9C,OAAA;IACA,MAAA,MAAM4Q,mBAAmB,GAAG/L,MAAM,CAACgM,SAAS,CAAA;IAC5C,MAAA,MAAMC,kBAAkB,GAAGrN,OAAO,CAACoN,SAAS,CAAA;IAC5C,MAAA,MAAME,mBAAmB,GAAG,CAACD,kBAAkB,IAAIA,kBAAkB,KAAKF,mBAAmB,CAAA;IAC7F;IACA;UACAjG,QAAQ,GAAG,MAAMhJ,OAAO,CAACiM,KAAK,CAAC,IAAIvJ,OAAO,CAACZ,OAAO,EAAE;YAChDoN,SAAS,EAAEpN,OAAO,CAACoK,IAAI,KAAK,SAAS,GAC/BiD,kBAAkB,IAAIF,mBAAmB,GACzC/K,SAAAA;IACV,OAAC,CAAC,CAAC,CAAA;IACH;IACA;IACA;IACA;IACA;IACA;IACA;UACA,IAAI+K,mBAAmB,IACnBG,mBAAmB,IACnBtN,OAAO,CAACoK,IAAI,KAAK,SAAS,EAAE;YAC5B,IAAI,CAACmD,qCAAqC,EAAE,CAAA;IAC5C,QAAA,MAAMC,SAAS,GAAG,MAAMtP,OAAO,CAAC+M,QAAQ,CAACjL,OAAO,EAAEkH,QAAQ,CAACI,KAAK,EAAE,CAAC,CAAA;YACxB;IACvC,UAAA,IAAIkG,SAAS,EAAE;IACX1W,YAAAA,MAAM,CAACK,GAAG,CAAE,CAAA,eAAA,EAAiBgI,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAE,CAAE,CAAA,CAAA,GACtD,oCAAmC,CAAC,CAAA;IAC7C,WAAA;IACJ,SAAA;IACJ,OAAA;IACJ,KAAC,MACI;IACD;IACA;IACA,MAAA,MAAM,IAAIkB,YAAY,CAAC,wBAAwB,EAAE;YAC7CT,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBT,GAAG,EAAEkE,OAAO,CAAClE,GAAAA;IACjB,OAAC,CAAC,CAAA;IACN,KAAA;QAC2C;IACvC,MAAA,MAAM+I,QAAQ,GAAGzD,MAAM,CAACyD,QAAQ,KAAK,MAAM3G,OAAO,CAACkN,WAAW,CAACpL,OAAO,EAAE,MAAM,CAAC,CAAC,CAAA;IAChF;IACA;UACAlJ,MAAM,CAACQ,cAAc,CAAE,CAA8B,6BAAA,CAAA,GAAG6H,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAC,CAAC,CAAA;IACpFhF,MAAAA,MAAM,CAACK,GAAG,CAAE,CAA6BgI,2BAAAA,EAAAA,cAAc,CAAC0F,QAAQ,YAAYjE,OAAO,GAAGiE,QAAQ,CAAC/I,GAAG,GAAG+I,QAAQ,CAAE,EAAC,CAAC,CAAA;IACjH/N,MAAAA,MAAM,CAACQ,cAAc,CAAE,CAAA,0BAAA,CAA2B,CAAC,CAAA;IACnDR,MAAAA,MAAM,CAACK,GAAG,CAAC6I,OAAO,CAAC,CAAA;UACnBlJ,MAAM,CAACS,QAAQ,EAAE,CAAA;IACjBT,MAAAA,MAAM,CAACQ,cAAc,CAAE,CAAA,2BAAA,CAA4B,CAAC,CAAA;IACpDR,MAAAA,MAAM,CAACK,GAAG,CAAC+P,QAAQ,CAAC,CAAA;UACpBpQ,MAAM,CAACS,QAAQ,EAAE,CAAA;UACjBT,MAAM,CAACS,QAAQ,EAAE,CAAA;IACrB,KAAA;IACA,IAAA,OAAO2P,QAAQ,CAAA;IACnB,GAAA;IACA,EAAA,MAAM+F,cAAcA,CAACjN,OAAO,EAAE9B,OAAO,EAAE;QACnC,IAAI,CAACqP,qCAAqC,EAAE,CAAA;QAC5C,MAAMrG,QAAQ,GAAG,MAAMhJ,OAAO,CAACiM,KAAK,CAACnK,OAAO,CAAC,CAAA;IAC7C;IACA;IACA,IAAA,MAAMwN,SAAS,GAAG,MAAMtP,OAAO,CAAC+M,QAAQ,CAACjL,OAAO,EAAEkH,QAAQ,CAACI,KAAK,EAAE,CAAC,CAAA;QACnE,IAAI,CAACkG,SAAS,EAAE;IACZ;IACA;IACA,MAAA,MAAM,IAAIxQ,YAAY,CAAC,yBAAyB,EAAE;YAC9ClB,GAAG,EAAEkE,OAAO,CAAClE,GAAG;YAChBK,MAAM,EAAE+K,QAAQ,CAAC/K,MAAAA;IACrB,OAAC,CAAC,CAAA;IACN,KAAA;IACA,IAAA,OAAO+K,QAAQ,CAAA;IACnB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIqG,EAAAA,qCAAqCA,GAAG;QACpC,IAAIE,kBAAkB,GAAG,IAAI,CAAA;QAC7B,IAAIC,0BAA0B,GAAG,CAAC,CAAA;IAClC,IAAA,KAAK,MAAM,CAAC1O,KAAK,EAAEkL,MAAM,CAAC,IAAI,IAAI,CAACF,OAAO,CAAC2D,OAAO,EAAE,EAAE;IAClD;IACA,MAAA,IAAIzD,MAAM,KAAK2C,gBAAgB,CAACG,sCAAsC,EAAE;IACpE,QAAA,SAAA;IACJ,OAAA;IACA;IACA,MAAA,IAAI9C,MAAM,KAAK2C,gBAAgB,CAACe,iCAAiC,EAAE;IAC/DH,QAAAA,kBAAkB,GAAGzO,KAAK,CAAA;IAC9B,OAAA;UACA,IAAIkL,MAAM,CAAC2D,eAAe,EAAE;IACxBH,QAAAA,0BAA0B,EAAE,CAAA;IAChC,OAAA;IACJ,KAAA;QACA,IAAIA,0BAA0B,KAAK,CAAC,EAAE;UAClC,IAAI,CAAC1D,OAAO,CAACxI,IAAI,CAACqL,gBAAgB,CAACe,iCAAiC,CAAC,CAAA;SACxE,MACI,IAAIF,0BAA0B,GAAG,CAAC,IAAID,kBAAkB,KAAK,IAAI,EAAE;IACpE;UACA,IAAI,CAACzD,OAAO,CAACrH,MAAM,CAAC8K,kBAAkB,EAAE,CAAC,CAAC,CAAA;IAC9C,KAAA;IACA;IACJ,GAAA;IACJ,CAAA;;IACAZ,gBAAgB,CAACe,iCAAiC,GAAG;IACjD,EAAA,MAAMC,eAAeA,CAAC;IAAE3G,IAAAA,QAAAA;IAAS,GAAC,EAAE;QAChC,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAAC/K,MAAM,IAAI,GAAG,EAAE;IACrC,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;IACA,IAAA,OAAO+K,QAAQ,CAAA;IACnB,GAAA;IACJ,CAAC,CAAA;IACD2F,gBAAgB,CAACG,sCAAsC,GAAG;IACtD,EAAA,MAAMa,eAAeA,CAAC;IAAE3G,IAAAA,QAAAA;IAAS,GAAC,EAAE;QAChC,OAAOA,QAAQ,CAAC4G,UAAU,GAAG,MAAM7G,YAAY,CAACC,QAAQ,CAAC,GAAGA,QAAQ,CAAA;IACxE,GAAA;IACJ,CAAC;;IC7ND;IACA;AACA;IACA;IACA;IACA;IACA;IAaA;IACA;IACA;IACA;IACA;IACA,MAAM6G,kBAAkB,CAAC;IACrB;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI9Q,EAAAA,WAAWA,CAAC;QAAEV,SAAS;IAAEyN,IAAAA,OAAO,GAAG,EAAE;IAAE+C,IAAAA,iBAAiB,GAAG,IAAA;OAAO,GAAG,EAAE,EAAE;IACrE,IAAA,IAAI,CAACiB,gBAAgB,GAAG,IAAItO,GAAG,EAAE,CAAA;IACjC,IAAA,IAAI,CAACuO,iBAAiB,GAAG,IAAIvO,GAAG,EAAE,CAAA;IAClC,IAAA,IAAI,CAACwO,uBAAuB,GAAG,IAAIxO,GAAG,EAAE,CAAA;IACxC,IAAA,IAAI,CAACkK,SAAS,GAAG,IAAIiD,gBAAgB,CAAC;IAClCtQ,MAAAA,SAAS,EAAEyH,UAAU,CAACI,eAAe,CAAC7H,SAAS,CAAC;IAChDyN,MAAAA,OAAO,EAAE,CACL,GAAGA,OAAO,EACV,IAAItE,sBAAsB,CAAC;IAAEC,QAAAA,kBAAkB,EAAE,IAAA;IAAK,OAAC,CAAC,CAC3D;IACDoH,MAAAA,iBAAAA;IACJ,KAAC,CAAC,CAAA;IACF;QACA,IAAI,CAACoB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,CAAA;QACtC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC,CAAA;IAC5C,GAAA;IACA;IACJ;IACA;IACA;MACI,IAAI5E,QAAQA,GAAG;QACX,OAAO,IAAI,CAACI,SAAS,CAAA;IACzB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACItG,QAAQA,CAACqK,OAAO,EAAE;IACd,IAAA,IAAI,CAACW,cAAc,CAACX,OAAO,CAAC,CAAA;IAC5B,IAAA,IAAI,CAAC,IAAI,CAACY,+BAA+B,EAAE;UACvC5X,IAAI,CAACmJ,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACqO,OAAO,CAAC,CAAA;UAC9CxX,IAAI,CAACmJ,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACuO,QAAQ,CAAC,CAAA;UAChD,IAAI,CAACE,+BAA+B,GAAG,IAAI,CAAA;IAC/C,KAAA;IACJ,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;MACID,cAAcA,CAACX,OAAO,EAAE;QACuB;IACvCxP,MAAAA,kBAAM,CAAChB,OAAO,CAACwQ,OAAO,EAAE;IACpB3U,QAAAA,UAAU,EAAE,oBAAoB;IAChCC,QAAAA,SAAS,EAAE,oBAAoB;IAC/BC,QAAAA,QAAQ,EAAE,gBAAgB;IAC1BT,QAAAA,SAAS,EAAE,SAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;QACA,MAAM+V,eAAe,GAAG,EAAE,CAAA;IAC1B,IAAA,KAAK,MAAM5U,KAAK,IAAI+T,OAAO,EAAE;IACzB;IACA,MAAA,IAAI,OAAO/T,KAAK,KAAK,QAAQ,EAAE;IAC3B4U,QAAAA,eAAe,CAAChN,IAAI,CAAC5H,KAAK,CAAC,CAAA;WAC9B,MACI,IAAIA,KAAK,IAAIA,KAAK,CAACkL,QAAQ,KAAK1C,SAAS,EAAE;IAC5CoM,QAAAA,eAAe,CAAChN,IAAI,CAAC5H,KAAK,CAACkC,GAAG,CAAC,CAAA;IACnC,OAAA;UACA,MAAM;YAAE+I,QAAQ;IAAE/I,QAAAA,GAAAA;IAAI,OAAC,GAAG6I,cAAc,CAAC/K,KAAK,CAAC,CAAA;IAC/C,MAAA,MAAM6U,SAAS,GAAG,OAAO7U,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACkL,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAA;IACpF,MAAA,IAAI,IAAI,CAACkJ,gBAAgB,CAACvM,GAAG,CAAC3F,GAAG,CAAC,IAC9B,IAAI,CAACkS,gBAAgB,CAACtM,GAAG,CAAC5F,GAAG,CAAC,KAAK+I,QAAQ,EAAE;IAC7C,QAAA,MAAM,IAAI7H,YAAY,CAAC,uCAAuC,EAAE;cAC5DlD,UAAU,EAAE,IAAI,CAACkU,gBAAgB,CAACtM,GAAG,CAAC5F,GAAG,CAAC;IAC1C/B,UAAAA,WAAW,EAAE8K,QAAAA;IACjB,SAAC,CAAC,CAAA;IACN,OAAA;UACA,IAAI,OAAOjL,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACwT,SAAS,EAAE;YAC9C,IAAI,IAAI,CAACc,uBAAuB,CAACzM,GAAG,CAACoD,QAAQ,CAAC,IAC1C,IAAI,CAACqJ,uBAAuB,CAACxM,GAAG,CAACmD,QAAQ,CAAC,KAAKjL,KAAK,CAACwT,SAAS,EAAE;IAChE,UAAA,MAAM,IAAIpQ,YAAY,CAAC,2CAA2C,EAAE;IAChElB,YAAAA,GAAAA;IACJ,WAAC,CAAC,CAAA;IACN,SAAA;YACA,IAAI,CAACoS,uBAAuB,CAAC5L,GAAG,CAACuC,QAAQ,EAAEjL,KAAK,CAACwT,SAAS,CAAC,CAAA;IAC/D,OAAA;UACA,IAAI,CAACY,gBAAgB,CAAC1L,GAAG,CAACxG,GAAG,EAAE+I,QAAQ,CAAC,CAAA;UACxC,IAAI,CAACoJ,iBAAiB,CAAC3L,GAAG,CAACxG,GAAG,EAAE2S,SAAS,CAAC,CAAA;IAC1C,MAAA,IAAID,eAAe,CAACrM,MAAM,GAAG,CAAC,EAAE;IAC5B,QAAA,MAAMuM,cAAc,GAAI,CAA6C,4CAAA,CAAA,GAChE,CAAQF,MAAAA,EAAAA,eAAe,CAACvW,IAAI,CAAC,IAAI,CAAE,CAAA,8BAAA,CAA+B,GAClE,CAAyC,wCAAA,CAAA,CAAA;YAMzC;IACDnB,UAAAA,MAAM,CAACM,IAAI,CAACsX,cAAc,CAAC,CAAA;IAC/B,SAAA;IACJ,OAAA;IACJ,KAAA;IACJ,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIP,OAAOA,CAACpO,KAAK,EAAE;IACX;IACA;IACA,IAAA,OAAOc,SAAS,CAACd,KAAK,EAAE,YAAY;IAChC,MAAA,MAAM4O,mBAAmB,GAAG,IAAIzJ,2BAA2B,EAAE,CAAA;UAC7D,IAAI,CAACsE,QAAQ,CAACQ,OAAO,CAACxI,IAAI,CAACmN,mBAAmB,CAAC,CAAA;IAC/C;IACA;UACA,KAAK,MAAM,CAAC7S,GAAG,EAAE+I,QAAQ,CAAC,IAAI,IAAI,CAACmJ,gBAAgB,EAAE;YACjD,MAAMZ,SAAS,GAAG,IAAI,CAACc,uBAAuB,CAACxM,GAAG,CAACmD,QAAQ,CAAC,CAAA;YAC5D,MAAM4J,SAAS,GAAG,IAAI,CAACR,iBAAiB,CAACvM,GAAG,CAAC5F,GAAG,CAAC,CAAA;IACjD,QAAA,MAAMkE,OAAO,GAAG,IAAIY,OAAO,CAAC9E,GAAG,EAAE;cAC7BsR,SAAS;IACTjF,UAAAA,KAAK,EAAEsG,SAAS;IAChBG,UAAAA,WAAW,EAAE,aAAA;IACjB,SAAC,CAAC,CAAA;YACF,MAAMnO,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC8I,QAAQ,CAAC+C,SAAS,CAAC;IACtCnL,UAAAA,MAAM,EAAE;IAAEyD,YAAAA,QAAAA;eAAU;cACpB7E,OAAO;IACPD,UAAAA,KAAAA;IACJ,SAAC,CAAC,CAAC,CAAA;IACP,OAAA;UACA,MAAM;YAAEoF,WAAW;IAAEC,QAAAA,cAAAA;IAAe,OAAC,GAAGuJ,mBAAmB,CAAA;UAChB;IACvCpI,QAAAA,mBAAmB,CAACpB,WAAW,EAAEC,cAAc,CAAC,CAAA;IACpD,OAAA;UACA,OAAO;YAAED,WAAW;IAAEC,QAAAA,cAAAA;WAAgB,CAAA;IAC1C,KAAC,CAAC,CAAA;IACN,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIiJ,QAAQA,CAACtO,KAAK,EAAE;IACZ;IACA;IACA,IAAA,OAAOc,SAAS,CAACd,KAAK,EAAE,YAAY;IAChC,MAAA,MAAMoI,KAAK,GAAG,MAAMxR,IAAI,CAAC2U,MAAM,CAACI,IAAI,CAAC,IAAI,CAAClC,QAAQ,CAACjN,SAAS,CAAC,CAAA;IAC7D,MAAA,MAAMsS,uBAAuB,GAAG,MAAM1G,KAAK,CAAC9P,IAAI,EAAE,CAAA;UAClD,MAAMyW,iBAAiB,GAAG,IAAI/F,GAAG,CAAC,IAAI,CAACiF,gBAAgB,CAACe,MAAM,EAAE,CAAC,CAAA;UACjE,MAAM7I,WAAW,GAAG,EAAE,CAAA;IACtB,MAAA,KAAK,MAAMlG,OAAO,IAAI6O,uBAAuB,EAAE;YAC3C,IAAI,CAACC,iBAAiB,CAACrN,GAAG,CAACzB,OAAO,CAAClE,GAAG,CAAC,EAAE;IACrC,UAAA,MAAMqM,KAAK,CAACF,MAAM,CAACjI,OAAO,CAAC,CAAA;IAC3BkG,UAAAA,WAAW,CAAC1E,IAAI,CAACxB,OAAO,CAAClE,GAAG,CAAC,CAAA;IACjC,SAAA;IACJ,OAAA;UAC2C;YACvCqK,mBAAmB,CAACD,WAAW,CAAC,CAAA;IACpC,OAAA;UACA,OAAO;IAAEA,QAAAA,WAAAA;WAAa,CAAA;IAC1B,KAAC,CAAC,CAAA;IACN,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACI8I,EAAAA,kBAAkBA,GAAG;QACjB,OAAO,IAAI,CAAChB,gBAAgB,CAAA;IAChC,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACIiB,EAAAA,aAAaA,GAAG;QACZ,OAAO,CAAC,GAAG,IAAI,CAACjB,gBAAgB,CAAC3V,IAAI,EAAE,CAAC,CAAA;IAC5C,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIyN,iBAAiBA,CAAChK,GAAG,EAAE;QACnB,MAAM8I,SAAS,GAAG,IAAIvF,GAAG,CAACvD,GAAG,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;QAC7C,OAAO,IAAI,CAACkP,gBAAgB,CAACtM,GAAG,CAACkD,SAAS,CAAC9F,IAAI,CAAC,CAAA;IACpD,GAAA;IACA;IACJ;IACA;IACA;IACA;MACIoQ,uBAAuBA,CAACrK,QAAQ,EAAE;IAC9B,IAAA,OAAO,IAAI,CAACqJ,uBAAuB,CAACxM,GAAG,CAACmD,QAAQ,CAAC,CAAA;IACrD,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACI,MAAMsK,aAAaA,CAACnP,OAAO,EAAE;QACzB,MAAMlE,GAAG,GAAGkE,OAAO,YAAYY,OAAO,GAAGZ,OAAO,CAAClE,GAAG,GAAGkE,OAAO,CAAA;IAC9D,IAAA,MAAM6E,QAAQ,GAAG,IAAI,CAACiB,iBAAiB,CAAChK,GAAG,CAAC,CAAA;IAC5C,IAAA,IAAI+I,QAAQ,EAAE;IACV,MAAA,MAAMsD,KAAK,GAAG,MAAMxR,IAAI,CAAC2U,MAAM,CAACI,IAAI,CAAC,IAAI,CAAClC,QAAQ,CAACjN,SAAS,CAAC,CAAA;IAC7D,MAAA,OAAO4L,KAAK,CAAC7J,KAAK,CAACuG,QAAQ,CAAC,CAAA;IAChC,KAAA;IACA,IAAA,OAAOzC,SAAS,CAAA;IACpB,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;MACIgN,uBAAuBA,CAACtT,GAAG,EAAE;IACzB,IAAA,MAAM+I,QAAQ,GAAG,IAAI,CAACiB,iBAAiB,CAAChK,GAAG,CAAC,CAAA;QAC5C,IAAI,CAAC+I,QAAQ,EAAE;IACX,MAAA,MAAM,IAAI7H,YAAY,CAAC,mBAAmB,EAAE;IAAElB,QAAAA,GAAAA;IAAI,OAAC,CAAC,CAAA;IACxD,KAAA;IACA,IAAA,OAAQ2N,OAAO,IAAK;IAChBA,MAAAA,OAAO,CAACzJ,OAAO,GAAG,IAAIY,OAAO,CAAC9E,GAAG,CAAC,CAAA;IAClC2N,MAAAA,OAAO,CAACrI,MAAM,GAAGhJ,MAAM,CAACmQ,MAAM,CAAC;IAAE1D,QAAAA,QAAAA;IAAS,OAAC,EAAE4E,OAAO,CAACrI,MAAM,CAAC,CAAA;IAC5D,MAAA,OAAO,IAAI,CAACoI,QAAQ,CAACpL,MAAM,CAACqL,OAAO,CAAC,CAAA;SACvC,CAAA;IACL,GAAA;IACJ;;IClSA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA,IAAI9D,kBAAkB,CAAA;IACtB;IACA;IACA;IACA;IACO,MAAM0J,6BAA6B,GAAGA,MAAM;MAC/C,IAAI,CAAC1J,kBAAkB,EAAE;QACrBA,kBAAkB,GAAG,IAAIoI,kBAAkB,EAAE,CAAA;IACjD,GAAA;IACA,EAAA,OAAOpI,kBAAkB,CAAA;IAC7B,CAAC;;ICnBD;IACA;AACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS2J,yBAAyBA,CAAC1K,SAAS,EAAE2K,2BAA2B,GAAG,EAAE,EAAE;IACnF;IACA;IACA,EAAA,KAAK,MAAM9W,SAAS,IAAI,CAAC,GAAGmM,SAAS,CAACK,YAAY,CAAC5M,IAAI,EAAE,CAAC,EAAE;IACxD,IAAA,IAAIkX,2BAA2B,CAACC,IAAI,CAAE9Q,MAAM,IAAKA,MAAM,CAAC/G,IAAI,CAACc,SAAS,CAAC,CAAC,EAAE;IACtEmM,MAAAA,SAAS,CAACK,YAAY,CAACgD,MAAM,CAACxP,SAAS,CAAC,CAAA;IAC5C,KAAA;IACJ,GAAA;IACA,EAAA,OAAOmM,SAAS,CAAA;IACpB;;IC7BA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,UAAU6K,qBAAqBA,CAAC3T,GAAG,EAAE;IAAEyT,EAAAA,2BAA2B,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC;IAAEG,EAAAA,cAAc,GAAG,YAAY;IAAEC,EAAAA,SAAS,GAAG,IAAI;IAAEC,EAAAA,eAAAA;IAAiB,CAAC,GAAG,EAAE,EAAE;MACzK,MAAMhL,SAAS,GAAG,IAAIvF,GAAG,CAACvD,GAAG,EAAEiD,QAAQ,CAACD,IAAI,CAAC,CAAA;MAC7C8F,SAAS,CAACiL,IAAI,GAAG,EAAE,CAAA;MACnB,MAAMjL,SAAS,CAAC9F,IAAI,CAAA;IACpB,EAAA,MAAMgR,uBAAuB,GAAGR,yBAAyB,CAAC1K,SAAS,EAAE2K,2BAA2B,CAAC,CAAA;MACjG,MAAMO,uBAAuB,CAAChR,IAAI,CAAA;MAClC,IAAI4Q,cAAc,IAAII,uBAAuB,CAAC7M,QAAQ,CAAC8M,QAAQ,CAAC,GAAG,CAAC,EAAE;QAClE,MAAMC,YAAY,GAAG,IAAI3Q,GAAG,CAACyQ,uBAAuB,CAAChR,IAAI,CAAC,CAAA;QAC1DkR,YAAY,CAAC/M,QAAQ,IAAIyM,cAAc,CAAA;QACvC,MAAMM,YAAY,CAAClR,IAAI,CAAA;IAC3B,GAAA;IACA,EAAA,IAAI6Q,SAAS,EAAE;QACX,MAAMM,QAAQ,GAAG,IAAI5Q,GAAG,CAACyQ,uBAAuB,CAAChR,IAAI,CAAC,CAAA;QACtDmR,QAAQ,CAAChN,QAAQ,IAAI,OAAO,CAAA;QAC5B,MAAMgN,QAAQ,CAACnR,IAAI,CAAA;IACvB,GAAA;IACA,EAAA,IAAI8Q,eAAe,EAAE;QACjB,MAAMM,cAAc,GAAGN,eAAe,CAAC;IAAE9T,MAAAA,GAAG,EAAE8I,SAAAA;IAAU,KAAC,CAAC,CAAA;IAC1D,IAAA,KAAK,MAAMuL,YAAY,IAAID,cAAc,EAAE;UACvC,MAAMC,YAAY,CAACrR,IAAI,CAAA;IAC3B,KAAA;IACJ,GAAA;IACJ;;ICzCA;IACA;AACA;IACA;IACA;IACA;IACA;IAMA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMsR,aAAa,SAAS/R,KAAK,CAAC;IAC9B;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIpB,EAAAA,WAAWA,CAAC0I,kBAAkB,EAAE8D,OAAO,EAAE;QACrC,MAAMnL,KAAK,GAAGA,CAAC;IAAE0B,MAAAA,OAAAA;IAAS,KAAC,KAAK;IAC5B,MAAA,MAAMqQ,eAAe,GAAG1K,kBAAkB,CAACqJ,kBAAkB,EAAE,CAAA;UAC/D,KAAK,MAAMsB,WAAW,IAAIb,qBAAqB,CAACzP,OAAO,CAAClE,GAAG,EAAE2N,OAAO,CAAC,EAAE;IACnE,QAAA,MAAM5E,QAAQ,GAAGwL,eAAe,CAAC3O,GAAG,CAAC4O,WAAW,CAAC,CAAA;IACjD,QAAA,IAAIzL,QAAQ,EAAE;IACV,UAAA,MAAMuI,SAAS,GAAGzH,kBAAkB,CAACuJ,uBAAuB,CAACrK,QAAQ,CAAC,CAAA;cACtE,OAAO;gBAAEA,QAAQ;IAAEuI,YAAAA,SAAAA;eAAW,CAAA;IAClC,SAAA;IACJ,OAAA;UAC2C;YACvCtW,MAAM,CAACI,KAAK,CAAE,CAAqC,oCAAA,CAAA,GAAGiI,cAAc,CAACa,OAAO,CAAClE,GAAG,CAAC,CAAC,CAAA;IACtF,OAAA;IACA,MAAA,OAAA;SACH,CAAA;IACD,IAAA,KAAK,CAACwC,KAAK,EAAEqH,kBAAkB,CAAC6D,QAAQ,CAAC,CAAA;IAC7C,GAAA;IACJ;;ICvDA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS+G,QAAQA,CAAC9G,OAAO,EAAE;MACvB,MAAM9D,kBAAkB,GAAG0J,6BAA6B,EAAE,CAAA;MAC1D,MAAMmB,aAAa,GAAG,IAAIJ,aAAa,CAACzK,kBAAkB,EAAE8D,OAAO,CAAC,CAAA;MACpElH,aAAa,CAACiO,aAAa,CAAC,CAAA;IAChC;;IC7BA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASlN,QAAQA,CAACqK,OAAO,EAAE;MACvB,MAAMhI,kBAAkB,GAAG0J,6BAA6B,EAAE,CAAA;IAC1D1J,EAAAA,kBAAkB,CAACrC,QAAQ,CAACqK,OAAO,CAAC,CAAA;IACxC;;IC/BA;IACA;AACA;IACA;IACA;IACA;IACA;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS8C,gBAAgBA,CAAC9C,OAAO,EAAElE,OAAO,EAAE;MACxCnG,QAAQ,CAACqK,OAAO,CAAC,CAAA;MACjB4C,QAAQ,CAAC9G,OAAO,CAAC,CAAA;IACrB;;IC3BA;IACA;AACA;IACA;IACA;IACA;IACA;IAEA,MAAMiH,iBAAiB,GAAG,YAAY,CAAA;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,oBAAoB,GAAG,OAAOC,mBAAmB,EAAEC,eAAe,GAAGH,iBAAiB,KAAK;MAC7F,MAAM1M,UAAU,GAAG,MAAMrN,IAAI,CAAC2U,MAAM,CAACjT,IAAI,EAAE,CAAA;IAC3C,EAAA,MAAMyY,kBAAkB,GAAG9M,UAAU,CAACH,MAAM,CAAEtH,SAAS,IAAK;QACxD,OAAQA,SAAS,CAACoB,QAAQ,CAACkT,eAAe,CAAC,IACvCtU,SAAS,CAACoB,QAAQ,CAAChH,IAAI,CAAC+M,YAAY,CAACC,KAAK,CAAC,IAC3CpH,SAAS,KAAKqU,mBAAmB,CAAA;IACzC,GAAC,CAAC,CAAA;IACF,EAAA,MAAMnQ,OAAO,CAACC,GAAG,CAACoQ,kBAAkB,CAACnQ,GAAG,CAAEpE,SAAS,IAAK5F,IAAI,CAAC2U,MAAM,CAACrD,MAAM,CAAC1L,SAAS,CAAC,CAAC,CAAC,CAAA;IACvF,EAAA,OAAOuU,kBAAkB,CAAA;IAC7B,CAAC;;ICpCD;IACA;AACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA,SAASC,qBAAqBA,GAAG;IAC7B;IACApa,EAAAA,IAAI,CAACmJ,gBAAgB,CAAC,UAAU,EAAIC,KAAK,IAAK;IAC1C,IAAA,MAAMxD,SAAS,GAAGyH,UAAU,CAACI,eAAe,EAAE,CAAA;QAC9CrE,KAAK,CAACc,SAAS,CAAC8P,oBAAoB,CAACpU,SAAS,CAAC,CAACwE,IAAI,CAAEiQ,aAAa,IAAK;UACzB;IACvC,QAAA,IAAIA,aAAa,CAAC7O,MAAM,GAAG,CAAC,EAAE;cAC1BrL,MAAM,CAACK,GAAG,CAAE,CAAA,oDAAA,CAAqD,GAC5D,CAAe,cAAA,CAAA,EAAE6Z,aAAa,CAAC,CAAA;IACxC,SAAA;IACJ,OAAA;IACJ,KAAC,CAAC,CAAC,CAAA;IACP,GAAC,CAAE,CAAA;IACP;;IC9BA;IACA;AACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,eAAe,SAAS5S,KAAK,CAAC;IAChC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIpB,WAAWA,CAACiB,OAAO,EAAE;QAAEgT,SAAS,GAAG,CAAC,GAAG,CAAC;IAAEC,IAAAA,QAAQ,GAAG,EAAA;OAAI,GAAG,EAAE,EAAE;QACjB;IACvChT,MAAAA,kBAAM,CAACP,cAAc,CAACsT,SAAS,EAAEvS,MAAM,EAAE;IACrC3F,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,iBAAiB;IAC5BC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,mBAAA;IACf,OAAC,CAAC,CAAA;IACF0F,MAAAA,kBAAM,CAACP,cAAc,CAACuT,QAAQ,EAAExS,MAAM,EAAE;IACpC3F,QAAAA,UAAU,EAAE,iBAAiB;IAC7BC,QAAAA,SAAS,EAAE,iBAAiB;IAC5BC,QAAAA,QAAQ,EAAE,aAAa;IACvBT,QAAAA,SAAS,EAAE,kBAAA;IACf,OAAC,CAAC,CAAA;IACN,KAAA;QACA,KAAK,CAAEgR,OAAO,IAAK,IAAI,CAAC2H,MAAM,CAAC3H,OAAO,CAAC,EAAEvL,OAAO,CAAC,CAAA;QACjD,IAAI,CAACmT,UAAU,GAAGH,SAAS,CAAA;QAC3B,IAAI,CAACI,SAAS,GAAGH,QAAQ,CAAA;IAC7B,GAAA;IACA;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIC,EAAAA,MAAMA,CAAC;QAAEtV,GAAG;IAAEkE,IAAAA,OAAAA;IAAQ,GAAC,EAAE;IACrB,IAAA,IAAIA,OAAO,IAAIA,OAAO,CAACoK,IAAI,KAAK,UAAU,EAAE;IACxC,MAAA,OAAO,KAAK,CAAA;IAChB,KAAA;QACA,MAAMmH,iBAAiB,GAAGzV,GAAG,CAACmH,QAAQ,GAAGnH,GAAG,CAAC0V,MAAM,CAAA;IACnD,IAAA,KAAK,MAAM9S,MAAM,IAAI,IAAI,CAAC4S,SAAS,EAAE;IACjC,MAAA,IAAI5S,MAAM,CAAC/G,IAAI,CAAC4Z,iBAAiB,CAAC,EAAE;YACW;IACvCza,UAAAA,MAAM,CAACK,GAAG,CAAE,CAAA,qBAAA,EAAuBoa,iBAAkB,CAAS,QAAA,CAAA,GACzD,CAA0D,yDAAA,CAAA,GAC1D,GAAE7S,MAAM,CAACO,QAAQ,EAAG,EAAC,CAAC,CAAA;IAC/B,SAAA;IACA,QAAA,OAAO,KAAK,CAAA;IAChB,OAAA;IACJ,KAAA;IACA,IAAA,IAAI,IAAI,CAACoS,UAAU,CAAC7B,IAAI,CAAE9Q,MAAM,IAAKA,MAAM,CAAC/G,IAAI,CAAC4Z,iBAAiB,CAAC,CAAC,EAAE;UACvB;YACvCza,MAAM,CAACI,KAAK,CAAE,CAAA,qBAAA,EAAuBqa,iBAAkB,CAAE,CAAA,CAAA,GAAI,gBAAe,CAAC,CAAA;IACjF,OAAA;IACA,MAAA,OAAO,IAAI,CAAA;IACf,KAAA;QAC2C;UACvCza,MAAM,CAACK,GAAG,CAAE,CAAuBoa,qBAAAA,EAAAA,iBAAkB,UAAS,GACzD,CAAA,qDAAA,CAAsD,GACtD,CAAA,oBAAA,CAAqB,CAAC,CAAA;IAC/B,KAAA;IACA,IAAA,OAAO,KAAK,CAAA;IAChB,GAAA;IACJ;;IC5GA;IACA;AACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASnC,uBAAuBA,CAACtT,GAAG,EAAE;MAClC,MAAM6J,kBAAkB,GAAG0J,6BAA6B,EAAE,CAAA;IAC1D,EAAA,OAAO1J,kBAAkB,CAACyJ,uBAAuB,CAACtT,GAAG,CAAC,CAAA;IAC1D;;;;;;;;;;;;"}